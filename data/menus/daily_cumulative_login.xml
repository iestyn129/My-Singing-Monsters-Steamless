<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<script src="scripts/DailyCumulativeLogin/DCL.lua"/>

	<template type="template_fade" name="Fade">
		<templateVar name="$layer" equals="FrontPopUps" />
		<templateVar name="$priority" equals="11" />
		<templateVar name="$touchPriority" equals="-7" />
		<templateVar name="$maxAlpha" equals="0.75" />
	</template>

	<!-- TODO: make this panel a template to customize the appearance based on the target island for the calendar -->
	<!--<template type="template_panel_decorated" name="MainPanel">-->
	<!-- for now we'll just specify it here -->
	<element name="MainPanel">
		<!-- <templateVar name="$layer" equals="FrontPopUps" /> -->
		<!-- <templateVar name="$startX" equals="50*game.hudScale()*0" /> -->
		<!-- <templateVar name="$endX" equals="50*game.hudScale()*0" /> -->
		<!-- should match with scrolling panel dimensions -->
		<size w="lua_sys.screenWidth() - lua_sys.deviceMarginX() * 2" h="lua_sys.screenHeight() - lua_sys.deviceMarginY() * 2" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="11" />

		<spriteComponent name="BG">
			<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="11" />
			<!-- calendar bg is 960x640 -->
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/menu/calendar_bg")
				component:setScale(Vector2(lua_sys.screenWidth() / 960.0, lua_sys.screenHeight() / 640.0))
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteComponent>

		<element name="Decorations">
			<size w="lua_sys.screenWidth()" h="lua_sys.screenHeight()" />
			<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="11" />

			<spriteSheetComponent name="Deco01">
				<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
				<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					--component("spriteName"):SetString("plant_BG_deco_upper_left")
					--component("sheetName"):SetString("xml_resources/colossal_calendar_plant_sheet.xml")
					component("size"):SetFloat(1.0*game.hudScale())
					component("layer"):SetString("FrontPopUps")
				</event>
			</spriteSheetComponent>

			<spriteSheetComponent name="Deco02">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="LEFT" />
			<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				--component("spriteName"):SetString("plant_BG_deco_lower_left")
				--component("sheetName"):SetString("xml_resources/colossal_calendar_plant_sheet.xml")
				component("size"):SetFloat(1.0*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
			</spriteSheetComponent>

			<spriteSheetComponent name="Deco03">
				<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
				<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					--component("spriteName"):SetString("plant_BG_deco_upper_right")
					--component("sheetName"):SetString("xml_resources/colossal_calendar_plant_sheet.xml")
					component("size"):SetFloat(1.0*game.hudScale())
					component("layer"):SetString("FrontPopUps")
				</event>
			</spriteSheetComponent>

			<element name="MotesLeft">
				<size w="120*game.menuScaleY()" h="lua_sys.screenHeight()"/>
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />

				<particleComponent name="Particles">
					<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
					<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
					<event name="onPostInit" params="component, element">
						<![CDATA[
							component("layer"):SetString("FrontPopUps")
							component("spawnWidth"):SetFloat(element:absW())
							component("spawnHeight"):SetFloat(element:absH())
							--component("psi"):SetString("particles/particle_motes.psi")
							--component("image"):SetString("gfx/particles/particle_mote")
							component:setScale(Vector2(game.menuScaleX(), game.menuScaleY()))
							component("prewarm"):SetFloat(5.0)
						]]>
					</event>
				</particleComponent>
			</element>

			<element name="MotesRight">
				<size w="120*game.menuScaleY()" h="lua_sys.screenHeight()"/>
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="RIGHT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />

				<particleComponent name="Particles">
					<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
					<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
					<event name="onPostInit" params="component, element">
						<![CDATA[
							component("layer"):SetString("FrontPopUps")
							component("spawnWidth"):SetFloat(element:absW())
							component("spawnHeight"):SetFloat(element:absH())
							--component("psi"):SetString("particles/particle_motes.psi")
							--component("image"):SetString("gfx/particles/particle_mote")
							component:setScale(Vector2(game.menuScaleX(), game.menuScaleY()))
							component("prewarm"):SetFloat(5.0)
						]]>
					</event>
				</particleComponent>
			</element>
		</element>

		<template type="template_spritesheetbutton" name="CloseButton">
			<templateVar name="$layer" equals="FrontPopUps" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
	
			<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="RIGHT" />
			<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="4*game.hudScale()" yOffset="12*game.hudScale()" priorityOffset="8" />
	
			<touchComponent name="Touch">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-6" />
				<event name="onTouchUp" params="component, element">
					<![CDATA[
						onTouchUp(component, element)
						element:onClose()
					]]>
				</event>
			</touchComponent>
		
			<spriteSheetComponent name="ButtonImage">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("spriteName"):SetString("button_no")
						component("sheetName"):SetString("xml_resources/context_buttons.xml")
						component("size"):SetFloat(0.5 * game.hudScale())
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</spriteSheetComponent>
			
			<textComponent name="Label">
				<size w="60*game.hudScale()" />
				<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		
				<event name="onInit" params="component, element">
					<![CDATA[
						component("autoScaleFactor"):SetFloat(0.001)
						component("autoScale"):SetInt(1)
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.25)
						component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("CONTEXTBAR_CLOSE_LABEL")
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>
	
			<function name="setVisible" params="element">
				<![CDATA[
					setVisible(element)
					element["ButtonImage"]("visible"):SetInt(1)
					element["Label"]("visible"):SetInt(1)
				]]>
			</function>
			
			<function name="setInvisible" params="element">
				<![CDATA[
					setInvisible(element)
					element["ButtonImage"]("visible"):SetInt(0)
					element["Label"]("visible"):SetInt(0)
				]]>
			</function>

		</template>
	
		<template type="template_spritesheetbutton" name="HelpButton">
			<templateVar name="$layer" equals="FrontPopUps" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
	
			<position relativeTo="CloseButton" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="4*game.hudScale()" yOffset="0*game.hudScale()" priorityOffset="0" />
	
			<touchComponent name="Touch">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-6" />
				<event name="onTouchUp" params="component, element">
					<![CDATA[
						onTouchUp(component, element)
						game.displayNotification("FIRST_COLOSSAL_CALENDAR_VISIT")
					]]>
				</event>
			</touchComponent>
		
			<spriteSheetComponent name="ButtonImage">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("spriteName"):SetString("button_info")
						component("sheetName"):SetString("xml_resources/context_buttons.xml")
						component("size"):SetFloat(0.5 * game.hudScale())
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</spriteSheetComponent>
			
			<textComponent name="Label">
				<size w="60*game.hudScale()" />
				<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		
				<event name="onInit" params="component, element">
					<![CDATA[
						component("autoScaleFactor"):SetFloat(0.001)
						component("autoScale"):SetInt(1)
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.25)
						component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("CONTEXTBAR_HELP_LABEL")
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>
	
			<function name="setVisible" params="element">
				<![CDATA[
					setVisible(element)
					element["ButtonImage"]("visible"):SetInt(1)
					element["Label"]("visible"):SetInt(1)
				]]>
			</function>
			
			<function name="setInvisible" params="element">
				<![CDATA[
					setInvisible(element)
					element["ButtonImage"]("visible"):SetInt(0)
					element["Label"]("visible"):SetInt(0)
				]]>
			</function>

		</template>

		<template type="template_spritesheetbutton" name="CatchUpButton">
			<templateVar name="$layer" equals="FrontPopUps" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
	
			<position relativeTo="HelpButton" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="4*game.hudScale()" yOffset="0*game.hudScale()" priorityOffset="0" />
	
			<touchComponent name="Touch">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-6" />
				<event name="onTouchUp" params="component, element">
					<![CDATA[
						onTouchUp(component, element)
						game.pushPopUp("daily_cumulative_login_catchup")
					]]>
				</event>
			</touchComponent>
		
			<spriteSheetComponent name="ButtonImage">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("spriteName"):SetString("button_finish")
						component("sheetName"):SetString("xml_resources/context_buttons.xml")
						component("size"):SetFloat(0.5 * game.hudScale())
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</spriteSheetComponent>
			
			<textComponent name="Label">
				<size w="60*game.hudScale()" />
				<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		
				<event name="onInit" params="component, element">
					<![CDATA[
						component("autoScaleFactor"):SetFloat(0.001)
						component("autoScale"):SetInt(1)
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.25)
						component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("ACTION_CATCHUP")
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>
	
			<function name="setVisible" params="element">
				<![CDATA[
					setVisible(element)
					element["ButtonImage"]("visible"):SetInt(1)
					element["Label"]("visible"):SetInt(1)
				]]>
			</function>
			
			<function name="setInvisible" params="element">
				<![CDATA[
					setInvisible(element)
					element["ButtonImage"]("visible"):SetInt(0)
					element["Label"]("visible"):SetInt(0)
				]]>
			</function>

		</template>

		<element name="TitleFrame">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="4*game.hudScale()" priorityOffset="-4" />
			<ninesliceComponent name="Sprite">
				<size w="460*game.hudScale()" h="30*game.hudScale()" />
				<event name="onInit" params="component, element">
					component("topHeight"):SetFloat(50.0)
					component("bottomHeight"):SetFloat(50.0)
					component("leftWidth"):SetFloat(50.0)
					component("rightWidth"):SetFloat(50.0)
					component("size"):SetFloat(0.45*game.hudScale())
					component("includeBorder"):SetInt(1)
					component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
					component("layer"):SetString("FrontPopUps")
					component("alpha"):SetFloat(1.0)
				</event>
			</ninesliceComponent>
		</element>

		<element name="TitleText">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="8*game.hudScale()" priorityOffset="-5" />
			<textComponent name="Text">
				<size w="440*game.hudScale()" h="30*game.hudScale()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component:setColor(0, 1, 0)
						component("size"):SetFloat(0.45*game.hudScale())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString(game.localizedUpper("DCL_TITLE"))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
						component("alpha"):SetFloat(1.0)
					]]>
				</event>
			</textComponent>
		</element>

		<element name="Layout">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<aeComponent name="Sprite">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("offsetCenter"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
						component:setScale(Vector2(0.45*game.menuScaleY(),0.45*game.menuScaleY()))	
						component("animationName"):SetString("xml_bin/colossal_calendar_plant.bin")
						component("animation"):SetString("calendar_idle")
						component:calculatePosition()
					]]>
				</event>
			</aeComponent>

			<aeComponent name="Reveal">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-3" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("offsetCenter"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
						component:setScale(Vector2(0.45*game.menuScaleY(),0.45*game.menuScaleY()))	
						component("animationName"):SetString("xml_bin/colossal_calendar_plant.bin")
						component("animation"):SetString("calendar_piece_01")
						component:calculatePosition()
						component("visible"):SetInt(0)
					]]>
				</event>
			</aeComponent>

			<aeComponent name="Shadow">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("offsetCenter"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
						component:setScale(Vector2(0.45*game.menuScaleY(),0.45*game.menuScaleY()))	
						
						local ShaderColorizeAndFade = include("ShaderColorizeAndFade")

						if ShaderColorizeAndFade then
							--use the colorize shader cause we can't set alpha on an AEAnim (since it's a keyed value)
							ShaderColorizeAndFade:getUniform("u_Factor"):setFloat(1.0)
							ShaderColorizeAndFade:getUniform("u_TargetColor"):setVec3(lua_sys.Vector3(0.0, 0.0, 0.0));
							ShaderColorizeAndFade:getUniform("u_Fade"):setFloat(0.5)
							component:setShader(ShaderColorizeAndFade)
						end

						component("animationName"):SetString("xml_bin/colossal_calendar_plant.bin")
						component("animation"):SetString("calendar_piece_01")
						component:calculatePosition()
						component("visible"):SetInt(0)
					]]>
				</event>
			</aeComponent>

		</element>

		<template type="template_spritesheetbutton" name="CollectButton">
			<templateVar name="$upSpriteName" equals="'button_invite'" />
			<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
			<templateVar name="$spriteScale" equals="0.45*game.hudScale()" />
			<templateVar name="$text" equals="LABEL_COLLECT" />
			<templateVar name="$textPadding" equals="8*game.hudScale()" />
			<templateVar name="$autoScale" equals="1" />
			<templateVar name="$layer" equals="'FrontPopUps'" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="4*game.menuScaleY()" priorityOffset="-3" />
			<touchComponent name="Touch">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-6" />
			</touchComponent>
		</template>

		<element name="NextCollectFrame">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="LEFT" />
			<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="64*game.hudScale()" yOffset="16*game.menuScaleY()" priorityOffset="-3" />
			<ninesliceComponent name="Sprite">
				<size w="280*game.hudScale()" h="30*game.hudScale()" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("topHeight"):SetFloat(50.0)
						component("bottomHeight"):SetFloat(50.0)
						component("leftWidth"):SetFloat(50.0)
						component("rightWidth"):SetFloat(50.0)
						component("size"):SetFloat(0.4*game.hudScale())
						component("includeBorder"):SetInt(1)
						component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
						component("layer"):SetString("FrontPopUps")
						component("alpha"):SetFloat(1.0)
					]]>
				</event>
			</ninesliceComponent>
		</element>

		<element name="NextCollectMessage">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="NextCollectFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="5*game.hudScale()" priorityOffset="-1" />
			<textComponent name="Text">
				<size w="260*game.hudScale()" h="30*game.hudScale()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component:setColor(0, 1, 0)
						component("size"):SetFloat(0.45*game.hudScale())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("NEXT_COLLECT_MESSAGE")
						component("autoScale"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
						component("alpha"):SetFloat(1.0)
					]]>
				</event>
			</textComponent>
		</element>

	<!-- </template> --> 
	</element>

	<element name="Rewards">

		<size w="lua_sys.screenWidth()" h="lua_sys.screenHeight() - lua_sys.deviceMarginY() * 2"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />

		<template type="template_fade" name="Fade">
			<templateVar name="$layer" equals="Tutorial" />
			<templateVar name="$priority" equals="1000" />
			<templateVar name="$touchPriority" equals="-1000" /> <!-- relative to priority -->
			<templateVar name="$maxAlpha" equals="0.75" />
			<templateVar name="$autoShow" equals="0"/>
			<touchComponent name="Touch"/>
		</template>

		<spriteComponent name="Flash">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onPostInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
					component:setScale(Vector2( element:absW() * 0.25, element:absH() * 0.25))
					component:setColor(1.0, 1.0, 1.0)
					component("layer"):SetString("Tutorial")
					component("alpha"):SetFloat(0)
					component("visible"):SetInt(0)
				]]>
			</event>
		</spriteComponent>

		<element name="RewardsBG">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
			<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="20" />
			<spriteComponent name="Sprite"/>
			<spriteComponent name="Pattern">
				<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
				<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			</spriteComponent>

			<element name="RewardsTopBar">
				<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
				<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
				<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-2" />
				<spriteComponent name="Sprite">
					<event name="onInit" params="component, element">
						<![CDATA[
							component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
							local height = 4 * game.hudScale()
							component:setScale(Vector2(lua_sys.screenWidth()*0.25, height*0.25))
							component:setColor(1.0, 1.0, 1.0)
							component("alpha"):SetFloat(1)
							component("layer"):SetString("Tutorial")
						]]>
					</event>
				</spriteComponent>
			</element>

			<element name="RewardsBottomBar">
				<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
				<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="LEFT" />
				<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-2" />
				<spriteComponent name="Sprite">						
					<event name="onInit" params="component, element">
						<![CDATA[
							component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
							local height = 4 * game.hudScale()
							component:setScale(Vector2(lua_sys.screenWidth()*0.25, height*0.25))
							component:setColor(1.0, 1.0, 1.0)
							component("alpha"):SetFloat(1)
							component("layer"):SetString("Tutorial")
						]]>
					</event>
				</spriteComponent>
			</element>

			<element name="ClaimInfo">
				<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
				<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
				<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="8*game.hudScale()" priorityOffset="-2" />
				<textComponent name="Text">
					
					<event name="onInit" params="component, element">
						<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTextFont())
							component:setColor(0.54, 0.67, 0.9)
							component("size"):SetFloat(0.45*game.hudScale())
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
							component("text"):SetString("CLAIM_REWARDS_FROM_MARKET")
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Tutorial")
							--component("alpha"):SetFloat(1.0)
							component:setShader(include("ShaderShinyFont1"))
						]]>
					</event>
				</textComponent>
			</element>

			<element name="ContinueLabel">
				<size dependentOnElement="element:name()" dependentOnComponent="Text" />
				<position relativeTo="ClaimInfo" vAnchor="BOTTOM" hAnchor="HCENTER" />
				<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="8*game.hudScale()" priorityOffset="0" />
				<textComponent name="Text">
					<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
					<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="5" yOffset="0" priorityOffset="-1" />
					<event name="onInit" params="component, element">
						<![CDATA[
							component("font"):Set(game.getTextFont())
							component("size"):SetFloat(0.3*game.hudScale())
							component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
							component("layer"):SetString("Tutorial")
							component("text"):SetString("TAP_TO_CONTINUE")
						]]>
					</event>
				</textComponent>
			</element>
		
		</element>

	</element>

	<element name="ViewButton">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="15" yOffset="15" priorityOffset="9" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("spriteName"):SetString("button_show_hud")
				component("alpha"):SetFloat(0.8)
				component("size"):SetFloat(0.5)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="LEFT" />
			<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-7" />
		</touchComponent>
		
	</element>

	<element name="QA_TestPanel" debug="1,0,0">
		<size w="64" h="192"/>
		<position relativeTo="MainPanel" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="8" yOffset="0" priorityOffset="-9" />

		<element name="Up">
			<size w="64" h="64"/>
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />

			<spriteSheetComponent name="Sprite">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):Set("button_base_grey")
					component("sheetName"):Set("xml_resources/context_buttons.xml")
					component("size"):SetFloat(0.55)
					component("layer"):SetString("FrontPopUps")
				</event> 
			</spriteSheetComponent>

			<textComponent name="Label">
				<size dependentOnElement="element:name()"/>
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0*game.hudScale()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("size"):SetFloat(1.0)
						component("text"):SetString("+")
						component("autoScaleFactor"):SetFloat(0.01)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>

			<touchComponent name="Touch">
				<size w="64" h="64"/>
			</touchComponent>			
		</element>

		<element name="Info">
			<size w="64" h="64"/>
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="64" priorityOffset="0" />

			<spriteSheetComponent name="Sprite">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):Set("button_base_grey")
					component("sheetName"):Set("xml_resources/context_buttons.xml")
					component("size"):SetFloat(0.55)
					component("layer"):SetString("FrontPopUps")
				</event> 
			</spriteSheetComponent>

			<textComponent name="Label">
				<size dependentOnElement="element:name()"/>
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0*game.hudScale()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("size"):SetFloat(0.35)
						component("text"):SetString("0")
						component("autoScaleFactor"):SetFloat(0.01)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>

			<touchComponent name="Touch">
				<size w="64" h="64"/>
			</touchComponent>	

		</element>

		<element name="Down">
			<size w="64" h="64"/>
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="128" priorityOffset="0" />
			
			<spriteSheetComponent name="Sprite">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):Set("button_base_grey")
					component("sheetName"):Set("xml_resources/context_buttons.xml")
					component("size"):SetFloat(0.55)
					component("layer"):SetString("FrontPopUps")
				</event> 
			</spriteSheetComponent>

			<textComponent name="Label">
				<size dependentOnElement="element:name()"/>
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0*game.hudScale()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("size"):SetFloat(1.0)
						component("text"):SetString("-")
						component("autoScaleFactor"):SetFloat(0.01)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("FrontPopUps")
					]]>
				</event>
			</textComponent>

			<touchComponent name="Touch">
				<size w="64" h="64"/>
			</touchComponent>			
		</element>

	</element>

	<!--
	<element name="TextEffectsTest">
		<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="100" priorityOffset="20" />
		<textComponent name="Text">
			
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("font"):Set("font_monstrous")
					--component("font"):Set("font_main_MSM")
					component:setColor(0.54, 0.67, 0.9)
					component("size"):SetFloat(0.45*game.hudScale())
					--component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("Come back everyday to collect your rewards!")
					component("autoScale"):SetInt(1)
					component("layer"):SetString("Tutorial")
					--component("alpha"):SetFloat(1.0)
					component:setShader(include("ShaderShinyWorld"))
				]]>
			</event>
		</textComponent>
	</element>
	-->

</menu>