<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<event name="onInit" params="element">
		element("timeToUnlock"):SetInt(0)
	</event>
	
	<event name="onPostInit" params="element">
		game.setLastTribePage(1)
		element["TopTribesList"]:DoStoredScript("repopulate")
		lua_sys.playSoundFx("audio/sfx/menu_slide.wav")
	</event>

	<event name="onTick" params="element, dt">		
	
		if(element["TopTribesList"]("locked"):GetInt() == 1) then
			if(element("timeToUnlock"):GetInt() &lt; 1) then
				element["TopTribesList"]("locked"):SetInt(0)
				element("timeToUnlock"):SetInt(0)
			else
				element("timeToUnlock"):SetInt(element("timeToUnlock"):GetInt() - 1)
			end
		end
	</event>
	
	<event name="queuePop" params="element">
		element:root():popPopUp()
	</event>
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="15" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(1)
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="Frame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="(lua_sys.screenWidth() * (0.5)) + (((-0.5) * lua_sys.screenWidth()))" yOffset="7*game.hudScale()" priorityOffset="10" />
		<ninesliceComponent name="Sprite">
			<size w="0.9*lua_sys.screenWidth()" h="275*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)				
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<ninesliceComponent name="Sprite">
			<size w="275*game.hudScale()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(49.0)
				component("bottomHeight"):SetFloat(49.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*game.hudScale())
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<textComponent name="Text">
			<size w="265*game.hudScale()" h="20*game.menuScaleY()"  />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-6" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(0.71, 0.45, 0.94)
				component("size"):SetFloat(0.40*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("TITLE_VISIT_TOP_TRIBAL_ISLANDS")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<textComponent name="PagesText">
			<size w="160*game.hudScale()" h="10*game.hudScale()"  />
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="5" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(1.0, 1.0, 1.0)
				component("size"):SetFloat(0.30*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.getLocalizedText("MENU_PAGE").." 0/0")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>

	<element name="TopTribesList">
		<size w="lua_sys.screenWidth()/5*4" h="135*game.menuScaleY()" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="26*game.menuScaleY()" priorityOffset="-5" />
		<event name="onInit" params="element">
			element("locked"):SetInt(0)
			element("MaxPages"):SetInt(1)
			element("NumEntries"):SetInt(0)
			element("Page"):SetInt(1)
		</event>
		<event name="repopulate" params="element">
			<![CDATA[
				local prevNumItems = element("NumEntries"):GetInt()
				
				local page = element("Page"):GetInt()
				local totalEntries = game.getTopTribeSize()
				
				for i = 0, prevNumItems - 1 do
					element:RemoveElement(element:GetElement("toptribeentry"..i))
				end
				
				--don't go past the number of top tribes we have
				while(((page - 1) * 3) >= totalEntries) do
					page = page - 1
				end
				
				if(page < 1) then
					page = 1
				end
				
				element("Page"):SetInt(page)
				element:DoStoredScript("populate")
				element:parent()["PageLeft"]:DoStoredScript("refresh")
				element:parent()["PageRight"]:DoStoredScript("refresh")
				element:parent()["PageBeginning"]:DoStoredScript("refresh")
				element:parent()["PageEnd"]:DoStoredScript("refresh")
			]]>
		</event>
		<event name="populate" params="element">
			<![CDATA[
				local page = element("Page"):GetInt()
				local tribes_per_page = 6
				local numItems = game.getTopTribeSize()
				local previous = nil
				local numThisPage = 0
				
				if(numItems > tribes_per_page) then
					numThisPage = numItems - ((page - 1) * tribes_per_page)
					
					if(numThisPage > tribes_per_page) then
						numThisPage = tribes_per_page
					end
				else
					numThisPage = numItems
				end
				
				element("NumEntries"):SetInt(numThisPage)
				element("MaxPages"):SetInt(math.ceil(numItems / tribes_per_page))
				
				--Having zero top tribes when this runs will result in zero pages, but even if you have no top tribes you still have 1 page
				if(element("MaxPages"):GetInt() == 0) then
					element("MaxPages"):SetInt(1)
				end
				
				element:parent()["TitleFrame"]["PagesText"]("text"):SetString(game.getLocalizedText("MENU_PAGE").." "..page.."/"..element("MaxPages"):GetInt())
				
				local startIndex = (page - 1) * tribes_per_page
				
				for i = 0, (numThisPage - 1) do
					local tribeEntry = menu:addTemplateElement("template_toptribalentry", "toptribeentry"..i, element)
					
					if(previous == nil) then
						tribeEntry:relativeTo(element)
						tribeEntry:setOrientation(lua_sys.MenuOrientation(0, 0, 4, lua_sys.HCENTER, lua_sys.TOP))
						tribeEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.TOP)
					else
						tribeEntry:relativeTo(previous:GetElement("BackgroundElement"))
						tribeEntry:setOrientation(lua_sys.MenuOrientation(0, 0, 0, lua_sys.LEFT, lua_sys.TOP))
						tribeEntry:setRelativeObjectAnchors(lua_sys.LEFT, lua_sys.BOTTOM)
					end
					
					previous = tribeEntry
					
					tribeEntry("greyColor"):SetInt(i % 2)
					tribeEntry("DisplayName"):SetString(game.getTopTribeName(i+startIndex))
					tribeEntry("MonsterType"):SetInt(game.getTopTribeChiefMonster(i+startIndex))
					tribeEntry("Level"):SetInt(game.getTopTribeRank(i+startIndex))
					tribeEntry("Key"):SetInt(game.getTopTribeID(i+startIndex))
					tribeEntry("entryNum"):SetInt(i+startIndex+1)
					tribeEntry:calculatePosition()
					tribeEntry:init()
					tribeEntry:postInit()
					tribeEntry:setPositionBroadcast(true)
				end
			]]>
		</event>
	</element>
	
	<template type="template_spritesheetbutton" name="PageLeft">
		<templateVar name="$upSpriteName" equals="'button_play'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.33*game.menuScaleY()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-30*game.menuScaleY()" priorityOffset="-2" />
		<event name="onPostInit" params="element">
			element:DoStoredScript("refresh")
			
			if(element["BoundsSprite"]("isSourceRotated"):GetInt() == 1) then
				element["BoundsSprite"]("vFlip"):SetInt(1)
			else
				element["BoundsSprite"]("hFlip"):SetInt(1)
			end
			
			if(element["UpSprite"]("isSourceRotated"):GetInt() == 1) then
				element["UpSprite"]("vFlip"):SetInt(1)
			else
				element["UpSprite"]("hFlip"):SetInt(1)
			end
			
			if(element["DownSprite"]("isSourceRotated"):GetInt() == 1) then
				element["DownSprite"]("vFlip"):SetInt(1)
			else
				element["DownSprite"]("hFlip"):SetInt(1)
			end
		</event>
		<event name="refresh" params="element">
		
			if(element:parent():GetElement("TopTribesList"):GetVar("MaxPages"):GetInt() == 1 or element:parent():GetElement("TopTribesList"):GetVar("Page"):GetInt() == 1) then
				element:DoStoredScript("setInvisible")
			else
				element:DoStoredScript("setVisible")
			end
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			element["BgElement"]["Touch"]("enabled"):SetInt(1)
			element["BgElement"]["Sprite"]("visible"):SetInt(1)
		</event>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element["BgElement"]["Touch"]("enabled"):SetInt(0)
			element["BgElement"]["Sprite"]("visible"):SetInt(0)
		</event>
		<element name="BgElement">
			<size w="35*game.menuScaleX()" h="90*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
			<ninesliceComponent name="Sprite">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("topHeight"):SetFloat(17.0)
					component("bottomHeight"):SetFloat(17.0)
					component("leftWidth"):SetFloat(17.0)
					component("rightWidth"):SetFloat(17.0)
					component("includeBorder"):SetInt(1)
					component("size"):SetFloat(0.5*game.hudScale())
					component("spriteName"):SetString("gfx/menu/button_vert_square01")
					component("layer"):SetString("MidPopUps")
				</event>
			</ninesliceComponent>
			<touchComponent name="Touch">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onTouchDown" params="component, element">
					element["Sprite"]:setColor(0.5, 0.5, 0.5)
					element:parent()["Touch"]:DoStoredScript("onTouchDown")
				</event>
				<event name="onTouchUp" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchUp")
				</event>
				<event name="onTouchRelease" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchRelease")
				</event>
			</touchComponent>
		</element>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
				
				local topTribesList = element:parent():GetElement("TopTribesList")
				
				if(topTribesList("locked"):GetInt() == 0) then
					topTribesList("locked"):SetInt(1)
					element:parent()("timeToUnlock"):SetInt(2)
					local curPage = topTribesList("Page"):GetInt()
					
					if(curPage &gt; 1) then
						curPage = curPage - 1
						topTribesList("Page"):SetInt(curPage)
						topTribesList:DoStoredScript("repopulate")
						element("enable"):SetInt(0)
					end
				end
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="PageRight">
		<templateVar name="$upSpriteName" equals="'button_play'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.33*game.menuScaleY()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-30*game.menuScaleY()" priorityOffset="-2" />
		<event name="onPostInit" params="element">
			element:DoStoredScript("refresh")
		</event>
		<event name="refresh" params="element">
			local maxPages = element:parent():GetElement("TopTribesList"):GetVar("MaxPages"):GetInt()
			if(maxPages == 1 or maxPages == element:parent():GetElement("TopTribesList"):GetVar("Page"):GetInt()) then
				element:DoStoredScript("setInvisible")
			else
				element:DoStoredScript("setVisible")
			end
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			element["BgElement"]["Touch"]("enabled"):SetInt(1)
			element["BgElement"]["Sprite"]("visible"):SetInt(1)
		</event>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element["BgElement"]["Touch"]("enabled"):SetInt(0)
			element["BgElement"]["Sprite"]("visible"):SetInt(0)
		</event>
		<element name="BgElement">
			<size w="35*game.menuScaleX()" h="90*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
			<ninesliceComponent name="Sprite">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("topHeight"):SetFloat(17.0)
					component("bottomHeight"):SetFloat(17.0)
					component("leftWidth"):SetFloat(17.0)
					component("rightWidth"):SetFloat(17.0)
					component("includeBorder"):SetInt(1)
					component("size"):SetFloat(0.5*game.hudScale())
					component("spriteName"):SetString("gfx/menu/button_vert_square01")
					component("layer"):SetString("MidPopUps")
				</event>
			</ninesliceComponent>
			<touchComponent name="Touch">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onTouchDown" params="component, element">
					element["Sprite"]:setColor(0.5, 0.5, 0.5)
					element:parent()["Touch"]:DoStoredScript("onTouchDown")
				</event>
				<event name="onTouchUp" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchUp")
				</event>
				<event name="onTouchRelease" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchRelease")
				</event>
			</touchComponent>
		</element>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
				
				local topTribesList = element:parent():GetElement("TopTribesList")
				
				if(topTribesList("locked"):GetInt() == 0) then
					topTribesList("locked"):SetInt(1)
					element:parent()("timeToUnlock"):SetInt(4)
					local curPage = topTribesList("Page"):GetInt()
					
					if(curPage &lt; topTribesList:GetVar("MaxPages"):GetInt()) then
						curPage = curPage + 1
						topTribesList("Page"):SetInt(curPage)
						topTribesList:DoStoredScript("repopulate")
						element("enable"):SetInt(0)
					end
				end
			</event>
		</touchComponent>		
	</template>
	
	<template type="template_spritesheetbutton" name="PageBeginning">
		<templateVar name="$upSpriteName" equals="'button_next'" />
		<templateVar name="$sheetName" equals="'xml_resources/context_buttons.xml'" />
		<templateVar name="$spriteScale" equals="0.33*game.menuScaleY()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="PageLeft" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="40*game.menuScaleY()" priorityOffset="0" />
		<event name="onPostInit" params="element">
			element:DoStoredScript("refresh")
			
			if(element["BoundsSprite"]("isSourceRotated"):GetInt() == 1) then
				element["BoundsSprite"]("vFlip"):SetInt(1)
			else
				element["BoundsSprite"]("hFlip"):SetInt(1)
			end
			
			if(element["UpSprite"]("isSourceRotated"):GetInt() == 1) then
				element["UpSprite"]("vFlip"):SetInt(1)
			else
				element["UpSprite"]("hFlip"):SetInt(1)
			end
			
			if(element["DownSprite"]("isSourceRotated"):GetInt() == 1) then
				element["DownSprite"]("vFlip"):SetInt(1)
			else
				element["DownSprite"]("hFlip"):SetInt(1)
			end
		</event>
		<event name="refresh" params="element">
			if(element:parent():GetElement("TopTribesList"):GetVar("MaxPages"):GetInt() == 1 or element:parent():GetElement("TopTribesList"):GetVar("Page"):GetInt() == 1) then
				element:DoStoredScript("setInvisible")
			else
				element:DoStoredScript("setVisible")
			end
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			element["BgElement"]["Touch"]("enabled"):SetInt(1)
			element["BgElement"]["Sprite"]("visible"):SetInt(1)
		</event>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element["BgElement"]["Touch"]("enabled"):SetInt(0)
			element["BgElement"]["Sprite"]("visible"):SetInt(0)
		</event>
		<element name="BgElement">
			<size w="35*game.menuScaleX()" h="35*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
			<ninesliceComponent name="Sprite">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("topHeight"):SetFloat(17.0)
					component("bottomHeight"):SetFloat(17.0)
					component("leftWidth"):SetFloat(17.0)
					component("rightWidth"):SetFloat(17.0)
					component("includeBorder"):SetInt(1)
					component("size"):SetFloat(0.5*game.hudScale())
					component("spriteName"):SetString("gfx/menu/button_vert_square01")
					component("layer"):SetString("MidPopUps")
				</event>
			</ninesliceComponent>
			<touchComponent name="Touch">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onTouchDown" params="component, element">
					element["Sprite"]:setColor(0.5, 0.5, 0.5)
					element:parent()["Touch"]:DoStoredScript("onTouchDown")
				</event>
				<event name="onTouchUp" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchUp")
				</event>
				<event name="onTouchRelease" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchRelease")
				</event>
			</touchComponent>
		</element>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
				
				local topTribesList = element:parent():GetElement("TopTribesList")
				
				if(topTribesList("locked"):GetInt() == 0) then
					topTribesList("locked"):SetInt(1)
					element:parent()("timeToUnlock"):SetInt(2)
					local curPage = topTribesList("Page"):GetInt()
					
					if(curPage &gt; 1) then
						curPage = 1
						topTribesList("Page"):SetInt(curPage)
						topTribesList:DoStoredScript("repopulate")
						element("enable"):SetInt(0)
					end
				end
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="PageEnd">
		<templateVar name="$upSpriteName" equals="'button_next'" />
		<templateVar name="$sheetName" equals="'xml_resources/context_buttons.xml'" />
		<templateVar name="$spriteScale" equals="0.33*game.menuScaleY()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="PageRight" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="40*game.menuScaleY()" priorityOffset="0" />
		<event name="onPostInit" params="element">
			element:DoStoredScript("refresh")
		</event>
		<event name="refresh" params="element">
			local maxPages = element:parent():GetElement("TopTribesList"):GetVar("MaxPages"):GetInt()
			if(maxPages == 1 or maxPages == element:parent():GetElement("TopTribesList"):GetVar("Page"):GetInt()) then
				element:DoStoredScript("setInvisible")
			else
				element:DoStoredScript("setVisible")
			end
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			element["BgElement"]["Touch"]("enabled"):SetInt(1)
			element["BgElement"]["Sprite"]("visible"):SetInt(1)
		</event>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element["BgElement"]["Touch"]("enabled"):SetInt(0)
			element["BgElement"]["Sprite"]("visible"):SetInt(0)
		</event>
		<element name="BgElement">
			<size w="35*game.menuScaleX()" h="35*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
			<ninesliceComponent name="Sprite">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("topHeight"):SetFloat(17.0)
					component("bottomHeight"):SetFloat(17.0)
					component("leftWidth"):SetFloat(17.0)
					component("rightWidth"):SetFloat(17.0)
					component("includeBorder"):SetInt(1)
					component("size"):SetFloat(0.5*game.hudScale())
					component("spriteName"):SetString("gfx/menu/button_vert_square01")
					component("layer"):SetString("MidPopUps")
				</event>
			</ninesliceComponent>
			<touchComponent name="Touch">
				<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onTouchDown" params="component, element">
					element["Sprite"]:setColor(0.5, 0.5, 0.5)
					element:parent()["Touch"]:DoStoredScript("onTouchDown")
				</event>
				<event name="onTouchUp" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchUp")
				</event>
				<event name="onTouchRelease" params="component, element">
					element["Sprite"]:setColor(1.0, 1.0, 1.0)
					element:parent()["Touch"]:DoStoredScript("onTouchRelease")
				</event>
			</touchComponent>
		</element>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["BgElement"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["BgElement"]["Sprite"]:setColor(1.0, 1.0, 1.0)
				
				local topTribesList = element:parent():GetElement("TopTribesList")
				
				if(topTribesList("locked"):GetInt() == 0) then
					topTribesList("locked"):SetInt(1)
					element:parent()("timeToUnlock"):SetInt(4)
					local curPage = topTribesList("Page"):GetInt()
					
					if(curPage &lt; topTribesList:GetVar("MaxPages"):GetInt()) then
						curPage = topTribesList:GetVar("MaxPages"):GetInt()
						topTribesList("Page"):SetInt(curPage)
						topTribesList:DoStoredScript("repopulate")
						element("enable"):SetInt(0)
					end
				end
			</event>
		</touchComponent>		
	</template>
</menu>