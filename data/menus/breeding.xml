<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<event name="onPostInit" params="element">
		<![CDATA[
		if(game.playerLevel() < game.torchUnlockLevel()) then
			element["BottomTorchFrame"]["Sprite"]("visible"):SetInt(0)
			element["TorchAnim"]["Sprite"]("visible"):SetInt(0)
			element["TorchText"]["Text"]("visible"):SetInt(0)
		end
		element:DoStoredScript("setLeftListActive")
		
		if(game.showBreedingPromoDesc()) then
			game.displayNotification(game.breedingPromoDescription())
			game.setShowedBreedingPromoDesc()
		end

		]]>
	</event>
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="11" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="LeftMonsterBg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="2*game.menuScaleX()" yOffset="-10" priorityOffset="6" />
		<ninesliceComponent name="Sprite">
			<size w="235*game.menuScaleX()" h="225*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
				game.setClipping("Clipping", 0, (element:absY() + element:parent():GetElement("LeftTitleFrame"):absH())*lua_sys.deviceScaleY(), lua_sys.screenWidth()*lua_sys.deviceScaleX(), (element:absH()-60)*lua_sys.deviceScaleY())
			</event>
		</ninesliceComponent>
		<touchComponent name="TouchLeftList">
			<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="4" />
			<event name="onTouchUp" params="component, element">
				element:parent():DoStoredScript("setLeftListActive")
			</event>
		</touchComponent>
	</element>
	
	<element name="LeftTitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="LeftMonsterBg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="235*game.menuScaleX()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<touchComponent name="TouchLeftList">
			<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchUp" params="component, element">
				element:parent():DoStoredScript("setLeftListActive")
			</event>
		</touchComponent>
	</element>
	
	<touchComponent name="TouchBlockerTop">
		<size w="lua_sys.screenWidth()" h="lua_sys.screenHeight()" />
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="6" />
	</touchComponent>
	
	<touchComponent name="TouchBlockerBot">
		<size w="lua_sys.screenWidth()" h="lua_sys.screenHeight()/2" />
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="LEFT" />
		<!-- priority 6 so we dont' block contextbar buttons, which are at priority 5 -->
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="6" />
	</touchComponent>

	
	<element name="LeftTitleText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="LeftTitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-25" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size h="35" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.35*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component:setColor(0.43, 0.98, 0.02)
				component("text"):SetString(game.getLocalizedText("MONSTER").." 1")
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="LeftMonsterList">
		<size w="235*game.menuScaleX()" h="(215*game.menuScaleY())-50" />
		<position relativeTo="LeftMonsterBg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<swipeComponent name="Swiper">
			<event name="onPostInit" params="component, element">
				component:GetVar("direction"):SetInt(lua_sys.MenuSwipeComponent_SwipeDirectionVertical)
				
				if(game.tutorialActive()) then
					component:GetVar("mode"):SetInt(lua_sys.MenuSwipeComponent_SwipeModeDisabled)
				else
					component:GetVar("mode"):SetInt(lua_sys.MenuSwipeComponent_SwipeModeFree)
				end
				
				component:GetVar("tSteps"):SetFloat(25.0)
				component:listenToTouches(element)
				
				local totalHeight = element("NumBreedable"):GetInt() * (element:parent():GetElement("leftBreedingEntry0"):absH() + 14)
				
				if(totalHeight &gt; element:absH()) then
					component:setScrollSize(totalHeight - element:absH())
				else
					component:setScrollSize(0)
				end
				
				--call this because otherwise positions don't get updated properly until the onTicks
				element:parent():setPositionBroadcast(true)

				local topSprite = element:parent():GetElement("LeftTitleFrame");

				element:parent():GetComponent("TouchBlockerTop"):setOrientation(lua_sys.MenuOrientation(0, -(topSprite:absY() + topSprite:absH() - 5), 6, lua_sys.LEFT, lua_sys.BOTTOM))
				element:parent():GetComponent("TouchBlockerTop"):setRelativeObjectAnchors(lua_sys.LEFT, lua_sys.TOP)
				
				
				local botSprite = element:parent():GetElement("LeftMonsterBg");
				
				element:parent():GetComponent("TouchBlockerBot"):setOrientation(lua_sys.MenuOrientation(0, (botSprite:absY() + botSprite:absH() - 10), 6, lua_sys.LEFT, lua_sys.TOP))
				element:parent():GetComponent("TouchBlockerBot"):setRelativeObjectAnchors(lua_sys.LEFT, lua_sys.TOP)

			</event>
			<event name="onTick" params="component, element, dt">
				local first = element:parent():GetElement("leftBreedingEntry0")
				if(first) then
					local offset = component:scrollOffset()
					if(first:getOrientationPosition().y ~= offset) then
						first:setOrientationPosition(Vector2(first("xOffset"):GetInt(), offset))
					end
				end
			</event>
			<event name="enableScrolling" params="component, element">
				component:GetVar("enableMouseScroll"):SetInt(1)
			</event>
			<event name="disableScrolling" params="component, element">
				component:GetVar("enableMouseScroll"):SetInt(0)
			</event>
		</swipeComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="LeftMonsterBg" dependentOnComponent="Sprite" />
			<event name="onInit" params="component, element">
				component("singleTouch"):SetInt(1)
			</event>
		</touchComponent>
		<event name="onInit" params="element">
			element("SelectedEntry"):SetString("")
			element("SelectedEntryID"):SetInt(0)
			element("NewSelectedEntry"):SetString("")
			element("NewSelectedEntryID"):SetInt(0)
			
			local monsterIds = game.breedingVector()
			local numMonsters = monsterIds:size()-1
			local previous = nil
			local numBreedable = 0
			
			for i=0,numMonsters do
				if include("BreedingRules").BreedableOnLeft(monsterIds[i]) then
					local breedingEntry = menu:addTemplateElement("template_breedingentry", "leftBreedingEntry"..numBreedable, element)
					
					breedingEntry("List"):SetString("LeftMonsterList")
					breedingEntry("MonsterID"):SetInt(monsterIds[i])
					breedingEntry("EntryNum"):SetInt(numBreedable)
					
					if(previous == nil) then
						breedingEntry:setParent(element)
						breedingEntry:setOrientation(lua_sys.MenuOrientation(16,0,4, lua_sys.HCENTER, lua_sys.TOP))
						breedingEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.TOP)
					else
						breedingEntry:setParent(previous)
						breedingEntry:setOrientation(lua_sys.MenuOrientation(0,14,0, lua_sys.HCENTER, lua_sys.TOP))
						breedingEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.BOTTOM)
					end
					
					previous = breedingEntry
					numBreedable = numBreedable + 1
					
					breedingEntry:init()
					breedingEntry:setPositionBroadcast(true)
				end
			end
			
			element("NumBreedable"):SetInt(numBreedable)
		</event>
		<event name="selectNewEntry" params="element">
			local oldEntryName = element("SelectedEntry"):GetString()
			local newEntryName = element("NewSelectedEntry"):GetString()
			local numBreedable = element("NumBreedable"):GetInt() - 1
			
			if((oldEntryName ~= "") and (oldEntryName ~= newEntryName)) then
				local oldEntry = element:parent():GetElement(oldEntryName)
				oldEntry["bg"]["GreySprite"]("visible"):SetInt(1)
				oldEntry["bg"]["YellowSprite"]("visible"):SetInt(0)
				
				for i=0,numBreedable do
					local rightEntry = element:parent():GetElement("rightBreedingEntry"..i)
					if(rightEntry ~= nil) then
						if((game.monsterType(oldEntry("MonsterID"):GetInt()) == game.monsterType(rightEntry("MonsterID"):GetInt())) and (game.monsterLevel(rightEntry("MonsterID"):GetInt()) &gt; 3)) then
							rightEntry:DoStoredScript("enableEntry")
						end
					end
				end
			end
			
			if(oldEntryName ~= newEntryName) then
				local newEntry = element:parent():GetElement(newEntryName)
				element("SelectedEntry"):SetString(newEntryName)
				element("SelectedEntryID"):SetInt(newEntry("MonsterID"):GetInt())
				
				if(not game.isLegendaryShuggaIsland()) then					
					for i=0,numBreedable do
						local rightEntry = element:parent():GetElement("rightBreedingEntry"..i)
						
						if(rightEntry ~= nil) then
							if(game.monsterType(newEntry("MonsterID"):GetInt()) == game.monsterType(rightEntry("MonsterID"):GetInt())) then
								rightEntry:DoStoredScript("disableEntry")
							end
						end
					end
				end
			end
		</event>
		<event name="entryTouched" params="element">
			element:parent():DoStoredScript("setLeftListActive")
		</event>
	</element>
	
	<element name="RightMonsterBg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="2*game.menuScaleX()" yOffset="-10" priorityOffset="6" />
		<ninesliceComponent name="Sprite">
			<size w="235*game.menuScaleX()" h="225*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<touchComponent name="TouchRightList">
			<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="4" />
			<event name="onTouchUp" params="component, element">
				element:parent():DoStoredScript("setRightListActive")
			</event>
		</touchComponent>
	</element>
	
	<element name="RightTitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="RightMonsterBg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="235*game.menuScaleX()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<touchComponent name="TouchRightList">
			<size dependentOnElement="element:name()" />
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchUp" params="component, element">
				element:parent():DoStoredScript("setRightListActive")
			</event>
		</touchComponent>
	</element>
	
	<element name="RightTitleText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="RightTitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="25" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size h="35" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.35*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component:setColor(0.43, 0.98, 0.02)
				component("text"):SetString(game.getLocalizedText("MONSTER").." 2")
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="RightMonsterList">
		<size w="235*game.menuScaleX()" h="(215*game.menuScaleY())-50" />
		<position relativeTo="RightMonsterBg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<swipeComponent name="Swiper">
			<event name="onPostInit" params="component, element">
				component:GetVar("direction"):SetInt(lua_sys.MenuSwipeComponent_SwipeDirectionVertical)
				if(game.tutorialActive()) then
					component:GetVar("mode"):SetInt(lua_sys.MenuSwipeComponent_SwipeModeDisabled)
				else
					component:GetVar("mode"):SetInt(lua_sys.MenuSwipeComponent_SwipeModeFree)
				end
				component:GetVar("tSteps"):SetFloat(25.0)
				component:listenToTouches(element)
				
				local totalHeight = element("NumBreedable"):GetInt() * (element:parent():GetElement("rightBreedingEntry0"):absH() + 14)

				if(totalHeight &gt; element:absH()) then
					component:setScrollSize(totalHeight - element:absH())
				else
					component:setScrollSize(0)
				end	
			</event>
			<event name="onTick" params="component, element, dt">
				local first = element:parent():GetElement("rightBreedingEntry0")
				
				if first then
					local offset = component:scrollOffset()
					
					if(first:getOrientationPosition().y ~= offset) then
						first:setOrientationPosition(Vector2(first("xOffset"):GetInt(), offset))
					end
				end
			</event>
			<event name="enableScrolling" params="component, element">
				component:GetVar("enableMouseScroll"):SetInt(1)
			</event>
			<event name="disableScrolling" params="component, element">
				component:GetVar("enableMouseScroll"):SetInt(0)
			</event>
		</swipeComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="RightMonsterBg" dependentOnComponent="Sprite" />
			<event name="onInit" params="component, element">
				component("singleTouch"):SetInt(1)
			</event>
		</touchComponent>
		<event name="onInit" params="element">
			element("SelectedEntry"):SetString("")
			element("SelectedEntryID"):SetInt(0)
			element("NewSelectedEntry"):SetString("")
			element("NewSelectedEntryID"):SetInt(0)
			
			local monsterIds = game.breedingVector()
			local numMonsters = monsterIds:size() - 1
			local previous = nil
			local numBreedable = 0
			
			for i=0,numMonsters do
				if include("BreedingRules").BreedableOnRight(monsterIds[i]) then
					local breedingEntry = menu:addTemplateElement("template_breedingentry", "rightBreedingEntry"..numBreedable, element)
					
					breedingEntry("List"):SetString("RightMonsterList")
					breedingEntry("MonsterID"):SetInt(monsterIds[i])
					breedingEntry("EntryNum"):SetInt(numBreedable)
					
					if(previous == nil) then
						breedingEntry:setParent(element)
						breedingEntry:setOrientation(lua_sys.MenuOrientation(16,0,4, lua_sys.HCENTER, lua_sys.TOP))
						breedingEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.TOP)
					else
						breedingEntry:setParent(previous)
						breedingEntry:setOrientation(lua_sys.MenuOrientation(0,14,0, lua_sys.HCENTER, lua_sys.TOP))
						breedingEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.BOTTOM)
					end
					
					previous = breedingEntry
					numBreedable = numBreedable + 1
					
					breedingEntry:init()
					breedingEntry:setPositionBroadcast(true)
				end
			end
			
			element("NumBreedable"):SetInt(numBreedable)
		</event>
		<event name="selectNewEntry" params="element">
			local oldEntryName = element("SelectedEntry"):GetString()
			local newEntryName = element("NewSelectedEntry"):GetString()
			local numBreedable = element("NumBreedable"):GetInt() - 1
			
			if((oldEntryName ~= "") and (oldEntryName ~= newEntryName)) then
				local oldEntry = element:parent():GetElement(oldEntryName)
				oldEntry["bg"]["GreySprite"]("visible"):SetInt(1)
				oldEntry["bg"]["YellowSprite"]("visible"):SetInt(0)
				
				for i=0,numBreedable do
					local leftEntry = element:parent():GetElement("leftBreedingEntry"..i)
					if(leftEntry~=nil) then
						if((game.monsterType(oldEntry("MonsterID"):GetInt()) == game.monsterType(leftEntry("MonsterID"):GetInt())) and (game.monsterLevel(leftEntry("MonsterID"):GetInt()) &gt; 3)) then
							leftEntry:DoStoredScript("enableEntry")
						end
					end
				end
			end

			if(oldEntryName ~= newEntryName) then
				local newEntry = element:parent():GetElement(newEntryName)
				element("SelectedEntry"):SetString(element("NewSelectedEntry"):GetString())
				element("SelectedEntryID"):SetInt(newEntry("MonsterID"):GetInt())
				
				if(not game.isLegendaryShuggaIsland()) then
					for i=0,numBreedable do
						local leftEntry = element:parent():GetElement("leftBreedingEntry"..i)
						if(leftEntry~=nil) then
							if(game.monsterType(newEntry("MonsterID"):GetInt()) == game.monsterType(leftEntry("MonsterID"):GetInt())) then
								leftEntry:DoStoredScript("disableEntry")
							end
						end
					end
				end
			end
		</event>
		<event name="entryTouched" params="element">
			element:parent():DoStoredScript("setRightListActive")
		</event>
	</element>
	
	<element name="BottomTorchFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="lua_sys.deviceMarginX()" yOffset="lua_sys.deviceMarginY()" priorityOffset="10" />
		<ninesliceComponent name="Sprite">
			<size w="100*game.menuScaleX()" h="90*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/BlackTitleFrame")
				component("layer"):SetString("ContextBar")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TorchAnim">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="BottomTorchFrame" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/torch.bin")
				component("animation"):SetString( "Idle" )
				component:setScale(Vector2(0.2*game.hudScale(),0.2*game.hudScale()))
				component("layer"):SetString("ContextBar")
			</event>
			<event name="onPostInit" params="component, element">
				element:setOrientationPosition(Vector2(component:size().x / 4.0, component:size().y / 2.0 + 25*game.hudScale()))
			</event>
		</aeComponent>
	</element>
	
	<element name="TorchText">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="BottomTorchFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onInit" params = "element">
			element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgTorchExtinguished", "onMsgTorchExtinguished")
		</event>
		<event name="onMsgTorchExtinguished" params="element, msg">
			element["Text"]("text"):SetString(""..game.numLitTorches() .."/"..game.numTorchesTotal())
		</event>
		<textComponent name="Text">
			<size w="50*game.menuScaleX()" h="0" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.35*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(""..game.numLitTorches() .."/"..game.numTorchesTotal())
				component("layer"):SetString("ContextBar")
			</event>
			<event name="onPostInit" params="component, element">
				element:setOrientationPosition(Vector2(component:size().x / 4.0, 0))
			</event>
		</textComponent>
	</element>
	
	<element name="SelectMonstersFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="3" />
		<ninesliceComponent name="Sprite">
			<size w="235*game.menuScaleX()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="SelectMonstersText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="SelectMonstersFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="220*game.menuScaleX()" h="35" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.35*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.localizedUpper(game.getLocalizedText("SELECT_MONSTER")))
				component:setColor(0.43, 0.98, 0.02)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="LeftArrow">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SelectMonstersFrame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="-35" yOffset="-24*game.hudScale()" priorityOffset="1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("arrow01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.57*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="RightArrow">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SelectMonstersFrame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="35" yOffset="-24*game.hudScale()" priorityOffset="1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("arrow01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.57*game.hudScale())
				if(component("isSourceRotated"):GetInt() == 1) then
					component("vFlip"):SetInt(1)
				else
					component("hFlip"):SetInt(1)
				end
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<event name="breed" params="element">
		local leftMonsterID = element["LeftMonsterList"]("SelectedEntryID"):GetInt()
		local rightMonsterID = element["RightMonsterList"]("SelectedEntryID"):GetInt()
		if((leftMonsterID ~= 0) and (rightMonsterID ~= 0)) then
			game.breed(leftMonsterID, rightMonsterID)
			game.popPopUp()
			manager:setContext(manager:getDefaultContext())
		else
			game.displayNotification("BREED_ERROR_SELECT_TWO_MONSTERS")
		end
	</event>
	
	<event name="queuePop" params="element">
		element:root():popPopUp()
	</event>
	
	<event name="setLeftListActive" params="element">
		element["LeftMonsterList"]["Swiper"]:DoStoredScript("enableScrolling")
		element["RightMonsterList"]["Swiper"]:DoStoredScript("disableScrolling")
	</event>
	
	<event name="setRightListActive" params="element">
		element["RightMonsterList"]["Swiper"]:DoStoredScript("enableScrolling")
		element["LeftMonsterList"]["Swiper"]:DoStoredScript("disableScrolling")
	</event>
</menu>