<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="10" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-1*lua_sys.screenWidth()" yOffset="-15*game.hudScale()" priorityOffset="8" />
		<ninesliceComponent name="Sprite">
			<size w="340*lua_sys.screenWidth()/480" h="250*lua_sys.screenHeight()/360" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*lua_sys.screenHeight()/360)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7*lua_sys.screenHeight()/360" yOffset="7*lua_sys.screenHeight()/360" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*lua_sys.screenHeight()/360)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7*lua_sys.screenHeight()/360" yOffset="10*lua_sys.screenHeight()/360" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*lua_sys.screenHeight()/360)
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<element name="Text">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="15*lua_sys.screenHeight()/360" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="280*lua_sys.screenWidth()/480" h="120*lua_sys.screenHeight()/360" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("RETRY_BREEDING_COMBO_TEXT")
				component("size"):SetFloat(0.4*lua_sys.screenHeight()/360)
				component("layer"):SetString("MidPopUps")
				component("autoScale"):SetInt(1)
			</event>
			<event name="moveDown" params="component, element">
				component("yOffset"):SetFloat(20*game.hudScale())
			</event>
		</textComponent>
	</element>
	
	<template type="template_spritesheetbutton" name="YesButton">
		<!-- hudScale scale="game.hudScale()" / -->
		<templateVar name="$text" equals="" />
		<templateVar name="$spriteScale" equals="0.5*lua_sys.screenHeight()/360" />
		<templateVar name="$layer" equals="MidPopUps" />
		<templateVar name="$buttonMapping" equals="game.confirmButton()" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-50*lua_sys.screenWidth()/480" yOffset="-10/lua_sys.screenHeight()/360" priorityOffset="-1" />
		<touchComponent name="Touch">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				element:parent()("transitionState"):SetInt(2)
				element:parent()("choice"):SetString("true")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_yes")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<event name="onPostInit" params="element">
			element["Overlay"]("size"):SetFloat(0.5*lua_sys.screenHeight()/360)
		</event>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>
	
	<template type="template_spritesheetbutton" name="NoButton">
		<!--hudScale scale="game.hudScale()" / -->
		<templateVar name="$text" equals="" />
		<templateVar name="$spriteScale" equals="0.5*lua_sys.screenHeight()/360" />
		<templateVar name="$layer" equals="MidPopUps" />
		<templateVar name="$buttonMapping" equals="game.cancelButton()" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="50*lua_sys.screenWidth()/480" yOffset="-10/lua_sys.screenHeight()/360" priorityOffset="-1" />
		<touchComponent name="Touch">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				element:parent()("transitionState"):SetInt(2)
				element:parent()("choice"):SetString("false")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_no")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<event name="onPostInit" params="element">
			element["Overlay"]("size"):SetFloat(0.5*lua_sys.screenHeight()/360)
		</event>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>
	
	<event name="onInit" params="element">
		element("transitionState"):SetInt(1)
		element("transitionTime"):SetFloat(0.0)
		element("choice"):SetString("none")
		lua_sys.playSoundFx("audio/sfx/menu_slide.wav")
		element["Monsters"]:DoStoredScript("addLastBred")
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()

				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					transitionTime = clamp(transitionTime, 0.0, 1.0)
					
					element("transitionTime"):SetFloat(transitionTime)
					
					if(transitionTime >= 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						if(element("choice"):GetString() == "true") then
							element:root():popPopUp()
							game.breed(game.lastBredMonster1(),game.lastBredMonster2())
							game.popPopUp()
							manager:setContext(manager:getDefaultContext())
						else
							element:root():popPopUp()
							manager:setContext("BREED_MENU")
						end
					end
				end
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		element["bg"]("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
	<element name="Monsters">
		<size w="235*game.hudScale()" h="200*game.hudScale()" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-50*lua_sys.screenHeight()/360" priorityOffset="-1" />
		<event name="addLastBred" params="element">
			local breedingEntry = menu:addTemplateElement("template_breedingentry", "last_bred_monster_1", element)
			breedingEntry("MonsterID"):SetInt(game.lastBredMonster1())
			breedingEntry:setParent(element)
			breedingEntry:setOrientation(lua_sys.MenuOrientation(11*lua_sys.screenWidth()/480,0,4, lua_sys.HCENTER, lua_sys.TOP))
			breedingEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.VCENTER)
			breedingEntry:init()
			breedingEntry:setPositionBroadcast(true)
			breedingEntry("touchDisabled"):SetInt(1)
			
			local breedingEntry2 = menu:addTemplateElement("template_breedingentry", "last_bred_monster_2", element)
			breedingEntry2("MonsterID"):SetInt(game.lastBredMonster2())						
			breedingEntry2:setParent(breedingEntry)
			breedingEntry2:setOrientation(lua_sys.MenuOrientation(0,14*lua_sys.screenHeight()/360,0, lua_sys.HCENTER, lua_sys.TOP))
			breedingEntry2:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.BOTTOM)
			breedingEntry2:init()
			breedingEntry2:setPositionBroadcast(true)
			breedingEntry2("touchDisabled"):SetInt(1)
		</event>
	</element>
	
</menu>