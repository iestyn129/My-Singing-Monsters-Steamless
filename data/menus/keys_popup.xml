<?xml version="1.0" encoding="utf-8"?>
<menu>
	
	<event name="onPostInit" params="element">
		element("transitionTime"):SetFloat(0.0)
		element("transitionState"):SetInt(1)
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				
				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					transitionTime = clamp(transitionTime, 0.0, 1.0)
					element("transitionTime"):SetFloat(transitionTime)
					
					if(transitionTime >= 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						element:root():popPopUp()
					end
				end
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		local frame = element:GetElement("bg")
		frame("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
		game.setClipping("Clipping", (frame:absX() + 10)*lua_sys.deviceScaleX(), (frame:absY() + 50*game.hudScale())*lua_sys.deviceScaleY(), (frame:absW() - 20)*lua_sys.deviceScaleX(), (frame:absH() - 50*game.hudScale() - 10)*lua_sys.deviceScaleY())
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="7" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-lua_sys.screenWidth()" yOffset="-25" priorityOffset="6" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="200*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
				component("alpha"):SetFloat(1.0)
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="StoreTitle">
		<size dependentOnElement="element:name()" dependentOnComponent="Frame" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="27*game.menuScaleX()" priorityOffset="-2" />
		<ninesliceComponent name="Frame">
			<size w="240*game.hudScale()" h="42*game.hudScale()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("includeBorder"):SetInt(1)				
				component("topHeight"):SetFloat(40.0)
				component("bottomHeight"):SetFloat(40.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*game.hudScale())
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
				
				if(game.hudScale() > 1) then
					component("width"):SetInt(component("width"):GetInt() + 35*game.hudScale())
					component("height"):SetInt(component("height"):GetInt() + 20*game.hudScale())
				end
			</event>
		</ninesliceComponent>
		<textComponent name="Text">
			<size dependentOnElement="element:name()" dependentOnComponent="Frame" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				game.StoreContext_setKeyTextColour(component)
				component("size"):SetFloat(0.35*game.menuScaleY())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(6*game.menuScaleX())
				component("text"):SetString("KEY_MENU_TITLE")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="LeftEnd">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-15*game.hudScale()" yOffset="0" priorityOffset="1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("bookend_monsters")
				component("xOffset"):SetInt(-8*game.hudScale())
				component("sheetName"):SetString("xml_resources/store_elements.xml")
				component("size"):SetFloat(lua_sys.screenWidth()/1024.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="RightEnd">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="15*game.hudScale()" yOffset="0" priorityOffset="1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("bookend_monsters")
				component("xOffset"):SetInt(8*game.hudScale())

				component("sheetName"):SetString("xml_resources/store_elements.xml")
				if(component("isSourceRotated"):GetInt() == 1) then
					component("vFlip"):SetInt(1)
					component("hFlip"):SetInt(0)
				else
					component("vFlip"):SetInt(0)
					component("hFlip"):SetInt(1)
				end
				component("size"):SetFloat(lua_sys.screenWidth()/1024.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="KeyCounter">
		<size dependentOnElement="element:name()" dependentOnComponent="BackingSprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="-10*game.hudScale()" priorityOffset="-3" />
		<ninesliceComponent name="BackingSprite">
			<size w="100*game.menuScaleX()" h="31*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("includeBorder"):SetInt(1)
				component("topHeight"):SetFloat(30.0)
				component("bottomHeight"):SetFloat(30.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("spriteName"):SetString("gfx/menu/BlackTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="-4*game.hudScale()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString(game.StoreContext_SPRITE_KEY)
				component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<textComponent name="Text">
			<size w="65*game.menuScaleX()" h="100" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="10/game.hudScale()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("text"):SetString("0")
				component("autoScaleFactor"):SetFloat(0.01)
				component("autoScale"):SetInt(1)
				component("text"):SetString(game.commaizeNumber(game.playerKeys()))
				game.StoreContext_setCurrencyTypeColour(game.StoreContext_TYPE_KEYS, component)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<template type="template_spritesheetbutton" name="KeyStore">
		<templateVar name="$upSpriteName" equals="'button_continue_green'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="MidPopUps" />
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="StoreTitle" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="15*game.menuScaleX()" priorityOffset="-2" />
		<textComponent name="Label">
			<size w="80*game.menuScaleX()" h="30*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTutorialFont())
				component("size"):SetFloat(0.6*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("BUY_KEYS")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="10*game.hudScale()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString(game.StoreContext_SPRITE_KEY)
				component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
				component("size"):SetFloat(0.25*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.loadStoreContext(game.StoreCategories_TYPE_CURRENCY, game.StoreContext_TYPE_KEYS)
			</event>
		</touchComponent>
	</template>
	<element name="LeftLeaves">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="KeyStore" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="-13*game.hudScale()" yOffset="-5*game.hudScale()" priorityOffset="1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_leaves")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<template type="template_spritesheetbutton" name="GiftCode">
		<templateVar name="$upSpriteName" equals="'button_continue_green'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="MidPopUps" />
		<position relativeTo="KeyStore" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="10*game.menuScaleX()" priorityOffset="0" />
		<textComponent name="Label">
			<size w="80*game.menuScaleX()" h="30*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTutorialFont())
				component("size"):SetFloat(0.6*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("GIFT_CODE_TO_FRIEND")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="10*game.hudScale()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString(game.StoreContext_SPRITE_KEY)
				component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
				component("size"):SetFloat(0.25*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				print("show friend gifting menu eventually")
				game.popPopUp();
				manager:setContext("GIFT_FRIENDS")
			</event>
		</touchComponent>
	</template>
	<element name="RightLeaves">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="GiftCode" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="-5*game.hudScale()" yOffset="-8*game.hudScale()" priorityOffset="1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_leaves")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.3*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
				if(component("isSourceRotated"):GetInt() == 1) then
					component("hFlip"):SetInt(1)
				else
					component("vFlip"):SetInt(1)
				end
			component("rotation"):SetFloat(-0.5*math.pi);
			</event>
		</spriteSheetComponent>
	</element>
	<element name="TopLeaves">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="GiftCode" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="30*game.hudScale()" yOffset="-10*game.hudScale()" priorityOffset="1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_leaves")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<template type="template_overlayedcheckbox" name="GiftCodeHelp">
		<templateVar name="$overlaySprite" equals="'button_info'" />
		<templateVar name="$bgSprite" equals="'button_base_grey'" />
		<templateVar name="$sheetName" equals="'xml_resources/context_buttons.xml'" />
		<templateVar name="$scale" equals="0.2*game.hudScale()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="GiftCode" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.displayNotification("GIFT_CODE_HELP_DESC")
			</event>
		</touchComponent>
	</template>
	
	
	<element name="GiftLock">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="GiftCode" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="5*game.menuScaleX()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="100*game.menuScaleX()" h="25*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.8*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				
				if(game.giftTimeRemaining() >= 0) then
					element:parent()["GiftCode"]:DoStoredScript("disable")
					component("text"):SetString(game.getLocalizedText("SEND_ANOTHER_GIFT").." - "..game.timeToString(game.giftTimeRemaining()))
				else
					component("text"):SetString("")
					component("visible"):SetInt(0)
				end

				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
			<event name="onTick" params="component, element, dt">
				<![CDATA[
					if(component("visible"):GetInt() == 1) then
						if(game.giftTimeRemaining() >= 0) then
							component("text"):SetString(game.getLocalizedText("SEND_ANOTHER_GIFT").." - "..game.timeToString(game.giftTimeRemaining()))
						else
							element:parent()["GiftCode"]:DoStoredScript("enable")
							component("text"):SetString("")
							component("visible"):SetInt(0)
						end						
					end
				]]>
			</event>
		</textComponent>
	</element>
	
	<element name="GarlicDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="GiftCode" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-2" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q01.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("layer"):SetString("MidPopUps")
			</event>
			<event name="onPostInit" params="component, element">
				element:setOrientationPosition(Vector2(element("xOffset"):GetFloat() + component:size().x / 2.0, element("yOffset"):GetFloat() + component:size().y / 2.0))
			</event>
			
		</aeComponent>
	</element>
	
	<element name="SnailDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="GarlicDip" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-10*game.menuScaleX()" yOffset="20*game.menuScaleX()" priorityOffset="1" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q03.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("layer"):SetString("MidPopUps")
				component("hFlip"):SetInt(1)
			</event>
		</aeComponent>
	</element>
	<element name="CarrotDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SnailDip" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-10*game.menuScaleX()" yOffset="30*game.menuScaleX()" priorityOffset="-1" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q05.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("layer"):SetString("MidPopUps")
				component("hFlip"):SetInt(1)
			</event>
		</aeComponent>
	</element>
	
	
	
	
	<element name="MushroomDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="GiftCode" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="-2" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q06.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("hFlip"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
			<event name="onPostInit" params="component, element">
				element:setOrientationPosition(Vector2(element("xOffset"):GetFloat() - component:size().x / 2.0, element("yOffset"):GetFloat() + component:size().y / 2.0))
			</event>
			
		</aeComponent>
	</element>
	
	<element name="LeavesDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="MushroomDip" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="10*game.menuScaleX()" yOffset="20*game.menuScaleX()" priorityOffset="1" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q02.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("layer"):SetString("MidPopUps")
			</event>
		</aeComponent>
	</element>
	<element name="FlowerDip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="LeavesDip" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="15*game.menuScaleX()" yOffset="30*game.menuScaleX()" priorityOffset="-1" />
		<aeComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("animationName"):SetString("xml_bin/monster_q07.bin")
				component("animation"):SetString( "Store" )
				component:setScale(Vector2(0.5*game.menuScaleX(),0.5*game.menuScaleX()))
				component("layer"):SetString("MidPopUps")
			</event>
		</aeComponent>
	</element>
</menu>