<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="16" />		
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="Frame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0-lua_sys.screenWidth()" yOffset="-7" priorityOffset="15" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.hudScale()" h="225*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="175*game.hudScale()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleText">
		<size dependentOnElement="TitleFrame"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="160*game.hudScale()" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(0.24, 0.67, 0.9)
				component("size"):SetFloat(0.45*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.localizedUpper("MENU_GAMECIRCLE"))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<event name="onInit" params="element">
		element("transitionState"):SetInt(1)
		element("transitionTime"):SetFloat(0.0)	
		lua_sys.playSoundFx("audio/sfx/menu_slide.wav")
	</event>
	
	<element name="AchieveButton">
		<size w="210*game.hudScale()" h="60*game.hudScale()" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="35*game.hudScale()" priorityOffset="-3" />
		<template type="template_spritesheetbutton" name="text_box">			
			<templateVar name="$upSpriteName" equals="'button_invite'" />
			<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
			<templateVar name="$layer" equals="MidPopUps" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="2" />				
			<textComponent name="Text2">
				<size w="130.0*game.hudScale()" h="50*game.hudScale()"/>
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component:GetVar("multiline"):SetInt(1)
					component:GetVar("textPadding"):SetInt(10.0*game.hudScale())
					component:GetVar("font"):Set(game.getTextFont())
					component:GetVar("size"):SetFloat(0.5*game.hudScale())
					component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component:GetVar("text"):SetString("MENU_GOOGLEPLAY_ACHEIVEMENT")
					component:GetVar("autoScaleFactor"):SetFloat(0.05)
					component:GetVar("autoScale"):SetInt(1)
					component:GetVar("layer"):SetString("MidPopUps")
				</event>
			</textComponent>
			<event name="onPostInit" params="component, element">
				component["Touch"]("enabled"):SetInt(0)
			</event>
		</template>
		<template type="template_spritesheetbutton" name="button">
			<templateVar name="$layer" equals="MidPopUps" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<spriteComponent name="icon">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component("spriteName"):Set("gfx/menu/gamecircle_button")
					component("size"):SetFloat(0.5*game.hudScale())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteComponent>			
			<event name="onPostInit" params="component, element">
				component["Touch"]("enabled"):SetInt(0)
			</event>
		</template>	
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()"/>
			<event name="onTouchDown" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchDown")
				element["text_box"]["Touch"]:DoStoredScript("onTouchDown")
			</event>
			<event name="onTouchUp" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchUp")
				element["text_box"]["Touch"]:DoStoredScript("onTouchUp")
				game.showAchievements()
			</event>
			<event name="onTouchRelease" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchRelease")
				element["text_box"]["Touch"]:DoStoredScript("onTouchRelease")
			</event>
		</touchComponent>	
		<event name="onPostInit" params="component, element">
			local amount
			if(game.isGameCircleReady()) then
				component["Touch"]("enabled"):SetInt(1)
				amount = 1
			else
				component["Touch"]("enabled"):SetInt(0)
				amount = 0.5
			end
			
			component["text_box"]["Text2"]:setColor(amount, amount, amount)
			component["text_box"]["UpSprite"]:setColor(amount, amount, amount)
			component["text_box"]["DownSprite"]:setColor(amount, amount, amount)
			component["text_box"]["BoundsSprite"]:setColor(amount, amount, amount)
			component["button"]["UpSprite"]:setColor(amount, amount, amount)
			component["button"]["DownSprite"]:setColor(amount, amount, amount)
			component["button"]["BoundsSprite"]:setColor(amount, amount, amount)
			component["button"]["icon"]("alpha"):SetFloat(amount)		
		</event>
	</element>
	
	<element name="LeaderboardButton">
		<size w="210*game.hudScale()" h="60*game.hudScale()" />
		<position relativeTo="AchieveButton" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="5*game.hudScale()" priorityOffset="0" />
		<template type="template_spritesheetbutton" name="text_box">
			<templateVar name="$upSpriteName" equals="'button_invite'" />
			<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
			<templateVar name="$layer" equals="MidPopUps" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="2" />				
			<textComponent name="Text2">
				<size w="130.0*game.hudScale()" h="50*game.hudScale()"/>
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component:GetVar("multiline"):SetInt(1)
					component:GetVar("textPadding"):SetInt(10.0*game.hudScale())
					component:GetVar("font"):Set(game.getTextFont())
					component:GetVar("size"):SetFloat(0.5*game.hudScale())
					component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component:GetVar("text"):SetString("MENU_GOOGLEPLAY_LEADERBOARD")
					component:GetVar("autoScaleFactor"):SetFloat(0.05)
					component:GetVar("autoScale"):SetInt(1)
					component:GetVar("layer"):SetString("MidPopUps")
				</event>
			</textComponent>
			<event name="onPostInit" params="component, element">
				component["Touch"]("enabled"):SetInt(0)
			</event>
		</template>
		<template type="template_spritesheetbutton" name="button">
			<templateVar name="$layer" equals="MidPopUps" />
			<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<spriteComponent name="icon">
				<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component("spriteName"):Set("gfx/menu/gamecircle_button")
					component("size"):SetFloat(0.5*game.hudScale())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteComponent>
			<event name="onPostInit" params="component, element">
				component["Touch"]("enabled"):SetInt(0)
			</event>
		</template>	
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()"/>
			<event name="onTouchDown" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchDown")
				element["text_box"]["Touch"]:DoStoredScript("onTouchDown")
			</event>
			<event name="onTouchUp" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchUp")
				element["text_box"]["Touch"]:DoStoredScript("onTouchUp")
				game.showLeaderboard()
			</event>
			<event name="onTouchRelease" params="component, element">
				element["button"]["Touch"]:DoStoredScript("onTouchRelease")
				element["text_box"]["Touch"]:DoStoredScript("onTouchRelease")
			</event>
		</touchComponent>	
		
		<event name="onPostInit" params="component, element">
			local amount
			if(game.isGameCircleReady()) then
				component["Touch"]("enabled"):SetInt(1)
				amount = 1
			else
				component["Touch"]("enabled"):SetInt(0)
				amount = 0.5
			end
			
			component["text_box"]["Text2"]:setColor(amount, amount, amount)
			component["text_box"]["UpSprite"]:setColor(amount, amount, amount)
			component["text_box"]["DownSprite"]:setColor(amount, amount, amount)
			component["text_box"]["BoundsSprite"]:setColor(amount, amount, amount)
			component["button"]["UpSprite"]:setColor(amount, amount, amount)
			component["button"]["DownSprite"]:setColor(amount, amount, amount)
			component["button"]["BoundsSprite"]:setColor(amount, amount, amount)
			component["button"]["icon"]("alpha"):SetFloat(amount)		
		</event>
	</element>
	
	<template type="template_spritesheetbutton" name="MoreGames">
		<templateVar name="$upSpriteName" equals="'button_more_games'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="10*game.menuScaleX()" yOffset="5*game.menuScaleY()" priorityOffset="4" />
		<textComponent name="MoreGamesText">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-5" yOffset="3*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("alpha"):SetFloat(0.0)
				component("multiline"):SetInt(1)
				component("textPadding"):SetInt(0.0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.20*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("MORE_GAMES")
				component("rotation"):SetFloat(0)
				component("autoScaleFactor"):SetFloat(0.05)
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				if(game.hideMoreGames()) then
					element:DoStoredScript("setInvisible")
					component("visible"):SetInt(0)
				end
			</event>
		</textComponent>
		<spriteComponent name="UpSprite">
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("alpha"):SetFloat(0.0)
			</event>
		</spriteComponent>		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.showMoreGames()
			</event>
		</touchComponent>
	</template>

	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				
				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					element("transitionTime"):SetFloat(clamp( transitionTime, 0.0, 1.0 ))
					
					if(transitionTime == 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						element:root():popPopUp()
					end
				end
			
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		element["Frame"]("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
		element["MoreGames"]["UpSprite"]("alpha"):SetFloat(transitionTime*1.0)
		element["MoreGames"]["MoreGamesText"]("alpha"):SetFloat(transitionTime*1.0)
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
</menu>