<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<event name="onInit" params="element">
		element("transitionTime"):SetFloat(0.0)
	</event>
	
	<event name="onPostInit" params="element">
		element("transitionState"):SetInt(1)
		lua_sys.playSoundFx("audio/sfx/quest_icon_open.wav")
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				
				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					transitionTime = clamp(transitionTime, 0.0, 1.0)
					element("transitionTime"):SetFloat(transitionTime)
					
					if(transitionTime >= 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						element:root():popPopUp()
					end
				end
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		local bg = element:GetElement("bg")
		bg("xOffset"):SetFloat(lua_sys.screenWidth()*0.5 + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
		
		local titleFrameHeight = 50*game.hudScale()
		local clippingWidth = (bg:absW() - 20)*lua_sys.deviceScaleX()
		local footerHeight = element:GetElement("FooterFrame"):absH()/2
		local titleFrameOffset = element:GetElement("TitleFrame")("yOffset"):GetFloat()
		local footerFrameOffset = element:GetElement("FooterFrame")("yOffset"):GetFloat()
		local clippingHeight = (bg:absH()*lua_sys.deviceScaleY() - (titleFrameHeight + footerHeight) - (footerFrameOffset + titleFrameOffset))
		
		game.setClipping("Clipping", (bg:absX() + 10)*lua_sys.deviceScaleX(), (bg:absY() + titleFrameHeight)*lua_sys.deviceScaleY(), clippingWidth, clippingHeight-20)
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="7" />		
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-1*lua_sys.screenWidth()" yOffset="-25" priorityOffset="6" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="225*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="BlackCover">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="10" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="375*game.menuScaleX()" h="43*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(1.0)
				component("bottomHeight"):SetFloat(1.0)
				component("leftWidth"):SetFloat(1.0)
				component("rightWidth"):SetFloat(1.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setColor(0.0, 0.0, 0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.hudScale()" priorityOffset="-3" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*game.hudScale())
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="FadeSprite">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="TitleFrame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/fade_sprite")
				component:setScale(Vector2(30.0*game.menuScaleX(), 0.5*game.menuScaleY()))
				component("layer"):SetString("Clipping")
			</event>
		</spriteComponent>
	</element>
	
	<element name="FooterFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-10*game.hudScale()" priorityOffset="-3" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="30*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("FrontPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TimeRemaining">
		<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
		<position relativeTo="FooterFrame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="2*game.hudScale()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="350*game.menuScaleX()" h="30*game.menuScaleY()" />
			<position relativeTo="element" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.38*game.hudScale())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					if(game.tribalTimeRemaining() >= 0) then
						component("timeString"):SetString(game.timeToString(game.tribalTimeRemaining()))
					else
						component("timeString"):SetString(game.timeToString(0))
					end
					component("text"):SetString(game.getLocalizedText("LABEL_DIAMOND_TIME").." - "..component("timeString"):GetString())
					component("autoScale"):SetInt(1)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
			<event name="onTick" params="component, element, dt">
				<![CDATA[
					local oldString = component("timeString"):GetString()
					
					if(game.tribalTimeRemaining() >= 0) then
						component("timeString"):SetString(game.timeToString(game.tribalTimeRemaining()))
					else
						component("timeString"):SetString(game.timeToString(0))
					end
					
					if(oldString ~= newString) then
						component("text"):SetString(game.getLocalizedText("LABEL_DIAMOND_TIME").." - "..component("timeString"):GetString())
					end
				]]>
			</event>
		</textComponent>
	</element>
	
	<element name="StarpowerEarned">
		<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
		<position relativeTo="TimeRemaining" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.hudScale()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="350*game.menuScaleX()" h="30*game.menuScaleY()" />
			<position relativeTo="element" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.3*game.hudScale())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString(game.getLocalizedText("LABEL_STARPOWER_EARNED").." - "..game.starpowerEarnedThisWeek())
					component("autoScale"):SetInt(1)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>
	</element>
	
	<element name="GoalsTitle">
		<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.45*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component:setColor(0.94, 0.6, 0.11)
				component("text"):SetString("MENU_TRIBAL_GOALS_TITLE")
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="GoalEntries">
		<size w="400*game.menuScaleX()" h="(220*game.menuScaleY())-60" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="element">
			element("NumGoals"):SetInt(0)
			element("FirstGoal"):SetString("")
			element:DoStoredScript("populate")
		</event>
		<event name="populate" params="element">			
			<![CDATA[
				local previous = nil
				local quests = game.tribalQuests()
				local numGoals = quests:size()
				
				for i = 0, numGoals - 1 do
					local quest = quests[i]
					local goalEntry = menu:addTemplateElement("template_tribalgoalentry", ""..quest:getId(), element)
					--goalEntry("GoalName"):SetString(quest:getName())
					goalEntry("GoalDesc"):SetString(quest:getDescription())
					goalEntry("GoalSheet"):SetString(quest:getSheet())
					goalEntry("GoalIcon"):SetString(quest:getImage())
					goalEntry("RewardCoins"):SetInt(quest:getRewardCoins())
					goalEntry("RewardDiamonds"):SetInt(quest:getRewardDiamonds())
					goalEntry("RewardXp"):SetInt(quest:getRewardXp())
					goalEntry("RewardFood"):SetInt(quest:getRewardFood())
					goalEntry("RewardShards"):SetInt(quest:getRewardShards())
					goalEntry("RewardEntity"):SetInt(quest:getRewardEntity())
					if(quest:isComplete() == true) then
						goalEntry("Complete"):SetInt(1)
					else
						goalEntry("Complete"):SetInt(0)
					end
					
					if(previous == nil) then
						goalEntry:relativeTo(element)
						goalEntry:setOrientation(lua_sys.MenuOrientation(-5, 0, -1, lua_sys.HCENTER, lua_sys.TOP))
						goalEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.TOP)
						element("FirstGoal"):SetString(goalEntry:name())
					else
						goalEntry:relativeTo(previous)
						goalEntry:setOrientation(lua_sys.MenuOrientation(0,0,0, lua_sys.HCENTER, lua_sys.TOP))
						goalEntry:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.BOTTOM)
					end
					
					previous = goalEntry
					goalEntry:init()
					goalEntry:setPositionBroadcast(true)
					element:parent():DoStoredScript("TickTransition")
				end
				
				element("NumGoals"):SetInt(numGoals)
				local first = element:GetElement(element("FirstGoal"):GetString())
				if(first) then
					first:setOrientationPosition(Vector2(first("xOffset"):GetInt(), first("yOffset"):GetInt()+1))
				end
			]]>
		</event>
		<swipeComponent name="Swiper">
			<event name="onPostInit" params="component, element">
				component:GetVar("direction"):SetInt(lua_sys.MenuSwipeComponent_SwipeDirectionVertical)
				component:GetVar("mode"):SetInt(lua_sys.MenuSwipeComponent_SwipeModeFree)
				component:GetVar("tSteps"):SetFloat(25.0)
				component:listenToTouches(element)
				local first = element:GetElement(element("FirstGoal"):GetString())
				if(first) then
					local totalHeight = element("NumGoals"):GetInt() * first:absH()
					
					if(totalHeight &gt; (element:absH())) then
						component:setScrollSize((totalHeight - element:absH()) + (30*game.hudScale()))
					else
						component:setScrollSize(0)
					end
				end
				
				if(game.hudScale() == 1) then
					element("yOffset"):SetInt(10)
				end
			</event>			
			<event name="onTick" params="component, element, dt">
				local first = element:GetElement(element("FirstGoal"):GetString())
				if(first) then
					local offset = component:scrollOffset()
					
					if(first:getOrientationPosition().y ~= offset) then
						first:setOrientationPosition(Vector2(first("xOffset"):GetInt(), offset))
					end
				end
			</event>
		</swipeComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
</menu>
