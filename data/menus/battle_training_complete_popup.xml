<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

  <element name="Fade">
    <size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
    <position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
    <orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="3" />
    <spriteComponent name="Sprite">
      <event name="onInit" params="component, element">
        <![CDATA[
        component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
        component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
        component:setColor(0.0, 0.0, 0.0)
        component("alpha"):SetFloat(0.5)
        component("layer"):SetString("FrontPopUps")
        ]]>
      </event>
    </spriteComponent>

    <touchComponent name="Touch">
      <size dependentOnElement="element:name()" />
      <position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
      <orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
      <event name="onTouchUp" params="component, element">
				<![CDATA[
					--print("Closing Campaign Rewards")
					--element:parent():DoStoredScript("hide")
				]]>
      </event>
    </touchComponent>
  </element>

	<element name="Bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0*game.hudScale()" yOffset="lua_sys.screenHeight() * 2.0" priorityOffset="2" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="225*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("topHeight"):SetFloat(50.0)
						component("bottomHeight"):SetFloat(50.0)
						component("leftWidth"):SetFloat(50.0)
						component("rightWidth"):SetFloat(50.0)
						component("size"):SetFloat(0.5)
						component("includeBorder"):SetInt(1)
						component("spriteName"):SetString("gfx/menu/Black9SFrame50")
						component("layer"):SetString("FrontPopUps")
					]]>
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("menu_swirl_01")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("menu_swirl_02")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("rotation"):SetFloat(-0.5*math.pi)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<textComponent name="Text">
			<size w="240*game.menuScaleX()" h="32*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.35*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("BATTLE_TRAINING_COMPLETE")
				component:setColor(0.26, 0.95, 0.26)
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="260*game.menuScaleX()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</ninesliceComponent>
		</element>

	<template type="template_spritesheetbutton" name="ContinueButton">
		<templateVar name="$upSpriteName" equals="button_continue_green" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		<templateVar name="$layer" equals="FrontPopUps" />
		<templateVar name="$buttonMapping" equals="game.confirmButton()" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				<![CDATA[
				onTouchUp(component, element)
				print("Closing Training Popup")
				element:parent():DoStoredScript("hide")
				]]>
			</event>
		</touchComponent>
	</template>

	<element name="ContinueLabel">
		<position relativeTo="ContinueButton" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size dependentOnElement="ContinueButton" dependentOnComponent="UpSprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("CONTINUE")
				component("size"):SetFloat(0.25*game.hudScale())
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="Animation">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="100*game.menuScaleX()" yOffset="36*game.menuScaleY()" priorityOffset="-1" />
		<aeComponent name="Anim">
			<event name="onInit" params="component, element">
				<![CDATA[
					local uniqueMonsterId = element:parent()("MonsterId"):GetInt()

					print("Id=", uniqueMonsterId)

					component("animationName"):SetString("xml_bin/"..game.getMonsterAnimationFile(uniqueMonsterId))
					component("animation"):SetString(game.getMonsterAnimationName(uniqueMonsterId))

					local equippedCostume = game.getEquippedCostumeForMonster(uniqueMonsterId)
					game.applyCostumeToAnimComponent(component, equippedCostume)

					component:setScale(Vector2(0.75*game.menuScaleX(), 0.75*game.menuScaleX()))
					element:setOrientationPosition(Vector2(100*game.menuScaleX(), 36*game.menuScaleY()))

					component("visible"):SetInt(1)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</aeComponent>
	</element>

	<element name="Upgrade">
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="100 * game.menuScaleX()" yOffset="56*game.menuScaleY()" priorityOffset="0" />
		<textComponent name="TextA">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

					local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
					local text = game.getLocalizedText("BATTLE_TRAINING_LEVEL")
					text = text:gsub("%${LEVEL}", game.monsterLevel(uniqueMonsterId)-1)

					component("text"):SetString(text)
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
			]]>
			</event>
		</textComponent>

		<spriteComponent name="Arrow">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("spriteName"):SetString("gfx/menu/button_small_play")
				component("size"):SetFloat(0.4 * game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteComponent>

		<textComponent name="TextB">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

					local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
					local text = game.getLocalizedText("BATTLE_TRAINING_LEVEL")
					text = text:gsub("%${LEVEL}", game.monsterLevel(uniqueMonsterId))

					component("text"):SetString(text)
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

		<event name="onPostInit" params="element">
			<![CDATA[
				include("MenuHelpers").CenterHorizontally({
					element:GetComponent("TextA"),
					element:GetComponent("Arrow"),
					element:GetComponent("TextB"),
				})
			]]>
		</event>
	</element>

	<element name="DESCRIPTION">
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="260*game.menuScaleX()" yOffset="56*game.menuScaleY()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="280*game.menuScaleX()"  h="16*game.menuScaleY()"/>
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

				local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
				local text = game.getLocalizedText("BATTLE_TRAINING_COMPLETED")
				text = text:gsub("%${NAME}", game.getMonsterName(uniqueMonsterId))
				component("text"):SetString(text)

				component("size"):SetFloat(0.25*game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="POWER_INCREASE">
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="260*game.menuScaleX()" yOffset="90*game.menuScaleY()" priorityOffset="0" />

		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("power_icon")
					component("sheetName"):SetString("xml_resources/collect_stickers.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>

		<textComponent name="TextA">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("font"):Set(game.getTextFont())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

						component("text"):SetString("100")
						component("size"):SetFloat(0.25*game.menuScaleX())
						component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

		<spriteComponent name="Arrow">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("gfx/menu/button_small_play")
					component("size"):SetFloat(0.4 * game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
					]]>
			</event>
		</spriteComponent>

		<textComponent name="TextB">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

				component("text"):SetString("120")
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

		<event name="onPostInit" params="element">
			<![CDATA[

				local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
				local currentMonsterLevel = game.monsterLevel(uniqueMonsterId)

				element["TextA"]("text"):SetString(game.getBattleMonsterPowerForLevel(uniqueMonsterId, currentMonsterLevel-1))
				element["TextB"]("text"):SetString(game.getBattleMonsterPowerForLevel(uniqueMonsterId, currentMonsterLevel))

				local helpers = include("MenuHelpers")
				helpers.CenterHorizontally({
					element:GetComponent("Icon"),
					helpers.CreateSpacer(4*game.menuScaleX(), 0),
					element:GetComponent("TextA"),
					element:GetComponent("Arrow"),
					element:GetComponent("TextB"),
				})
			]]>
		</event>
	</element>

	<element name="STAMINA_INCREASE">
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="260*game.menuScaleX()" yOffset="120*game.menuScaleY()" priorityOffset="0" />

		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("stamina_icon")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>

		<textComponent name="TextA">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("font"):Set(game.getTextFont())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

						component("text"):SetString("100")
						component("size"):SetFloat(0.25*game.menuScaleX())
						component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

		<spriteComponent name="Arrow">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("gfx/menu/button_small_play")
					component("size"):SetFloat(0.4 * game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
					]]>
			</event>
		</spriteComponent>

		<textComponent name="TextB">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)

				component("text"):SetString("120")
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

		<event name="onPostInit" params="element">
			<![CDATA[

				local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
				local currentMonsterLevel = game.monsterLevel(uniqueMonsterId)

				element["TextA"]("text"):SetString(game.getBattleMonsterStaminaForLevel(uniqueMonsterId, currentMonsterLevel-1))
				element["TextB"]("text"):SetString(game.getBattleMonsterStaminaForLevel(uniqueMonsterId, currentMonsterLevel))

				local helpers = include("MenuHelpers")
				helpers.CenterHorizontally({
					element:GetComponent("Icon"),
					helpers.CreateSpacer(4*game.menuScaleX(), 0),
					element:GetComponent("TextA"),
					element:GetComponent("Arrow"),
					element:GetComponent("TextB"),
				})
			]]>
		</event>
	</element>

	<element name="ABILITY_UNLOCK_LABEL">
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="260*game.menuScaleX()" yOffset="150*game.menuScaleY()" priorityOffset="0" />
		<textComponent name="Label">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("BATTLE_TRAINING_NEW_ABILITY")
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
			]]>
			</event>
		</textComponent>

		<event name="onPostInit" params="element">
			<![CDATA[
			local unlockedAction = false
			local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
			local monsterLevel = game.monsterLevel(uniqueMonsterId)
			local actions = game.getBattleMonsterActions(uniqueMonsterId)
			for i=0,actions:size()-1 do
				if actions[i]:unlockLevel(i) == monsterLevel then
					unlockedAction = true
					break
				end
			end

			if unlockedAction then
				element["Label"]("visible"):SetInt(1)
			else
				element["Label"]("visible"):SetInt(0)
			end

			]]>
		</event>

	</element>

	<element name="ABILITY_UNLOCK">
	<position relativeTo="Bg" vAnchor="TOP" hAnchor="LEFT" />
	<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="260*game.menuScaleX()" yOffset="180*game.menuScaleY()" priorityOffset="0" />

	<spriteSheetComponent name="AbilityIcon">
		<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onInit" params="component, element">
			<![CDATA[
				--component("spriteName"):SetString("gene_cold")
				--component("sheetName"):SetString("xml_resources/hud02.xml")
				component("size"):SetFloat(0.3 * game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
			]]>
		</event>
	</spriteSheetComponent>

	<textComponent name="AbilityNameLabel">
		<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onInit" params="component, element">
			<![CDATA[
					component("font"):Set(game.getTextFont())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					--component("text"):SetString("FREEZY CHILL")
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
			]]>
		</event>
	</textComponent>

	<event name="onPostInit" params="element">
		<![CDATA[
			local unlockedAction = false
			local uniqueMonsterId = element:parent()("MonsterId"):GetInt()
			local monsterLevel = game.monsterLevel(uniqueMonsterId)
			local actions = game.getBattleMonsterActions(uniqueMonsterId)
			for i=0,actions:size()-1 do
				if actions[i]:unlockLevel(i) == monsterLevel then
					unlockedAction = true
					element["AbilityIcon"]("sheetName"):SetString(actions[i]:getIconSpriteSheet())
					element["AbilityIcon"]("spriteName"):SetString(actions[i]:getIconSprite())
					element["AbilityNameLabel"]("text"):SetString(actions[i].name)
					break
				end
			end

			if unlockedAction then
				local helpers = include("MenuHelpers")
				helpers.CenterHorizontally({
					element:GetComponent("AbilityIcon"),
					helpers.CreateSpacer(4*game.menuScaleX(), 0),
					element:GetComponent("AbilityNameLabel")
					})
			else
				element:GetComponent("AbilityIcon")("visible"):SetInt(0)
				element:GetComponent("AbilityNameLabel")("visible"):SetInt(0)
			end
			]]>
	</event>

</element>

	<event name="queuePop" params="element">
		<![CDATA[
			element:DoStoredScript("hide")
		]]>
	</event>

	<event name="onInit" params="element">
		<![CDATA[

			-- MON-17973: set context bar back to default (because monster gets deselected)
			manager:setContext(manager:getDefaultContext())

			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.OnInit(element:GetElement("Bg"), {startY = lua_sys.screenHeight() * 2.0, endY = 6*game.hudScale(), duration = 0.66})

			local FadeTransition = include("FadeTransition")
			local fadeSprite = element:GetElement("Fade"):GetComponent("Sprite")
			fadeSprite.FadeTransition = FadeTransition:new({
				duration = 0.66,
				onUpdate = function(alpha)
					fadeSprite:GetVar("alpha"):SetFloat(alpha)
				end
			})

			local battleClientData = game.getBattleClientData()
			local uniqueMonsterId = battleClientData:dequeueTrainingPopup()
			element("MonsterId"):SetInt(uniqueMonsterId)

			element:DoStoredScript("show")
		]]>
	</event>

	<event name="onTick" params="element, dt">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			local options = {
				ease = lua_sys.Quadratic_EaseIn,
				onDoneShow = function(e) element:DoStoredScript("playParticles") end,
				onDoneHide = function(e) e:root():popPopUp() end
			}
			offsetTransition.OnTick(element:GetElement("Bg"), dt, options)

			local fadeSprite = element:GetElement("Fade"):GetComponent("Sprite")
			fadeSprite.FadeTransition:Tick(dt)
		]]>
	</event>

	<event name="show" params="element">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.Show(element:GetElement("Bg"))

			playSoundFx("audio/sfx/menu_slide.wav")
		]]>
	</event>

	<event name="hide" params="element">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.Hide(element:GetElement("Bg"))

			local fadeSprite = element:GetElement("Fade"):GetComponent("Sprite")
			fadeSprite.FadeTransition:Hide()

			playSoundFx("audio/sfx/menu_slide.wav")
		]]>
	</event>

	<event name="playParticles" params="element">
		<![CDATA[

			lua_sys.playSoundFx("audio/sfx/level_up_player.wav")

			local midX = lua_sys.screenWidth()/2
			local midY = lua_sys.screenHeight()/2
			local scale = 2.0*lua_sys.screenWidth()/480.0;
			local emissionScale = 0.5;

			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
		]]>
	</event>

</menu>