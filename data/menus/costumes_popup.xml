<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="Fade">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="20" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("PopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>

	<element name="Bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0*game.menuScaleX()" yOffset="-10*game.menuScaleX()" priorityOffset="8" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="192*game.menuScaleY()"/>
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("topHeight"):SetFloat(50.0)
						component("bottomHeight"):SetFloat(50.0)
						component("leftWidth"):SetFloat(50.0)
						component("rightWidth"):SetFloat(50.0)
						component("size"):SetFloat(0.5*game.menuScaleX())
						component("includeBorder"):SetInt(1)
						component("spriteName"):SetString("gfx/menu/Black9SFrame50")
						component("layer"):SetString("PopUps")
					]]>
			</event>
		</ninesliceComponent>
	</element>

	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-7" />
		<ninesliceComponent name="Sprite">
			<size w="200*game.menuScaleX()" h="45*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(45.0)
				component("bottomHeight"):SetFloat(45.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("PopUps")
			</event>
		</ninesliceComponent>
	</element>

	<element name="TitleLabel">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="160*game.menuScaleX()" h="40*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(0.26, 0.96, 0.26)
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.localizedUpper(game.getLocalizedText("COSTUMES_TITLE")))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("PopUps")
			</event>
		</textComponent>
	</element>

	<element name="MonsterAvatar">
		<position relativeTo="Bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="96*game.menuScaleX()" yOffset="32*game.menuScaleY()" priorityOffset="-1" />
		<aeComponent name="Anim">
			<event name="onInit" params="component, element">
				<![CDATA[
					local animationFile = "xml_bin/"..game.getMonsterAnimationFile(game.selectedMonsterId())
					component("animationName"):SetString(animationFile)
					component("animation"):SetString("Idle")

					local baseHeight = 650.0
					local factor = baseHeight / component:absH()
					local baseScale = 0.34*game.menuScaleX()
					component:setScale(Vector2(factor*baseScale, factor*baseScale))
					component("layer"):SetString("PopUps")

				]]>
			</event>
		</aeComponent>
	</element>

	<template type="template_battle_action_override" name="Action">
		<size w="146*game.menuScaleX()" h="48*game.menuScaleY()" />
		<position relativeTo="MonsterAvatar" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
	</template>

	<element name="ActionPlaceholder">
		<size w="160*game.menuScaleX()" h="40*game.menuScaleY()" />
		<position relativeTo="MonsterAvatar" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
		
		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("sheetName"):SetString("xml_resources/context_buttons.xml")
					component("spriteName"):Set("button_battle")
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(0)
				]]>
			</event>
		</spriteSheetComponent>

		<textComponent name="Text">
			<size w="140*game.menuScaleX()" h="40*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="20*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(1)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("COSTUME_ACTION_PLACEHOLDER")
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(0)
				]]>
			</event>
		</textComponent>

		<event name="show" params="element">
			<![CDATA[
				element["Icon"]("visible"):SetInt(1)
				element["Text"]("visible"):SetInt(1)
			]]>
		</event>

		<event name="hide" params="element">
			<![CDATA[
				element["Icon"]("visible"):SetInt(0)
				element["Text"]("visible"):SetInt(0)
			]]>
		</event>

	</element>

	<element name="AdditionalInfo">
		<size w="160*game.menuScaleX()" h="40*game.menuScaleY()" />
		<position relativeTo="MonsterAvatar" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0*game.menuScaleY()" priorityOffset="-1" />

		<spriteSheetComponent name="Icon">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("sheetName"):SetString("xml_resources/context_buttons.xml")
					component("spriteName"):Set("button_battle")
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(0)
				]]>
			</event>
		</spriteSheetComponent>

		<textComponent name="Text">
			<size w="140*game.menuScaleX()" h="40*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="20*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(1)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("Additional Info")
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(0)
				]]>
			</event>
		</textComponent>

		<event name="show" params="element">
			<![CDATA[
				element["Icon"]("visible"):SetInt(1)
				element["Text"]("visible"):SetInt(1)
			]]>
		</event>

		<event name="hide" params="element">
			<![CDATA[
				element["Icon"]("visible"):SetInt(0)
				element["Text"]("visible"):SetInt(0)
			]]>
		</event>
	</element>
	
	<element name="CostumeList">
		<size w="198*game.menuScaleX()" h="176*game.menuScaleY()"/>
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="26*game.menuScaleX()" yOffset="8*game.menuScaleY()" priorityOffset="-1" />
		<swipeComponent name="Swiper">
			<event name="onInit" params="component, element">
				<![CDATA[
						component("smoothMode"):SetInt(1)
					]]>
			</event>
			<event name="refresh" params="component, element">
				<![CDATA[
							include("ScrollingListHelper").SwiperRefresh(component, element, 
								element:parent():E("ScrollBar"):C("Sprite"),
								element:parent():E("ScrollMarker"):C("Marker"))
						]]>
			</event>
			<event name="onTick" params="component, element, dt">
				<![CDATA[
						include("ScrollingListHelper").SwiperTick(component, element, dt)
					]]>
			</event>
		</swipeComponent>

		<touchComponent name="Touch">
			<event name="onInit" params="component, element">
				component("singleTouch"):SetInt(1)
			</event>
		</touchComponent>

		<event name="onInit" params="element">
			<![CDATA[
				include("ScrollingListHelper").ListInit(element, {
						direction = MenuSwipeComponent_SwipeDirectionVertical,
						spacing = 12 * game.menuScaleY(),
						padding = 16 * game.menuScaleY(),
						alwaysBounce = 0
				})
			]]>
		</event>

		<event name="onPostInit" params="element">
			<![CDATA[
				element:DoStoredScript("populate")
			]]>
		</event>

		<event name="populate" params="element">
			<![CDATA[
				include("CostumesPopupUI").Populate(element)
			]]>
		</event>

		<event name="onTick" params="element, dt">
			<![CDATA[
					include("ScrollingListHelper").ListTick(element, dt)
					--update clipping
					local MenuHelpers = include("MenuHelpers")
					MenuHelpers.ForEachEntry(element,
						function(entry)
							entry("clipX"):SetFloat(element:absX())
							entry("clipY"):SetFloat(element:absY())
							entry("clipW"):SetFloat(element:absW())
							entry("clipH"):SetFloat(element:absH())
							entry:DoStoredScript("updateClipping")
						end
					)
			]]>
		</event>

		<event name="selectNewEntry" params="element">
			<![CDATA[
					include("CostumesPopupUI").SelectNewEntry(element)
				]]>
		</event>
		<!--
		<spriteComponent name="test_box">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onPostInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
					component:setScale(
						Vector2( element:absW() / 4.0, element:absH() / 4.0))
					component:setColor(1.0, 0.0, 0.0)
					component("alpha"):SetFloat(0.5)
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(1)
				]]>
			</event>
		</spriteComponent>
	-->
	</element>

	<element name="ScrollBar">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Bg" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="12*game.hudScale()" yOffset="0" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("scroll_bar_01")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.6*(game.menuScaleY()))
				component("layer"):SetString("PopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<element name="ScrollMarker">
		<size dependentOnElement="element:name()" dependentOnComponent="Marker" />
		<position relativeTo="ScrollBar" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="5*game.menuScaleY()" priorityOffset="-1" />
		<event name="onInit" params="element">
			element("scrollOffset"):SetFloat(0.0);
		</event>
		<spriteSheetComponent name="Marker">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("useOffsets"):SetInt(1)
					component("spriteName"):SetString("scroll_bar_dot")
					component("sheetName"):SetString("xml_resources/buttons01.xml")
					component("size"):SetFloat(0.5*game.menuScaleY())
					component("layer"):SetString("PopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Marker" />
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					include("ScrollingListHelper").ScrollMarkerOnInit(component, element, "CostumeList", "ScrollBar")
				]]>
			</event>
			<event name="onTouchDrag" params="component, element, x, y">
				<![CDATA[
					include("ScrollingListHelper").ScrollMarkerOnTouchDrag(component, element, x, y)
				]]>
			</event>

			<event name="onTick" params="component, element, dt">
				<![CDATA[
					include("ScrollingListHelper").ScrollMarkerOnTick(component, element, dt)
				]]>
			</event>
		</touchComponent>
	</element>

	<template type="template_spritesheetbutton" name="BuyButton">
		<templateVar name="$upSpriteName" equals="'button_buy'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="PopUps" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0.05*lua_sys.screenHeight()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="65*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="8*game.menuScaleX()" yOffset="0*game.hudScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):SetString(game.getTextFont())
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("BUY_BUTTON")
					component("layer"):SetString("PopUps")
				]]>
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					element("enabled"):SetInt(1)
					component("enabled"):SetInt(1)
				]]>
			</event>
			<event name="onTouchDown" params="component, element">
				<![CDATA[
					onTouchDown(component, element)
					element["Text"]:setColor(0.5, 0.5, 0.5)
				]]>
			</event>
			<event name="onTouchUp" params="component, element">
				<![CDATA[
					onTouchUp(component, element)
					element["Text"]:setColor(1.0, 1.0, 1.0)
					include("CostumesPopupUI").Purchase(element)
				]]>
			</event>
			<event name="onTouchRelease" params="component, element">
				<![CDATA[
					onTouchRelease(component, element)
					element["Text"]:setColor(1.0, 1.0, 1.0)
				]]>
			</event>
		</touchComponent>
		
		<event name="setEnable" params="element">
			<![CDATA[
				element("enabled"):SetInt(1)
				element["UpSprite"]:setColor(1.0, 1.0, 1.0)
				element["Text"]:setColor(1.0, 1.0, 1.0)
				if(element["UpSprite"]("visible"):GetInt() == 1) then
					element["Touch"]("enabled"):SetInt(1)
				end
			]]>
		</event>
		<event name="setDisable" params="element">
			<![CDATA[
				element("enabled"):SetInt(0)
				element["UpSprite"]:setColor(0.5, 0.5, 0.5)
				element["Text"]:setColor(0.5, 0.5, 0.5)
			]]>
		</event>
		<event name="setVisible" params="element">
			<![CDATA[
				element["UpSprite"]("visible"):SetInt(1)
				element["Text"]("alpha"):SetFloat(1.0)
				element["Touch"]("enabled"):SetInt(1)
			]]>
		</event>
		<event name="setInvisible" params="element">
			<![CDATA[
				element["UpSprite"]("visible"):SetInt(0)
				element["Text"]("alpha"):SetFloat(0.0)
				element["Touch"]("enabled"):SetInt(0)
			]]>
		</event>
		
	</template>

	<element name="BuyPrice">
		<size dependentOnElement="element:name()" dependentOnComponent="BackingSprite" />
		<position relativeTo="BuyButton" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="-20*game.menuScaleX()" yOffset="5*game.hudScale()" priorityOffset="5" />
		
		<spriteSheetComponent name="BackingSprite">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("stats_bar")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("PopUps")
				]]>
			</event>
		</spriteSheetComponent>
		
		<spriteSheetComponent name="CurrencySprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString(game.StoreContext_SPRITE_COINS)
					component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("visible"):SetInt(0)
					component("layer"):SetString("PopUps")
				]]>
			</event>
		</spriteSheetComponent>
		
		<textComponent name="Text">
			<size w="65*game.menuScaleX()" h="50*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="5*game.menuScaleX()" yOffset="-2*game.menuScaleY()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("0")
					component("layer"):SetString("PopUps")
				]]>
			</event>
		</textComponent>

		<element name="Strikeout">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="5*game.menuScaleX()" yOffset="-2*game.menuScaleY()" priorityOffset="-4" />
			
			<ninesliceComponent name="Sprite">
				<size w="4" h="1" />
				<position relativeTo="PARENT" vAnchor="VCENTER " hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("includeBorder"):SetInt(1)
						component("topHeight"):SetFloat(2.0)
						component("bottomHeight"):SetFloat(2.0)
						component("leftWidth"):SetFloat(2.0)
						component("rightWidth"):SetFloat(2.0)
						component("alpha"):SetFloat(0.6)
						component("spriteName"):SetString("gfx/menu/menu_sale_redline_3slice")
						component("layer"):SetString("PopUps")
						component("size"):SetFloat(0.50*game.menuScaleX())
						component("visible"):SetInt(0)
					]]>
				</event>
				<event name="onPostInit" params="component, element">
					<![CDATA[
						component:DoStoredScript("refresh")
					]]>
				</event>
				<event name="refresh" params="component, element">
					<![CDATA[
						local width = element:parent():GetComponent("Text")("renderWidth"):GetFloat() + 4 * game.menuScaleX()
						component:setSize(Vector2(width, component:absH()))
						component:calculatePosition()
					]]>
				</event>
			</ninesliceComponent>
		</element>

		<element name="BuyNowPrice">
			<!--<size w="65*game.menuScaleX()" h="16*game.menuScaleX()" />-->
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="5*game.menuScaleX()" yOffset="-8*game.menuScaleY()" priorityOffset="-3" />

			<spriteSheetComponent name="CurrencySprite">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
					component("spriteName"):SetString(game.StoreContext_SPRITE_COINS)
					component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("visible"):SetInt(0)
					component("layer"):SetString("PopUps")
				]]>
				</event>
			</spriteSheetComponent>

			<textComponent name="Text">
				<size w="65*game.menuScaleX()" h="16*game.menuScaleX()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("100")
					component("layer"):SetString("PopUps")
					component("visible"):SetInt(0)
				]]>
				</event>
			</textComponent>
<!--
			<spriteComponent name="test_box">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onPostInit" params="component, element">
					<![CDATA[
						component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
						component:setScale(
							Vector2( element:absW() / 4.0, element:absH() / 4.0))
						component:setColor(1.0, 0.0, 0.0)
						component("alpha"):SetFloat(0.5)
						component("layer"):SetString("PopUps")
						component("visible"):SetInt(1)
					]]>
				</event>
			</spriteComponent>
-->

		</element>
		
		<element name="SaleTag">
			<hudScale scale="game.hudScale()" />
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="BuyNowPrice" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("sale_tag_updated_taller")
					component("sheetName"):SetString("xml_resources/store_buttons01.xml")
					component("layer"):SetString("PopUps")
					component("size"):SetFloat(0.32)
					component("visible"):SetInt(0)
				</event>
			</spriteSheetComponent>
		</element>

		<event name="setInvisible" params="element">
			<![CDATA[
				element["BackingSprite"]("visible"):SetInt(0)
				element["CurrencySprite"]("visible"):SetInt(0)
				element["Text"]("alpha"):SetFloat(0.0)
			]]>
		</event>
		<event name="setVisible" params="element">
			<![CDATA[
				element["BackingSprite"]("visible"):SetInt(1)
				element["CurrencySprite"]("visible"):SetInt(1)
				element["Text"]("alpha"):SetFloat(1.0)
			]]>
		</event>
	</element>

	<template type="template_spritesheetbutton" name="EquipButton">
		<templateVar name="$upSpriteName" equals="'button_continue_green'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		<templateVar name="$text" equals="CONTEXTBAR_LABEL_WEAR" />
		<templateVar name="$textPadding" equals="6*game.hudScale()" />
		<templateVar name="$textYOffset" equals="0" />
		<templateVar name="$layer" equals="PopUps" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0.05*lua_sys.screenHeight()" priorityOffset="-4" />

		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				<![CDATA[
					onTouchDown(component, element)
					element["Text"]:setColor(0.5, 0.5, 0.5)
				]]>
			</event>
			<event name="onTouchUp" params="component, element">
				<![CDATA[
					onTouchUp(component, element)
					element["Text"]:setColor(1.0, 1.0, 1.0)
					include("CostumesPopupUI").Equip(element)
				]]>
			</event>
			<event name="onTouchRelease" params="component, element">
				<![CDATA[
					onTouchRelease(component, element)
					element["Text"]:setColor(1.0, 1.0, 1.0)
				]]>
			</event>
		</touchComponent>
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				<![CDATA[
					onInit(component, element)
					component("size"):SetFloat(0.25*game.hudScale())
					component("autoScale"):SetInt(1)
				]]>
			</event>
		</textComponent>
		
	</template>

	<element name="PurchaseStatus">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Fade" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-10" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("PopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>

	<event name="onInit" params="element">
		<![CDATA[
			element:DoStoredScript("hidePurchaseStatus")
			element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgMonsterCostumePurchased", "gotMsgMonsterCostumePurchased")
			element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgConfirmationSubmission", "gotMsgConfirmationSubmission")
			element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgNotificationDismissed", "gotMsgNotificationDismissed")
		]]>
	</event>

	<event name="onPostInit" params="element">
		<![CDATA[
			if not game.isBattleIsland() then
				element["Action"]:DoStoredScript("setInvisible")
				element["MonsterAvatar"]("yOffset"):SetFloat(element["MonsterAvatar"]("yOffset"):GetFloat() + 16 * game.menuScaleY())
			end
		]]>
	</event>

	<event name="queuePop" params="element">
		<![CDATA[
			element:root():popPopUp()
		]]>
	</event>

	<event name="gotMsgMonsterCostumePurchased" params="element, msg">
		<![CDATA[
			element:DoStoredScript("hidePurchaseStatus")
			element:DoStoredScript("refreshButtons")
			
			game.displayConfirmation("EQUIP_COSTUME", "EQUIP_COSTUME_PROMPT")
		]]>
	</event>
	
	<event name="showPurchaseStatus" params="element">
		<![CDATA[
			element["PurchaseStatus"]["Sprite"]("visible"):SetInt(1)
			element["PurchaseStatus"]["Touch"]("enabled"):SetInt(1)
		]]>
	</event>

	<event name="hidePurchaseStatus" params="element">
		<![CDATA[
			element["PurchaseStatus"]["Sprite"]("visible"):SetInt(0)
			element["PurchaseStatus"]["Touch"]("enabled"):SetInt(0)
		]]>
	</event>

	<event name="refreshButtons" params="element">
			<![CDATA[
				include("CostumesPopupUI").RefreshButtons(element)
			]]>
	</event>

	<event name="gotMsgConfirmationSubmission" params="element, msg">
		<![CDATA[
			include("CostumesPopupUI").GotMsgConfirmationSubmission(element, msg)
		]]>
	</event>

	<event name="gotMsgNotificationDismissed" params="element, msg">
		<![CDATA[
			element:DoStoredScript("hidePurchaseStatus")
			include("CostumesPopupUI").GotMsgNotificationDismissed(element, msg)
		]]>
	</event>

</menu>
