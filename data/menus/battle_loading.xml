<menu name="battle_loading" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="TouchBlocker">
		<size w="screenWidth()" h="screenHeight()"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<event name="onInit" params="component, element">
				component("singleTouch"):SetInt(1)
			</event>
		</touchComponent>
	</element>
	
	<element name="LeftBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="screenWidth()*0.5" yOffset="0" priorityOffset="20" />
		
		<spriteComponent name="Sprite">			
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("gfx/battle/battle_loading_bg_blue")
					
					if screenWidth() * 0.5 > screenHeight() then
						local scale = screenWidth() * 0.5 / 1024
						component:setScale(Vector2(scale,scale))
					else
						local scale = screenHeight() / 1024
						component:setScale(Vector2(scale,scale))
					end
					
					component("layer"):SetString("Loading")
				]]>
			</event>
		</spriteComponent>
	</element>
	
	<element name="RightBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="screenWidth()*0.5" yOffset="0" priorityOffset="20" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("gfx/battle/battle_loading_bg_red")
					if screenWidth() * 0.5 > screenHeight() then
						local scale = screenWidth() * 0.5 / 1024
						component:setScale(Vector2(scale,scale))
					else
						local scale = screenHeight() / 1024
						component:setScale(Vector2(scale,scale))
					end
					component("layer"):SetString("Loading")
				]]>
			</event>
		</spriteComponent>

	</element>

	<element name="Topper">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="-screenHeight()" priorityOffset="18" />

		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				<![CDATA[
						component("spriteName"):SetString("loading_topper_versus")
						component("sheetName"):SetString("xml_resources/battle_loading_sheet.xml")
						component("size"):SetFloat(0.5*game.hudScale())
						component("layer"):SetString("Loading")
					]]>
			</event>
		</spriteSheetComponent>

		<element name="Header">
			<size w="260*game.menuScaleX()" h="50*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-4*game.menuScaleY()" priorityOffset="0" />
			
			<ninesliceComponent name="Sprite">
				<size w="260*game.menuScaleX()" h="50*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("topHeight"):SetFloat(45.0)
						component("bottomHeight"):SetFloat(45.0)
						component("leftWidth"):SetFloat(50.0)
						component("rightWidth"):SetFloat(50.0)
						component("size"):SetFloat(0.5*game.menuScaleX())
						component("includeBorder"):SetInt(1)
						component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
						component("layer"):SetString("Loading")
					]]>
				</event>
			</ninesliceComponent>
			
			<textComponent name="Text">
				<size w="240*game.menuScaleX()" h="50*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
				<event name="onInit" params="component, element">
					<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScale"):SetInt(1)
					component("font"):Set(game.getTitleFont())
					component("size"):SetFloat(0.4*game.menuScaleY())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component:setColor(0.26, 0.96, 0.26)
					component("layer"):SetString("Loading")
					component("text"):SetString("VERSUS MATCH")
					]]>
				</event>
			</textComponent>
		</element>

	</element>

	<element name="PlayerInfo">
		<size w="220*game.menuScaleX()" h="24*game.menuScaleY()"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="16*game.menuScaleX()" yOffset="-8*game.menuScaleY()" priorityOffset="16" />

		<template type="template_player_avatar" name="PlayerProfileImg">
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="element:parent()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
		</template>
		
		<textComponent name="Text">
			<size w="160*game.menuScaleX()" h="32*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="54*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.3*game.menuScaleY())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("Loading")
						component:setColor(1.0, 0.9, 0.09) -- yellow
					]]>
			</event>
		</textComponent>

		<textComponent name="TierText">
			<size w="160*game.menuScaleX()" h="14*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="54*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.2*game.menuScaleY())
						component("text"):SetString("Tier 10")
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("Loading")
					]]>
			</event>
		</textComponent>

	</element>

	<element name="PlayerSlots">
		<size w="220*game.menuScaleX()" h="120*game.menuScaleY()"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="80*game.menuScaleY()" priorityOffset="16" />

		<template type ="template_battle_team_portrait" name="Slot0">
			<templateVar name="$TeamId" equals="0" />
			<templateVar name="$SlotId" equals="0" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
				<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>

		<template type ="template_battle_team_portrait" name="Slot1">
			<templateVar name="$TeamId" equals="0" />
			<templateVar name="$SlotId" equals="1" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="40 * game.menuScaleX()" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
				<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>

		<template type ="template_battle_team_portrait" name="Slot2">
			<templateVar name="$TeamId" equals="0" />
			<templateVar name="$SlotId" equals="2" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="80 * game.menuScaleY()" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
				<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>
		<!--
		<spriteComponent name="test_box">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onPostInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
					component:setScale(
						Vector2( element:absW() / 4.0, element:absH() / 4.0))
					component:setColor(1.0, 0.0, 0.0)
					component("alpha"):SetFloat(0.5)
					component("layer"):SetString("Loading")
					component("visible"):SetInt(1)
				]]>
			</event>
		</spriteComponent>
-->

		<event name="onInit" params="element">
			<![CDATA[
				include("BattleLoading").SlotsOnInit(element)
			]]>
		</event>

		<event name="onTick" params="element, dt">
			<![CDATA[
				include("BattleLoading").SlotsOnTick(element, dt)
			]]>
		</event>

		<event name="show" params="element">
			<![CDATA[
				include("BattleLoading").SlotsShow(element)
			]]>
		</event>

		<event name="hide" params="element">
			<![CDATA[
				include("BattleLoading").SlotsHide(element)
			]]>
		</event>

	</element>
	
	<element name="OpponentInfo">
		<size w="220*game.menuScaleX()" h="24*game.menuScaleY()"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="16*game.menuScaleX()" yOffset="-8*game.menuScaleY()" priorityOffset="16" />

		<template type="template_player_avatar" name="OpponentProfileImg">
			<templateVar name="$Layer" equals="Loading" />
			<templateVar name="$Flip" equals="1" />
			<position relativeTo="element:parent()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
		</template>

		<textComponent name="Text">
			<size w="160*game.menuScaleX()" h="32*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="54*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.3*game.menuScaleY())
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("Loading")
						component:setColor(1.0, 0.9, 0.09) -- yellow
					]]>
			</event>
		</textComponent>

		<textComponent name="TierText">
			<size w="160*game.menuScaleX()" h="14*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="54*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.2*game.menuScaleY())
						component("text"):SetString("Tier 10")
						component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
						component("autoScale"):SetInt(1)
						component("layer"):SetString("Loading")
					]]>
			</event>
		</textComponent>

	</element>

	<element name="OpponentSlots">
		<size w="220*game.menuScaleX()" h="120*game.menuScaleY()"/>
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="80*game.menuScaleY()" priorityOffset="16" />

		<template type ="template_battle_team_portrait" name="Slot0">
			<templateVar name="$TeamId" equals="1" />
			<templateVar name="$SlotId" equals="0" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>

		<template type ="template_battle_team_portrait" name="Slot1">
			<templateVar name="$TeamId" equals="1" />
			<templateVar name="$SlotId" equals="1" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="40 * game.menuScaleX()" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>

		<template type ="template_battle_team_portrait" name="Slot2">
			<templateVar name="$TeamId" equals="1" />
			<templateVar name="$SlotId" equals="2" />
			<templateVar name="$ShowHealth" equals="0" />
			<templateVar name="$Layer" equals="Loading" />
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="80 * game.menuScaleY()" priorityOffset="0" />

			<textComponent name="Text">
				<size w="120*game.menuScaleX()" h="14*game.menuScaleY()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="8*game.menuScaleX()" yOffset="0*game.menuScaleY()" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
							component("multiline"):SetInt(0)
							component("font"):Set(game.getTitleFont())
							component("size"):SetFloat(0.2*game.menuScaleY())
							component("text"):SetString("V O I D C O R N")
							component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
							component("autoScale"):SetInt(1)
							component("layer"):SetString("Loading")
						]]>
				</event>
			</textComponent>
		</template>
		
		<event name="onInit" params="element">
			<![CDATA[
				include("BattleLoading").SlotsOnInit(element)
			]]>
		</event>

		<event name="onTick" params="element, dt">
			<![CDATA[
				include("BattleLoading").SlotsOnTick(element, dt)
			]]>
		</event>

		<event name="show" params="element">
			<![CDATA[
				include("BattleLoading").SlotsShow(element)
			]]>
		</event>

		<event name="hide" params="element">
			<![CDATA[
				include("BattleLoading").SlotsHide(element)
			]]>
		</event>
	</element>

	<event name="onInit" params="element">
		<![CDATA[
			include("BattleLoading").OnInit(element)
		]]>
	</event>

	<event name="onPostInit" params="element">
		<![CDATA[
					element:DoStoredScript("show")
		]]>
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			include("BattleLoading").OnTick(element, dt)
		]]>
	</event>

	<event name="show" params="element">
		<![CDATA[
			include("BattleLoading").Show(element)
		]]>
	</event>

	<event name="hide" params="element">
		<![CDATA[
			include("BattleLoading").Hide(element)
		]]>
	</event>

</menu>