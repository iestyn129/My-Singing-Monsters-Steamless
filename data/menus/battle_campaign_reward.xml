<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<size dependentOnElement="Fade" dependentOnComponent="Sprite" />

	<element name="Fade">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="6" />

		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
			<![CDATA[
			component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
			component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
			component:setColor(0.0, 0.0, 0.0)
			component("alpha"):SetFloat(0.5)
			component("layer"):SetString("FrontPopUps")
			]]>
			</event>
		</spriteComponent>

		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
			<event name="onTouchUp" params="component, element">
					<![CDATA[
						--print("Closing Campaign Rewards")
						--element:parent():DoStoredScript("hide")
					]]>
			</event>
		</touchComponent>
	</element>

	<element name="Bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="lua_sys.screenHeight() * 2.0" priorityOffset="5" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="225*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("topHeight"):SetFloat(50.0)
						component("bottomHeight"):SetFloat(50.0)
						component("leftWidth"):SetFloat(50.0)
						component("rightWidth"):SetFloat(50.0)
						component("size"):SetFloat(0.5)
						component("includeBorder"):SetInt(1)
						component("spriteName"):SetString("gfx/menu/Black9SFrame50")
						component("layer"):SetString("FrontPopUps")
					]]>
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("menu_swirl_01")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("menu_swirl_02")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("rotation"):SetFloat(-0.5*math.pi)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteSheetComponent>
	</element>

	<element name="Title">
		<size w="260*game.menuScaleX()" h="50*game.menuScaleY()" />
		<position relativeTo="Bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<!--
		<ninesliceComponent name="Frame">
			<size w="260*game.menuScaleX()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</ninesliceComponent>
		-->
		<textComponent name="Text">
			<size w="240*game.menuScaleX()" h="50*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.4*game.menuScaleY())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component:setColor(0.938, 0.602, 0.113)
				component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<template type="template_spritesheetbutton" name="ContinueButton">
		<templateVar name="$upSpriteName" equals="button_continue_green" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		<templateVar name="$text" equals="CONTINUE" />
		<templateVar name="$textPadding" equals="6*game.hudScale()" />
		<templateVar name="$textYOffset" equals="0" />
		<templateVar name="$layer" equals="FrontPopUps" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				<![CDATA[
				onTouchUp(component, element)
				print("Closing Campaign Rewards")
				element:parent():DoStoredScript("hide")
				]]>
			</event>
		</touchComponent>
		<event name="onPostInit" params="element">
			element["Text"]("size"):SetFloat(0.25*game.hudScale())
			element["Text"]("autoScale"):SetInt(1)
		</event>
	</template>

	<element name="Rewards">
		<size w="386*game.menuScaleX()" h="180*game.menuScaleY()" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="8*game.menuScaleY()" priorityOffset="0" />

		<swipeComponent name="Swiper">
				<event name="refresh" params="component, element">
					<![CDATA[
						include("ScrollingListHelper").SwiperRefresh(component, element)
					]]>
				</event>
				<event name="onTick" params="component, element, dt">
					<![CDATA[
						include("ScrollingListHelper").SwiperTick(component, element, dt)
					]]>
				</event>
		</swipeComponent>

		<touchComponent name="Touch">
				<size dependentOnElement="element:name()" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("singleTouch"):SetInt(1)
					]]>
				</event>
		</touchComponent>
<!--
		<spriteComponent name="test_box">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onPostInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
					component:setScale(
						Vector2( element:absW() / 4.0, element:absH() / 4.0))
					component:setColor(1.0, 0.0, 0.0)
					component("alpha"):SetFloat(0.5)
					component("layer"):SetString("FrontPopUps")
					component("visible"):SetInt(1)
				]]>
			</event>
		</spriteComponent>
-->
		<event name="onInit" params="element">
			<![CDATA[
				include("ScrollingListHelper").ListInit(element, {direction=MenuSwipeComponent_SwipeDirectionHortizontal, alwaysBounce=0})
				element:DoStoredScript("populate")
			]]>
		</event>

		<event name="onTick" params="element, dt">
			<![CDATA[
				include("ScrollingListHelper").ListTick(element, dt)
				--update clipping
				local MenuHelpers = include("MenuHelpers")
				MenuHelpers.ForEachEntry(element,
					function(entry)
						entry("clipX"):SetFloat(element:absX())
						entry("clipY"):SetFloat(element:absY())
						entry("clipW"):SetFloat(element:absW())
						entry("clipH"):SetFloat(element:absH())
						entry:DoStoredScript("updateClipping")
					end
				)
			]]>
		</event>

		<event name="populate" params="element">
			<![CDATA[
				local battleClientData = game.getBattleClientData()
				local reward = battleClientData:dequeueCampaignRewardPopup()

				if reward.fromBuyout then
					element:parent()["Title"]["Text"]("text"):SetString("BATTLE_CAMPAIGN_BUYOUT")
					element["RewardsText"]("text"):SetString("BATTLE_CAMPAIGN_BUYOUT_REWARDS")
				else
					element:parent()["Title"]["Text"]("text"):SetString("BATTLE_CAMPAIGN_COMPLETE")
					element["RewardsText"]("text"):SetString("BATTLE_CAMPAIGN_REWARDS")
				end

				include("BattleRewardListHelper").Populate(element, reward)
			]]>
		</event>

		<textComponent name="RewardsText">
			<size w="360*game.menuScaleX()" h="40*game.menuScaleY()" />
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="10*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(1)
					component("autoScale"):SetInt(1)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.35*game.menuScaleY())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</textComponent>

	</element>

	<event name="queuePop" params="element">
		<![CDATA[
			element:DoStoredScript("hide")
		]]>
	</event>

	<event name="onInit" params="element">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.OnInit(element:GetElement("Bg"), {startY = lua_sys.screenHeight() * 2.0, endY = -16*game.menuScaleY(), duration = 0.66})
			element:DoStoredScript("show")
		]]>
	</event>

	<event name="onTick" params="element, dt">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			local options = {
				ease = lua_sys.Quadratic_EaseIn,
				onDoneShow = function(e) element:DoStoredScript("playParticles") end,
				onDoneHide = function(e) e:root():popPopUp() end
			}
			offsetTransition.OnTick(element:GetElement("Bg"), dt, options)
		]]>
	</event>

	<event name="show" params="element">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.Show(element:GetElement("Bg"))

			playSoundFx("audio/sfx/menu_slide.wav")
		]]>
	</event>

	<event name="hide" params="element">
		<![CDATA[
			local offsetTransition = include("MenuElementPositionOffsetTransition")
			offsetTransition.Hide(element:GetElement("Bg"))

			playSoundFx("audio/sfx/menu_slide.wav")
		]]>
	</event>

	<event name="playParticles" params="element">
		<![CDATA[

			lua_sys.playSoundFx("audio/sfx/level_up_player.wav")

			local midX = lua_sys.screenWidth()/2
			local midY = lua_sys.screenHeight()/2
			local scale = 2.0*lua_sys.screenWidth()/480.0;
			local emissionScale = 0.5;

			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
			game.playParticle("particles/particle_growup.psi", "gfx/particles/particle_growup", midX, midY, "Tutorial", 0.001, scale, emissionScale);
		]]>
	</event>

</menu>