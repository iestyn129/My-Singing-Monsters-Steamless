<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

  <size dependentOnElement="Fade" dependentOnComponent="Sprite" />

  <element name="Fade">
    <size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
    <position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
    <orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="4" />
    <spriteComponent name="Sprite">
      <event name="onInit" params="component, element">
        <![CDATA[
        component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
        component:setScale(Vector2(screenWidth()*0.25, screenHeight()*0.25))
        component:setColor(0.0, 0.0, 0.0)
        component("alpha"):SetFloat(0.5)
        component("layer"):SetString("MidPopUps")
        ]]>
      </event>
    </spriteComponent>

    <touchComponent name="Touch">
      <size dependentOnElement="element:name()" />
      <position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
      <orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
    </touchComponent>
  </element>

	<template type="template_panel_decorated" name="Bg">
		<templateVar name="$layer" equals="MidPopUps" />
		<size w="380*game.menuScaleX()" h="192*game.menuScaleY()" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0*game.hudScale()" yOffset="screenHeight() * 2.0" priorityOffset="2" />

		<textComponent name="TitleText">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="20*game.hudScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
						component("multiline"):SetInt(0)
						component("autoScale"):SetInt(1)
						component("font"):Set(game.getTitleFont())
						component("size"):SetFloat(0.6*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("BATTLE_VICTORY")
						component("layer"):SetString("MidPopUps")
						component:setColor(0.93, 0.60, 0.11)
					]]>
			</event>
		</textComponent>

		<element name="Defeat">
			<size dependentOnElement="Bg" dependentOnComponent="Sprite"/>
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />

			<textComponent name="LossText">
				<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0*12*game.menuScaleY()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(1)
						component("autoScale"):SetInt(1)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.4*game.composerScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("BATTLE_TRY_TRAINING")
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>

			<textComponent name="ResultText">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="8*game.menuScaleY()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("autoScale"):SetInt(1)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.4*game.composerScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("BATTLE_TRY_AGAIN")
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>

			<spriteSheetComponent name="Furcorn">
				<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
				<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="LEFT" />
				<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="8*game.menuScaleX()" yOffset="-74*game.menuScaleY()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("Furcorn_Sad")
					component("sheetName"):SetString("xml_resources/buttons01.xml")
					component("size"):SetFloat(0.45*game.composerScale())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>

			<event name="onPostInit" params="element">
				element:DoStoredScript("hide")
			</event>

			<event name="show" params="element">
				element:GetComponent("ResultText")("visible"):SetInt(1)
				element:GetComponent("LossText")("visible"):SetInt(1)
				element:GetComponent("Furcorn")("visible"):SetInt(1)
			</event>

			<event name="hide" params="element">
				element:GetComponent("ResultText")("visible"):SetInt(0)
				element:GetComponent("LossText")("visible"):SetInt(0)
				element:GetComponent("Furcorn")("visible"):SetInt(0)
			</event>
		</element>

		<element name="Victory">
			<size dependentOnElement="Bg" dependentOnComponent="Sprite"/>
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />

			<textComponent name="ResultText">
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="-12*game.menuScaleY()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("autoScale"):SetInt(1)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.4*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("BATTLE_YOU_WON")
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>

			<textComponent name="CampaignText">
				<size dependentOnElement="element:name()" dependentOnComponent="Sprite"/>
				<position relativeTo="element:name()" vAnchor="TOP" hAnchor="HCENTER" />
				<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="54*game.menuScaleY()" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(1)
						component("autoScale"):SetInt(1)
						component("font"):Set(game.getTextFont())
						component("size"):SetFloat(0.4*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						component("text"):SetString("BATTLE_CAMPAIGN_BATTLES_COMPLETED")
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>

			<event name="onPostInit" params="element">
				element:DoStoredScript("hide")
			</event>

			<event name="show" params="element">
				element:GetComponent("ResultText")("visible"):SetInt(1)
				element:GetComponent("CampaignText")("visible"):SetInt(1)
			</event>

			<event name="hide" params="element">
				element:GetComponent("ResultText")("visible"):SetInt(0)
				element:GetComponent("CampaignText")("visible"):SetInt(0)
			</event>
		</element>

	</template>

	<template type="template_spritesheetbutton" name="ContinueButton">
		<templateVar name="$upSpriteName" equals="'button_continue_green'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		<templateVar name="$text" equals="MAIN_CONTINUE" />
		<templateVar name="$textPadding" equals="6*game.hudScale()" />
		<templateVar name="$textYOffset" equals="0" />
		<templateVar name="$layer" equals="MidPopUps" />
		<position relativeTo="Bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="16*game.menuScaleY()" priorityOffset="-1" />

		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				<![CDATA[
					if game.inBattleContext() then
						local campaignId = game.battleSystem():campaignId()
						game.postBattleSwitch(campaignId)
					else
						element:root():popPopUp()
					end
				]]>
			</event>
		</touchComponent>
		<event name="onPostInit" params="element">
			element["Text"]("size"):SetFloat(0.25*game.hudScale())
			element["Text"]("autoScale"):SetInt(1)
		</event>
	</template>

	<script src="scripts/BattleCampaignResultsUI.lua"/>

</menu>