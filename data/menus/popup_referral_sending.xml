<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<event name="onPostInit" params="element">
		game.hideContextBar()
	</event>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="5" />
		<spriteComponent name="Sprite">
			<position relativeTo="PARENT" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/menu/menu_background_01")
				component("layer"):SetString("FrontPopUps")				
				component:setScale(Vector2(game.bgScaleX(), game.bgScaleY())) 
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-2" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="175*game.hudScale()" h="30*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.4*game.hudScale())
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("FrontPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="5*game.hudScale()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="160*game.hudScale()" h="30*game.hudScale()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(0.24, 0.67, 0.9)
				component("size"):SetFloat(0.45*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.localizedUpper("TITLE_REFERRAL"))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="Description">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="TitleFrame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0.2*lua_sys.screenHeight()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="0.9 * lua_sys.screenWidth()" h="0.3 * lua_sys.screenWidth()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getLocalizedText("REFERRAL_SENDING_DESC"))
				component("size"):SetFloat(0.3*game.hudScale())
				component("layer"):SetString("FrontPopUps")
				component:calculatePosition()
			</event>			
		</textComponent>
	</element>

	<element name="ReferralInput">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Description" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0.1*lua_sys.screenHeight()" priorityOffset="0" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				element("referralCode"):SetString("")
				component("spriteName"):SetString("selectable_bar_grey")
				component("sheetName"):SetString("xml_resources/breeding01.xml")
				component("size"):SetFloat(0.6*game.hudScale())
				component("layer"):SetString("FrontPopUps")
				element:SetupGenericListener(game.engineReceiver(), "sys::msg::MsgKeyboardEntryResult", "gotMsgKeyboardEntryResult")
				element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgTextEntrySubmission", "gotMsgTextEntrySubmission")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()"/>
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				element["Sprite"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchRelease" params="component, element">
				element["Sprite"]:setColor(1.0, 1.0, 1.0)
			</event>
			<event name="onTouchUp" params="component, element">
				element["Sprite"]:setColor(1.0, 1.0, 1.0)
				game.displayTextEntry(game.getLocalizedText("REFERRAL_INPUT_LABEL"), "", true, -1, 75, false, "REFERRAL")
			</event>
		</touchComponent>
		<textComponent name="Text">
			<size dependentOnElement="element:name()"/>
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(10)
				component("autoScale"):SetInt(1)
				component("multiline"):SetInt(0)
				component("size"):SetFloat(0.3*game.hudScale())
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("layer"):SetString("FrontPopUps")
				component("text"):SetString("")
			</event>
		</textComponent>
		<event name="gotMsgKeyboardEntryResult" params="element, msg">
			if(not msg.cancelled) then
				element("referralCode"):SetString(msg.text)
				element["Text"]("text"):SetString(msg.text)
				
				if(msg.text ~= "") then
					element:parent():GetElement("SubmitButton"):DoStoredScript("setEnabled")
				else
					element:parent():GetElement("SubmitButton"):DoStoredScript("setDisabled")
				end
			end
		</event>

		<event name="gotMsgTextEntrySubmission" params="element, msg">
			if((msg.messageID == "REFERRAL") and (msg.choice == true)) then
				element("referralCode"):SetString(msg.text)
				element["Text"]("text"):SetString(msg.text)
				
				if(msg.text ~= "") then
					element:parent():GetElement("SubmitButton"):DoStoredScript("setEnabled")
				else
					element:parent():GetElement("SubmitButton"):DoStoredScript("setDisabled")
				end
			end
		</event>
	</element>
	
	<template type="template_nineslicebutton" name="SubmitButton">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$text" equals="LABEL_SUBMIT" />		
		<templateVar name="$spriteScale" equals="0.37*game.hudScale()" />
		<templateVar name="$layer" equals="FrontPopUps" />
		<templateVar name="$topHeight" equals="16.0" />
		<templateVar name="$bottomHeight" equals="16.0" />
		<templateVar name="$leftWidth" equals="23.0" />
		<templateVar name="$rightWidth" equals="23.0" />
		<templateVar name="$width" equals="lua_sys.screenWidth() * 0.3" />
		<templateVar name="$height" equals="lua_sys.screenWidth() * 0.05" />
		<templateVar name="$includeBorder" equals="1" />
		
		<position relativeTo="ReferralInput" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="30*game.hudScale()" priorityOffset="0" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				--element:root():popPopUp()
				local referral = element:parent()["ReferralInput"]("referralCode"):GetString()
				if (referral ~= "") then
					if(tonumber(referral:sub(1,1)) ~= nil) then
						game.sendReferralRequest(referral)
					else
						game.enterKeyCode("R:"..referral)
					end
				end
			</event>
		</touchComponent>
		<event name="onPostInit" params="element">
			element:DoStoredScript("setDisabled")
			element["Text"]("size"):SetFloat(0.25*game.hudScale())
			element["Text"]("autoScale"):SetInt(1)
		</event>
		<event name="setDisabled" params="element">
			element["UpSprite"]:setColor(0.5, 0.5, 0.5)
			element["Text"]:setColor(0.5, 0.5, 0.5)
			element["Touch"]("enabled"):SetInt(0)
		</event>
		<event name="setEnabled" params="element">
			element["UpSprite"]:setColor(1.0, 1.0, 1.0)
			element["Text"]:setColor(1.0, 1.0, 1.0)
			element["Touch"]("enabled"):SetInt(1)
		</event>
	</template>
	
	<template type="template_spritesheetbutton" name="CloseButton">	
		<templateVar name="$layer" equals="FrontPopUps" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="3*game.hudScale()" yOffset="12*game.hudScale()" priorityOffset="4" />
				
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)				
				element:root():popPopUp()
				game.showContextBar()
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_back")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-6*game.hudScale()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("EXIT")
				component("size"):SetFloat(0.2*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
	</template>
	
	<event name="queuePop" params="element">
		element:root():popPopUp()
	</event>
	
</menu>