<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<template type="template_fade" name="Fade">
		<templateVar name="$layer" equals="MidPopUps" />
		<templateVar name="$priority" equals="12" />
	</template>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="lua_sys.screenHeight() * 2.0" priorityOffset="11" />
		<ninesliceComponent name="Sprite">
			<size w="425*lua_sys.screenWidth()/480" h="265*lua_sys.screenHeight()/320" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(1)
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-20*game.hudScale()" priorityOffset="-3" />
		<ninesliceComponent name="Sprite">
			<size w="300*game.menuScaleX()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="Title">
		<size dependentOnElement="element:name()" dependentOnComponent="Text"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="290*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("font"):Set(game.getTitleFont())
				component("multiline"):SetInt(0)
				component("size"):SetFloat(0.45*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component:setColor(1.0, 0.9, 0.09)
				component("text"):SetString("SYNTHESIZING_MENU_TITLE")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>

	<element name="Description">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="40*game.menuScaleY()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="325*game.menuScaleX()" h="120*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.3*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("layer"):SetString("MidPopUps")
				component("text"):SetString("SYNTHESIZING_DESC")
				component("autoScale"):SetInt(1)
			</event>
		</textComponent>
	</element>

	<element name="GaugeAnimation">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<aeComponent name="Sprite">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("animationName"):SetString("xml_bin/synth_menu_anim.bin")
					component("animation"):SetString("gauge_idle")
					component:setScale(Vector2(0.5*game.menuScaleX(), 0.5*game.menuScaleX()))
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</aeComponent>
	</element>
	

	<element name="GaugeArm">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("sheetName"):SetString("xml_resources/synth_menu_sheet.xml")
				component("spriteName"):SetString("synth_gauge_arm")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<element name="CritterSlotHolder">
		<size dependentOnElement="element:name()" dependentOnComponent="Frame"/>
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="58*game.menuScaleX()" priorityOffset="-3" />
		<ninesliceComponent name="Frame">
			<size w="270*game.menuScaleX()" h="60*game.hudScale()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(59.0)
				component("bottomHeight"):SetFloat(59.0)
				component("leftWidth"):SetFloat(74.0)
				component("rightWidth"):SetFloat(74.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Button_Frame")
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(1)
			</event>
		</ninesliceComponent>
	</element>

	<element name="CritterSlots">
		<size w="260*game.menuScaleX()" h="45*game.hudScale()" />
		<position relativeTo="CritterSlotHolder" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
	</element>

	<template type="template_spritesheetbutton" name="SynthesizeButton">
	<templateVar name="$upSpriteName" equals="'button_buy'" />
	<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
	<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
	<templateVar name="$layer" equals="MidPopUps" />
	<position relativeTo="bg" component="" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="-20*game.menuScaleX()" yOffset="-5*game.menuScaleX()" priorityOffset="-1" />
		<event name="setEnable" params="element">
			<![CDATA[
				element["UpSprite"]:setColor(1.0, 1.0, 1.0)
				element["Label"]:setColor(1.0, 1.0, 1.0)
				if(element["UpSprite"]("visible"):GetInt() == 1) then
					element["Touch"]("enabled"):SetInt(1)
				end
			]]>
		</event>
		<event name="setDisable" params="element">
			<![CDATA[
				element["UpSprite"]:setColor(0.5, 0.5, 0.5)
				element["Label"]:setColor(0.5, 0.5, 0.5)
				element["Touch"]("enabled"):SetInt(0)
			]]>
		</event>
		<event name="setVisible" params="element">
			<![CDATA[
				element["UpSprite"]("visible"):SetInt(1)
				element["Label"]("visible"):SetInt(1)
				element["Touch"]("enabled"):SetInt(1)
			]]>
		</event>
		<event name="setInvisible" params="element">
			<![CDATA[
				element["UpSprite"]("visible"):SetInt(0)
				element["Label"]("visible"):SetInt(0)
				element["Touch"]("enabled"):SetInt(0)
			]]>
		</event>
		<textComponent name="Label">
			<size w="65*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="8*game.menuScaleX()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScale"):SetInt(1)
					component("autoScaleFactor"):SetFloat(0.01)
					component("font"):SetString(game.getTextFont())
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("CONTEXTBAR_CONFIRM_LABEL")
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("enabled"):SetInt(1)
				]]>
			</event>
			<event name="onTouchDown" params="component, element">
				<![CDATA[
					onTouchDown(component, element)
					element["Label"]:setColor(0.5, 0.5, 0.5)
				]]>
			</event>
			<event name="onTouchUp" params="component, element">
				<![CDATA[
					onTouchUp(component, element)
					element["Label"]:setColor(1.0, 1.0, 1.0)
					element:parent():StartSynthesizing()
				]]>
			</event>
			<event name="onTouchRelease" params="component, element">
				<![CDATA[
					onTouchRelease(component, element)
					element["Label"]:setColor(1.0, 1.0, 1.0)
				]]>
			</event>
		</touchComponent>
	</template>

	<element name="Cost">
		<size dependentOnElement="element:name()" dependentOnComponent="BackingSprite" />
		<position relativeTo="SynthesizeButton" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="-16*game.menuScaleX()" yOffset="2*game.menuScaleX()" priorityOffset="-2" />
		<spriteSheetComponent name="BackingSprite">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("stats_bar")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="CurrencySprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="LEFT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					
					component("spriteName"):SetString(game.StoreContext_SPRITE_ETH_CURRENCY)
					component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
					
					component("size"):SetFloat(0.5*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</spriteSheetComponent>
		<textComponent name="Text">
			<size w="65*game.menuScaleX()" h="50*game.menuScaleX()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="5*game.menuScaleX()" yOffset="-2*game.menuScaleY()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("autoScaleFactor"):SetFloat(0.01)
					component("autoScale"):SetInt(1)
					component("font"):Set(game.getTextFont())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("text"):SetString("0")
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
		<event name="onInit" params="element">
			<![CDATA[
				element("alpha"):SetFloat(0)
			]]>
		</event>
		<event name="setInvisible" params="element">
			<![CDATA[
				element["BackingSprite"]("visible"):SetInt(0)
				element["CurrencySprite"]("visible"):SetInt(0)
				element["Text"]("visible"):SetInt(0)
			]]>
		</event>
		<event name="setVisible" params="element">
			<![CDATA[
				element["BackingSprite"]("visible"):SetInt(1)
				element["CurrencySprite"]("visible"):SetInt(1)
				element["Text"]("visible"):SetInt(1)
			]]>
		</event>
		<event name="updateAlpha" params="element">
			<![CDATA[
				local alpha = element("alpha"):GetFloat()
				element["BackingSprite"]("alpha"):SetFloat(alpha)
				element["CurrencySprite"]("alpha"):SetFloat(alpha)
				element["Text"]("alpha"):SetFloat(alpha)
			]]>
		</event>
	</element>

	<element name="PopupFadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="4" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element, x, y">
				element:parent():ShowCritterSelectPopup(0)
				element:parent():CritterSelected("")
			</event>
		</touchComponent>
	</element>	

	<element name="CritterTypePopup">
		<size dependentOnElement="element:name()" dependentOnComponent="Frame"/>
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="-30*game.hudScale()" priorityOffset="-8" />
		<ninesliceComponent name="Frame">
			<size w="300*game.menuScaleX()" h="130*game.hudScale()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(1)
			</event>
		</ninesliceComponent>
		<textComponent name="Text">
			<size w="280*game.menuScaleX()" h="50*game.hudScale()" />
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="15*game.hudScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.3*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("layer"):SetString("MidPopUps")
				component("text"):SetString("SYNTHESIZING_CRITTER_SELECT")
				component("autoScale"):SetInt(1)
			</event>
		</textComponent>
	</element>

	<script src="scripts/Synthesizing.lua" />	
</menu>