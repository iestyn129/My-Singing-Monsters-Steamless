<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="7" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="Frame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="(-1)*lua_sys.screenWidth()" yOffset="0" priorityOffset="3" />
		<ninesliceComponent name="Sprite">
			<size w="400*game.menuScaleX()" h="225*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
				local titleFrame = element:parent():GetElement("TitleFrame")
				game.setClipping("Clipping", 0, (element:absY() + (titleFrame:absH()/2))*lua_sys.deviceScaleY(), lua_sys.screenWidth()*lua_sys.deviceScaleX(), (element:absH() - (titleFrame:absH()/2) - 10)*lua_sys.deviceScaleY())
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
	</element>
		
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<ninesliceComponent name="Sprite">
			<size w="175*game.menuScaleX()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1"/>
		<textComponent name="Text">
			<size w="150*game.menuScaleX()" h="35" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component:setColor(0.43, 0.98, 0.02)
				component("size"):SetFloat(0.45*game.hudScale())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.localizedUpper("CONTROLLER_SCHEME"))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<spriteComponent name="ControllerImage">
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onInit" params="component, element">
			local controllerName = game.getControllerName()
			
			if(string.find(controllerName, "Thunder") or string.find(controllerName, "Amazon Fire Game Controller")) then
				component("spriteName"):SetString("gfx/menu/Thunder")
			else
				local controllerType = game.getControllerType()
				
				if(controllerType == game.MsgControllerType_MOGA_POCKET) then
					component("spriteName"):SetString("gfx/menu/MOGAPocket")
				elseif(controllerType == game.MsgControllerType_MOGA_PRO) then
					component("spriteName"):SetString("gfx/menu/MOGAPro")
				elseif(controllerType == game.MsgControllerType_GENERIC) then
					component("spriteName"):SetString("gfx/menu/Thunder")
				end
			end
			
			component("size"):SetFloat(lua_sys.screenWidth()/1024.0)
			component("layer"):SetString("MidPopUps")
		</event>
	</spriteComponent>

	<event name="onInit" params="element">
		element("transitionState"):SetInt(1)
		element("transitionTime"):SetFloat(0.0)
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		element["Frame"]("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) - (0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
	</event>
	
	<event name="onTick" params="element, dt">				
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				local transitionTime = element("transitionTime"):GetFloat()
				
				element:DoStoredScript("TickTransition")
					
				if(transitionState == 1) then
					transitionTime = (transitionTime + dt*3)
				elseif(transitionState == 2) then
					transitionTime = (transitionTime - dt*3)
				end
				
				element("transitionTime"):SetFloat(transitionTime)
				
				if(transitionTime > 1.0) then
					element("transitionState"):SetInt(0)
					element("transitionTime"):SetFloat(1.0)
					element:DoStoredScript("TickTransition")
				elseif(transitionTime < 0.0) then
					element:root():popPopUp()
					
					if(manager:getContext() == "CONTROLLER_SCHEME") then
						manager:setContext("OPTIONS")
					else
						game.controllerScreenDone()
						manager:setContext(manager:getDefaultContext())
					end
				end
			end
		]]>
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
</menu>