<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	<touchComponent name="Touch">
		<size w="lua_sys.screenWidth()" h="lua_sys.screenHeight()" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="10" />
	</touchComponent>
	
	<template type="template_spritesheetbutton" name="clearSecureStorageButton">
		<templateVar name="$upSpriteName" equals="'button_long_purp@2x'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SCREEN" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="10*game.menuScaleX()" yOffset="5*game.menuScaleY()" priorityOffset="7" />
		<textComponent name="TextLabel">
			<size w="80*game.menuScaleX()" h="30*game.menuScaleX()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-2*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component:GetVar("multiline"):SetInt(1)
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("size"):SetFloat(0.4*game.menuScaleX())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component:GetVar("text"):SetString("Clear Secure Storage")
				component:GetVar("autoScale"):SetInt(1)
				component:GetVar("layer"):SetString("MidPopUps")
				if(game.showClearSecureStorage() == false) then
					element:DoStoredScript("setInvisible")
					component("visible"):SetInt(0)
				end
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["TextLabel"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				game.clearSecureStorage();
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="ChangeUserButton">
		<templateVar name="$upSpriteName" equals="'button_long_purp@2x'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="10*game.menuScaleX()" yOffset="10*game.menuScaleY()" priorityOffset="7" />
		<textComponent name="TextLabel">
			<size w="80*game.menuScaleX()" h="30*game.menuScaleX()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-2*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component:GetVar("multiline"):SetInt(1)
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("size"):SetFloat(0.4*game.menuScaleX())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component:GetVar("text"):SetString("LABEL_CHANGE_USER")
				component:GetVar("autoScale"):SetInt(1)
				component:GetVar("layer"):SetString("MidPopUps")
				if(game.hasMultipleLoginTypes() == false) then
					element:DoStoredScript("setInvisible")
					component("visible"):SetInt(0)
				end
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["TextLabel"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				menu:popPopUp()
				menu:pushPopUp("change_user")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="LeftButton">
		<templateVar name="$upSpriteName" equals="'button_invite'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="0" yOffset="10*game.menuScaleY()" priorityOffset="7" />
		<textComponent name="TextLabel">
			<size w="126*game.menuScaleX()" h="28*game.menuScaleX()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-7*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component:GetVar("multiline"):SetInt(1)
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component:GetVar("text"):SetString(game.getLocalizedText("MAIN_MENU_PLAY").." "..game.getLocalizedText("BUTTON_ANON_LABEL"))
				component:GetVar("autoScale"):SetInt(1)
				component:GetVar("layer"):SetString("MidPopUps")
				if(game.hasMultipleLoginTypes() == false or game.lastLoginMethodName() == "BUTTON_STEAM_LABEL") then
					component:GetVar("yOffset"):SetFloat(0)
				end
			</event>
		</textComponent>
		<textComponent name="LoginType">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="2*game.menuScaleY()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("size"):SetFloat(0.2*game.menuScaleX())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				local lastLoginText = game.lastLoginMethodName()
				if lastLoginText == "BUTTON_APPLE_LABEL" or lastLoginText == "BUTTON_STEAM_LABEL" then
					lastLoginText = ""
				else
					lastLoginText = "( "..game.getLocalizedText(lastLoginText).." )"
				end
				component:GetVar("text"):SetString(lastLoginText)
				component:GetVar("layer"):SetString("MidPopUps")
			</event>
			<event name="onTick" params="component, element">
				component:GetVar("visible"):SetFloat(0)
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["TextLabel"]:setColor(0.5, 0.5, 0.5)
				element["LoginType"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				element["LoginType"]:setColor(1.0, 1.0, 1.0)
				game.authWithAnon()
				menu:popPopUp()
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				element["LoginType"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="RightButton">
		<templateVar name="$upSpriteName" equals="'button_invite'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.5*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="0" yOffset="10*game.menuScaleY()" priorityOffset="7" />
		<textComponent name="TextLabel">
			<size w="126*game.menuScaleX()" h="28*game.menuScaleX()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-7*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component:GetVar("multiline"):SetInt(1)
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component:GetVar("text"):SetString(game.getLocalizedText("MAIN_MENU_PLAY").." "..game.getLocalizedText("BUTTON_EMAIL_LABEL"))
				component:GetVar("autoScale"):SetInt(1)
				component:GetVar("layer"):SetString("MidPopUps")
				if(game.hasMultipleLoginTypes() == false or game.lastLoginMethodName() == "BUTTON_STEAM_LABEL") then
					component:GetVar("yOffset"):SetFloat(0)
				end
			</event>
		</textComponent>
		<textComponent name="LoginType">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="2*game.menuScaleY()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component:GetVar("font"):Set(game.getTextFont())
				component:GetVar("size"):SetFloat(0.2*game.menuScaleX())
				component:GetVar("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				local lastLoginText = game.lastLoginMethodName()
				if lastLoginText == "BUTTON_APPLE_LABEL" or lastLoginText == "BUTTON_STEAM_LABEL" then
					lastLoginText = ""
				else
					lastLoginText = "( "..game.getLocalizedText(lastLoginText).." )"
				end
				component:GetVar("text"):SetString(lastLoginText)
				component:GetVar("layer"):SetString("MidPopUps")
			</event>
			<event name="onTick" params="component, element">
				component:GetVar("visible"):SetFloat(0)
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["TextLabel"]:setColor(0.5, 0.5, 0.5)
				element["LoginType"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				element["LoginType"]:setColor(1.0, 1.0, 1.0)
				menu:popPopUp()
				menu:pushPopUp("login_email")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["TextLabel"]:setColor(1.0, 1.0, 1.0)
				element["LoginType"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="InfoButton">
		<templateVar name="$spriteScale" equals="0.4*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="10*game.menuScaleX()" yOffset="10*game.menuScaleY()" priorityOffset="7" />
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-6*game.hudScale()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("CONTEXTBAR_INFO_LABEL")
				component("size"):SetFloat(0.2*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_info2")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				menu:pushPopUp("help_login")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>

	<template type="template_spritesheetbutton" name="HelpButton">
		<templateVar name="$spriteScale" equals="0.4*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="InfoButton" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-6*game.hudScale()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("CONTEXTBAR_HELP_LABEL")
				component("size"):SetFloat(0.2*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_info")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				menu:pushPopUp("popup_notification_crack")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>

	<template type="template_spritesheetbutton" name="ExitButton">
		<templateVar name="$spriteScale" equals="0.4*game.menuScaleX()" />
		<templateVar name="$layer" equals="'MidPopUps'" />
		<position relativeTo="HelpButton" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-6*game.hudScale()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("MAIN_MENU_EXIT")
				component("size"):SetFloat(0.2*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_no")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				lua_sys.exitGame()
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>
	
</menu>