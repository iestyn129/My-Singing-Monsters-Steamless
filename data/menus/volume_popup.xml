<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="Label">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="SliderBg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="4*game.hudScale()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="150*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.3*game.hudScale())
				component("text"):SetString("CONTEXTBAR_VOLUME_LABEL")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("ContextBar")
			</event>
		</textComponent>
	</element>
	
	<element name="SliderBg">
		<size dependentOnElement="element:name()" dependentOnComponent="bg" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="5*game.hudScale()" yOffset="15*game.hudScale()" priorityOffset="5" />
		<spriteSheetComponent name="bg">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("time_slider_frame")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.25*game.hudScale())
				component("layer"):SetString("ContextBar")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="minus">
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="LEFT" />
			<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="16*game.hudScale()" yOffset="9*game.hudScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("time_minus")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.17*game.hudScale())
				component("layer"):SetString("ContextBar")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="plus">
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="RIGHT" />
			<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="13*game.hudScale()" yOffset="5*game.hudScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("time_plus")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.17*game.hudScale())
				component("layer"):SetString("ContextBar")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="Slider">
		<size w="185*game.hudScale()" h="35*game.hudScale()" />
		<position relativeTo="SliderBg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="-9*game.hudScale()" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("time_slider")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.28*game.hudScale())
				component("layer"):SetString("ContextBar")
				component("xOffset"):SetInt((element:absW() * 0.85)*(game.monsterVolume() - 0.5))
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="element:name()" component="Sprite" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDrag" params="component, element, x, y, relX, relY">
				<![CDATA[
					local slider = element:GetComponent("Sprite")
					local slidingWidth = element:absW() * 0.85
					
					if(((slider("xOffset"):GetInt() - slider:absW()/2 + relX) <= (slidingWidth/2)) and ((slider("xOffset"):GetInt() - slider:absW()/2 + relX) >= (-1 * slidingWidth/2))) then
						slider("xOffset"):SetInt(slider("xOffset"):GetInt() - slider:absW()/2 + relX)
						game.setMonsterVolume(0.5 + ((slider("xOffset"):GetInt()) / slidingWidth))
					end
				]]>
			</event>
		</touchComponent>
	</element>

	<event name="onInit" params="element">
		<![CDATA[
			if game.isBattleIsland() then
				element["Label"]["Text"]("visible"):SetInt(0)
				element["SliderBg"]["bg"]("visible"):SetInt(0)
				element["SliderBg"]["minus"]("visible"):SetInt(0)
				element["SliderBg"]["plus"]("visible"):SetInt(0)
				element["Slider"]["Sprite"]("visible"):SetInt(0)
				element["Slider"]["Touch"]("enabled"):SetInt(0)
			end
		]]>
	</event>
	
	<template type="template_overlayedcheckbox" name="ShowGridBox">
		<templateVar name="$overlaySprite" equals="'button_yes'" />
		<templateVar name="$bgSprite" equals="'button_base_grey'" />
		<templateVar name="$sheetName" equals="'xml_resources/context_buttons.xml'" />
		<templateVar name="$scale" equals="0.2*game.hudScale()" />
		<templateVar name="$layer" equals="'ContextBar'" />
		<templateVar name="$check" equals="game.showingOccupiedTileSpots()" />
		<position relativeTo="SliderBg" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				if(not game.showingOccupiedTileSpots()) then
					game.populateOccupiedTileSpots()
					element["overlay"]("visible"):SetInt(1)
				else
					game.hideOccupiedTileSpots()
					element["overlay"]("visible"):SetInt(0)
				end
			</event>
		</touchComponent>
	</template>
	<element name="ShowGridLabel">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="ShowGridBox" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="2*game.hudScale()" yOffset="0" />
		<textComponent name="Text">
			<size w="256*game.menuScaleX()" h="35*game.menuScaleY()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.2*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("SHOW_GRID_LABEL")
				component("layer"):SetString("ContextBar")
				component("autoScale"):SetInt(1)
			</event>
		</textComponent>
	</element>
	
	<event name="queuePop" params="element">
		element:root():popPopUp()
	</event>
	
</menu>