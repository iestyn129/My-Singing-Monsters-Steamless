<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<event name="onInit" params="element">
		element("index"):SetInt(0)
	</event>

	<event name="setUpElements" params="element">
		element["MainBG"]:GetComponent("MainImage"):DoStoredScript("setMainImage")
		element["ActionButton"]:GetComponent("Text"):DoStoredScript("setButtonText")
	</event>

	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="3" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>

	<element name="MainBG">
		<size dependentOnElement="element:name()" dependentOnComponent="MainImage" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="2" />
		<event name="onInit" params="element">
			element["Touch"]("enabled"):SetInt(0)
		</event>
		<spriteComponent name="MainImage">
			<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" priorityOffset="2"/>
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/newsflash/NewsflashBlank")
				component("size"):SetFloat(0.4 * game.hudScale())
				component("layer"):SetString("FrontPopUps")
				component("alpha"):SetFloat(1.0)
			</event>
			<event name="setMainImage" params="component, element">
				local placement = game.nativePlacement(element:parent()("placement"):GetString())
				if(placement ~= nil) then
					local index = element:parent()("index"):GetInt()
					local ad = placement:getAd(index)
					if(ad ~= nil) then
						element["Touch"]("enabled"):SetInt(1)
						component:setSprite(ad:getMainImage())
						component("size"):SetFloat(0.4 * game.hudScale())
						component("alpha"):SetFloat(1.0)
						ad:reportImpression()
					end
				end
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchUp" params="component, element">

				local placement = game.nativePlacement(element:parent()("placement"):GetString())
				if(placement ~= nil) then
					local index = element:parent()("index"):GetInt()
					local ad = placement:getAd(index)
					if(ad ~= nil) then
						lua_sys.playSoundFx("audio/sfx/menu_click_small.wav")
						ad:reportClick()
					end
					placement:reportDismiss();
				end

				element:root():popPopUp()
			</event>
		</touchComponent>
	</element>
	
	<element name="CloseButton">
		<size dependentOnElement="element:name()" dependentOnComponent="CloseImage" />
		<position relativeTo="MainBG" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" priorityOffset="-1" />
		<spriteSheetComponent name="CloseImage">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_bamboo_close")
				component("sheetName"):SetString("xml_resources/buttons01.xml")
				component("size"):SetFloat(0.3*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				element["CloseImage"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				element["CloseImage"]:setColor(1.0, 1.0, 1.0)
				lua_sys.playSoundFx("audio/sfx/menu_click_small.wav")

				local placement = game.nativePlacement(element:parent()("placement"):GetString())
				if(placement ~= nil) then
					placement:reportDismiss();
				end

				element:root():popPopUp()
			</event>
			<event name="onTouchRelease" params="component, element">
				element["CloseImage"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<event name="onInit" params="element">
			element("ButtonMapping"):SetInt(game.cancelButton())
			element("buttonDown"):SetInt(0)
			element:SetupGenericListener(game.engineReceiver(), "sys::msg::MsgKeyDown", "gotMsgKeyDown")
			element:SetupGenericListener(game.engineReceiver(), "sys::msg::MsgKeyUp", "gotMsgKeyUp")
		</event>		
		<event name="gotMsgKeyDown" params="element, msg">
			if(element("ButtonMapping"):GetInt() == msg.key.val and element["Touch"]("enabled"):GetInt() ~= 0 and element("buttonDown"):GetInt() == 0) then
				element["Touch"]("checkOnTop"):SetInt(0)
				if(element["Touch"]("onTop"):GetInt() == 1) then
					element("buttonDown"):SetInt(msg.key.val)
					element["Touch"]:DoStoredScript("onTouchDown")
				end
			end
		</event>
		<event name="gotMsgKeyUp" params="element, msg">
			if(element("ButtonMapping"):GetInt() == msg.key.val and element["Touch"]("enabled"):GetInt() ~= 0 and element("buttonDown"):GetInt() == msg.key.val) then
				element("buttonDown"):SetInt(0)
				element["Touch"]:DoStoredScript("onTouchUp")
			end
		</event>
	</element>

	<template type="template_nineslicebutton" name="ActionButton">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="LOADING" />
		<templateVar name="$textPadding" equals="6*game.composerScale()" />
		<templateVar name="$textYOffset" equals="-2*game.menuScaleX()" />
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="20.0" />
		<templateVar name="$rightWidth" equals="20.0" />
		<templateVar name="$width" equals="140*game.hudScale()" />
		<templateVar name="$height" equals="15*game.hudScale()" />
		<templateVar name="$includeBorder" equals="0" />
		
		<position relativeTo="MainBG" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-10" priorityOffset="-1" />

		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(1)
				component("size"):SetFloat(0.5*game.hudScale())
				component("yOffset"):SetFloat("3");
				element:DoStoredScript("disable")
				element:DoStoredScript("setInvisible")
				component("layer"):SetString("FrontPopUps")
			</event>
			<event name="setButtonText" params="component, element">
				local placement = game.nativePlacement(element:parent()("placement"):GetString())
				if(placement ~= nil) then
					local index = element:parent()("index"):GetInt()
					local ad = placement:getAd(index)
					if(ad ~= nil) then
						if(ad:getAction() == "") then
							element:DoStoredScript("disable")
							element:DoStoredScript("setInvisible")
						else
							element:DoStoredScript("enable")
							element:DoStoredScript("setVisible")
							component("text"):SetString(ad:getAction())
						end
					end
				end
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)

				local placement = game.nativePlacement(element:parent()("placement"):GetString())
				if(placement ~= nil) then
					local index = element:parent()("index"):GetInt()
					local ad = placement:getAd(index)
					if(ad ~= nil) then
						lua_sys.playSoundFx("audio/sfx/menu_click_small.wav")
						ad:reportClick()
					end
					placement:reportDismiss();
				end

				element:root():popPopUp()
			</event>
		</touchComponent>
	</template>

<!-- Do these later
	<template type="template_nineslicebutton" name="Button1">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="BUTTON1" />
		<templateVar name="$textPadding" equals="6*game.composerScale()" />
		<templateVar name="$textYOffset" equals="-2*game.menuScaleX()" />
		
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="20.0" />
		<templateVar name="$rightWidth" equals="20.0" />
		
		<templateVar name="$width" equals="140*game.hudScale()" />
		<templateVar name="$height" equals="15*game.hudScale()" />

		<templateVar name="$includeBorder" equals="0" />
		
		<position relativeTo="MainBG" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-10" priorityOffset="-1" />

		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(0)
				component("size"):SetFloat(0.35*game.composerScale())
				component("yOffset"):SetFloat("3");
			</event>
		</textComponent>
		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element:root():popPopUp()
			</event>
		</touchComponent>
	</template>

	<template type="template_nineslicebutton" name="Button2">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="BUTTON2" />
		<templateVar name="$textPadding" equals="6*game.composerScale()" />
		<templateVar name="$textYOffset" equals="-2*game.menuScaleX()" />
		
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="20.0" />
		<templateVar name="$rightWidth" equals="20.0" />
		
		<templateVar name="$width" equals="140*game.hudScale()" />
		<templateVar name="$height" equals="15*game.hudScale()" />

		<templateVar name="$includeBorder" equals="0" />
		
		<position relativeTo="MainBG" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-10" priorityOffset="-1" />

		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(0)
				component("size"):SetFloat(0.35*game.composerScale())
				component("yOffset"):SetFloat("3");
			</event>
		</textComponent>
		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element:root():popPopUp()
			</event>
		</touchComponent>
	</template>

	<template type="template_nineslicebutton" name="Button3">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="BUTTON3" />
		<templateVar name="$textPadding" equals="6*game.composerScale()" />
		<templateVar name="$textYOffset" equals="-2*game.menuScaleX()" />
		
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="20.0" />
		<templateVar name="$rightWidth" equals="20.0" />
		
		<templateVar name="$width" equals="140*game.hudScale()" />
		<templateVar name="$height" equals="15*game.hudScale()" />

		<templateVar name="$includeBorder" equals="0" />
		
		<position relativeTo="MainBG" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="-10" priorityOffset="-1" />
		
		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(0)
				component("size"):SetFloat(0.35*game.composerScale())
				component("yOffset"):SetFloat("3");
			</event>
		</textComponent>
		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element:root():popPopUp()
			</event>
		</touchComponent>
	</template>
	-->

	<event name="queuePop" params="element">
		<![CDATA[
			element:root():popPopUp()
		]]>
	</event>
	
</menu>