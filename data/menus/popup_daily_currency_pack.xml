<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<event name="onInit" params="element">
		element("transitionState"):SetInt(1)
		element("transitionTime"):SetFloat(0.0)
		element("refreshSent"):SetInt(0)
		element("noDaysRemain"):SetInt(0)
	</event>
	
	<event name="onPostInit" params="element">
		element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgRefreshDailyCurrencyPackView", "refresh")
		
		local metricData = "0"
		if(game.canPlayerRedeemDailyCurrencyPacks() and game.canPlayerRedeemDailyCurrencyPacks()) then 
			metricData = "1" 
		end
    	game.logEvent("popup_daily_currency_pack_init", "can_collect", metricData)

		if(game.dailyCurrencyPackCanRefresh()) then
			game.refreshDailyCurrencyPack()
		end
	</event>
	
	<event name="refresh" params="element">
		if(element("transitionState"):GetInt() ~= 2 and game.playerHasDailyCurrencyPacks()) then
			if(game.canPlayerRedeemDailyCurrencyPacks()) then
				element["RewardLabel"]["Text"]("text"):SetString(game.getLocalizedText("NEXT_COLLECTION") .. ":")
				element["Reward"]["Text"]("text"):SetString(game.getDailyCurrencyAmount() .. " " .. game.getDailyCurrency())
				
				element["DaysCollected"]["DaysCollectedValue"]("text"):SetString(game.getDailyCurrencyDaysCollected())
				element["DaysMissed"]["DaysMissedValue"]("text"):SetString(game.getDailyCurrencyDaysMissed())
				element["DaysRemaining"]["DaysRemainingValue"]("text"):SetString(game.getDailyCurrencyDaysRemaining())
				
				element["CollectButton"]:DoStoredScript("setVisible")			
			end			
		end
		
		element("refreshSent"):SetInt(0)
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				
				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					element("transitionTime"):SetFloat(clamp(transitionTime, 0.0, 1.0))
					
					if(transitionTime == 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						if(element("noDaysRemain"):GetInt() == 1) then
							game.setDDPExpired()
						end
						element:root():popPopUp()
					end
				end
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		local frame = element:GetElement("bg")
		element["bg"]("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)
	</event>
	
	<event name="playParticles" params="element">
		local image = element:GetElement("DiamondBurstImage")
	
		local midX = image:absX() + image:absW()/2
		local midY = image:absY() + image:absH()/2
		
		local psi = "particle_diamond_get"
		local particleImage = "particle_diamond"
		game.playParticle("particles/"..psi..".psi", "gfx/particles/"..particleImage,  midX, midY, "MidPopUps", 0.001, 1, 1);		
	</event>
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="7" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="nineSlice" />
		<position relativeTo="FadedBG" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-1*lua_sys.screenWidth()" yOffset="0" priorityOffset="-3" />
		<ninesliceComponent name="nineSlice">
			<size w="0.77*lua_sys.screenWidth()" h="0.72*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="275*(lua_sys.screenWidth()/480)" h="50*(lua_sys.screenHeight()/320)" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(40.0)
				component("bottomHeight"):SetFloat(40.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.4*(lua_sys.screenHeight()/320))
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleLabel">
		<size dependentOnElement="TitleFrame"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="225*(lua_sys.screenWidth()/480)" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTitleFont())
				component("text"):SetString("DAILY_DIAMOND_PACK")
				component("size"):SetFloat(0.35*game.hudScale())
				component("layer"):SetString("MidPopUps")
				component:setColor(0.43, 1.0, 0.25)
			</event>
		</textComponent>
	</element>
	
	<element name="DiamondBurstImage">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="20*game.menuScaleX()" yOffset="0" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("currency_free_diamonds")
				component("sheetName"):SetString("xml_resources/eth_currency_sheet.xml")
				component("size"):SetFloat(0.55*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="NoMoreDays">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0.1*lua_sys.screenWidth()" yOffset="0.1*lua_sys.screenHeight()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="0.44*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component:setColor(0.26, 0.96, 0.26)
				component("text"):SetString("DAILY_CURRENCY_NO_DAYS_REMAINING")
				
				component("size"):SetFloat(0.28*game.hudScale())
				
				component("visible"):SetInt(0)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="RewardLabel">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0.14*lua_sys.screenWidth()" yOffset="0.1*lua_sys.screenHeight()" priorityOffset="-2" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())	
				
				if(not game.canPlayerRedeemDailyCurrencyPacks()) then
					component("text"):SetString(game.getLocalizedText("NEXT_COLLECTION") .. ":")
				else
					component("text"):SetString(game.getLocalizedText("YOU_GOT") .. ":")
				end
				
				component("size"):SetFloat(0.3*game.hudScale())
				component("layer"):SetString("MidPopUps")
			</event>			
		</textComponent>
	</element>

	<element name="Reward">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="RewardLabel" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-5*game.menuScaleY()" priorityOffset="-2" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component:setColor(0.26, 0.96, 0.26)
				
				if(game.getDailyCurrencyDaysRemaining() == 0 and not game.canPlayerRedeemDailyCurrencyPacks()) then
					element:parent()["RewardLabel"]["Text"]("visible"):SetInt(0)
					element:parent()["Reward"]["Text"]("visible"):SetInt(0)
					element:parent()["DailyReminder"]["Text"]("visible"):SetInt(0)
					element:parent()["NoMoreDays"]["Text"]("visible"):SetInt(1)	

					if(not game.canPlayerRedeemDailyCurrencyPacks()) then
						element:parent()("noDaysRemain"):SetInt(1)
					end
				else
					component("text"):SetString(game.getDailyCurrencyAmount() .. " " .. game.getDailyCurrency())
				end
				
				component("size"):SetFloat(0.42*game.hudScale())
				component("layer"):SetString("MidPopUps")
				
			</event>
		</textComponent>
		<event name="onTick" params="element, dt">
			if(game.playerHasDailyCurrencyPacks()) then
				if(not game.canPlayerRedeemDailyCurrencyPacks()) then
					if (game.getDailyCurrencyRefresh() == 0) then
						element:parent()["CollectButton"]:DoStoredScript("setInvisible")
					end
					
					if (element:parent()("refreshSent"):GetInt() == 0 and game.dailyCurrencyPackCanRefresh()) then
						element:parent()("refreshSent"):SetInt(1)
						--game.refreshDailyCurrencyPack()
						game.closeContextPopup()
					else
						if(game.getDailyCurrencyDaysRemaining() ~= 0) then
							element["Text"]("text"):SetString(game.timeToString(game.getDailyCurrencyRefresh()))
						end
					end
				else
					if (element:parent()("refreshSent"):GetInt() == 0 and game.dailyCurrencyPackCanRefresh()) then
						element:parent()("refreshSent"):SetInt(1)
						element:parent()["CollectButton"]:DoStoredScript("setInvisible")
						--game.refreshDailyCurrencyPack()
						game.closeContextPopup()
					end
				end
			else
				game.closeContextPopup()
			end
		</event>
	</element>
	
	<element name="DaysCollected">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-0.045*lua_sys.screenHeight()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="0.3*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(0)
				component("size"):SetFloat(0.38*game.hudScale())
				
				component("autoScale"):SetInt(1)
				component("autoScaleFactor"):SetFloat(0.01)
				
				component("multiline"):SetInt(0)
				
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getLocalizedText("DAILY_CURRENCY_DAYS_COLLECTED") .. " : ")
				
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<textComponent name="DaysCollectedValue">
			<position relativeTo="DaysCollected" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getDailyCurrencyDaysCollected())
				
				component("size"):SetFloat(0.38*game.hudScale())
				
				component("layer"):SetString("MidPopUps")
				component:setColor(0.26, 0.96, 0.26)
			</event>
		</textComponent>
	</element>
	
	<element name="DaysMissed">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="DaysCollected" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0.015*lua_sys.screenHeight()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="0.3*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(0)
				component("size"):SetFloat(0.38*game.hudScale())
				
				component("autoScale"):SetInt(1)
				component("autoScaleFactor"):SetFloat(0.01)
				
				component("multiline"):SetInt(0)
				
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getLocalizedText("DAILY_CURRENCY_DAYS_MISSED") .. " : ")
				
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<textComponent name="DaysMissedValue">
			<position relativeTo="DaysMissed" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getDailyCurrencyDaysMissed())
				
				component("size"):SetFloat(0.38*game.hudScale())
				
				component("layer"):SetString("MidPopUps")
				component:setColor(0.26, 0.96, 0.26)
			</event>
		</textComponent>
	</element>

	
		
	<element name="DaysRemaining">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="DaysMissed" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="0" yOffset="0.015*lua_sys.screenHeight()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="0.3*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(0)
				component("size"):SetFloat(0.38*game.hudScale())
				
				component("autoScale"):SetInt(1)
				component("autoScaleFactor"):SetFloat(0.01)
				
				component("multiline"):SetInt(0)
				
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getLocalizedText("DAILY_CURRENCY_DAYS_REMAINING") .. " : ")
				
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<textComponent name="DaysRemainingValue">
			<size w="0.35*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<position relativeTo="DaysRemaining" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("text"):SetString(game.getDailyCurrencyDaysRemaining())
				component("size"):SetFloat(0.38*game.hudScale())
				component("layer"):SetString("MidPopUps")
				component:setColor(0.26, 0.96, 0.26)
			</event>
		</textComponent>
	</element>	
		
	<element name="DailyReminder">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="DaysRemaining" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0.08*lua_sys.screenHeight()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="0.44*lua_sys.screenWidth()" h="0.1*lua_sys.screenHeight()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("autoScale"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("textPadding"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("text"):SetString("DAILY_CURRENCY_REMINDER")
				
				component("size"):SetFloat(0.28*game.hudScale())
				
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>	

	<template type="template_spritesheetbutton" name="CollectButton">
		<templateVar name="$upSpriteName" equals="button_purple_big" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.7*game.hudScale()" />
		<templateVar name="$text" equals="CONTEXTBAR_COLLECT_LABEL" />
		<templateVar name="$textPadding" equals="8*game.hudScale()" />
		<templateVar name="$textYOffset" equals="0" />
		<templateVar name="$layer" equals="Tutorial" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="5*game.menuScaleY()" priorityOffset="-1" />
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.closeContextPopup()
				if(game.playerHasDailyCurrencyPacks()) then
					if(game.canPlayerRedeemDailyCurrencyPacks()) then
					
						element:parent():DoStoredScript("playParticles")
						
						local image = element:parent():GetElement("DiamondBurstImage")
				
						local midX = image:absX() + image:absW()/2
						local midY = image:absY() + image:absH()/2

						game.showFlyingIconFromDailyLogin("diamond", "DiamondCounter", "Icon", midX, midY, "MidPopUps")
						game.redeemDailyCurrencyPack()
					  
						game.logEvent("popup_daily_currency_pack_collect")
					end
				end	
			</event>
		</touchComponent>
		<event name="onPostInit" params="element">
			if(game.playerHasDailyCurrencyPacks()) then
				if(not game.canPlayerRedeemDailyCurrencyPacks()) then
					element:DoStoredScript("setInvisible")
				end
			end
		</event>
	</template>
	
</menu>