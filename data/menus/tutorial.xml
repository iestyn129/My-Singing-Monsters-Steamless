<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">
	
	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="2" />
		<event name="onInit" params="element">
			element["Sprite"]("visible"):SetInt(0)
			element["Touch"]("enabled"):SetInt(0)
		</event>
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchUp" params="component, element">
				element:root():GetReceiver():Send(game.MsgNextTutorialStep())
				lua_sys.playSoundFx("audio/sfx/menu_click.wav")
			</event>
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="30*game.hudScale()" priorityOffset="2" />
		<ninesliceComponent name="Sprite">
			<size w="300*game.hudScale()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/scroll_frame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="primaryText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.hudScale()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="250*game.hudScale()" h="27*game.hudScale()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("font"):Set(game.getTutorialFont())
				component("text"):SetString("")
				component("size"):SetFloat(0.6*game.hudScale())
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
				component:setColor(0.0, 0.0, 0.0)
				component:calculatePosition()
			</event>
		</textComponent>
	</element>
	
	<element name="secondarybg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="0" yOffset="120*game.hudScale()" priorityOffset="2" />
		<ninesliceComponent name="Sprite">
			<size w="200*game.hudScale()" h="50*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(44.0)
				component("bottomHeight"):SetFloat(44.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/scroll_frame")
				component("layer"):SetString("HUD")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="SecondaryText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="secondarybg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.hudScale()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="160*game.hudScale()" h="30" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTutorialFont())
				component("text"):SetString("TUTORIAL_DRAG_TO_MOVE")
				component("size"):SetFloat(0.6*game.hudScale())
				component("autoScaleFactor"):SetFloat(0.01)
				component("autoScale"):SetInt(1)
				component("layer"):SetString("HUD")
				component:setColor(0.0, 0.0, 0.0)
				component:calculatePosition()
			</event>
		</textComponent>
	</element>
	
	<element name="Functions" params="element">
		<event name="hide" params="element">
			element:parent()["bg"]["Sprite"]("visible"):SetInt(0)
			element:parent()["primaryText"]["Text"]("visible"):SetInt(0)
		</event>
		<event name="show" params="element">
			element:parent()["bg"]["Sprite"]("visible"):SetInt(1)
			element:parent()["primaryText"]["Text"]("visible"):SetInt(1)
		</event>
		<event name="hideSecondary" params="element">
			element:parent()["secondarybg"]["Sprite"]("visible"):SetInt(0)
			element:parent()["SecondaryText"]["Text"]("visible"):SetInt(0)
		</event>
		<event name="showSecondary" params="element">
			element:parent()["secondarybg"]["Sprite"]("visible"):SetInt(1)
			element:parent()["SecondaryText"]["Text"]("visible"):SetInt(1)
		</event>
		<event name="activateClickAnywhere" params="element">
			element:parent()["FadedBG"]["Touch"]("enabled"):SetInt(1)
		</event>
		<event name="deactivateClickAnywhere" params="element">
			element:parent()["FadedBG"]["Touch"]("enabled"):SetInt(0)
		</event>
		<event name="positionForBattleView" params="element">
			element:parent()["bg"]("yOffset"):SetFloat(60*game.menuScaleX())
		</event>
	</element>
	
</menu>