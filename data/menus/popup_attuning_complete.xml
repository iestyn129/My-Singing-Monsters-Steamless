<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="4" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.5)
				component("layer"):SetString("MidFrontPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-30*game.hudScale()" priorityOffset="3" />
		<ninesliceComponent name="Sprite">
			<size w="230*game.hudScale()" h="200*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidFrontPopUps")
			</event>
		</ninesliceComponent>
	</element>
	

	<element name="Arrow">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0*game.menuScaleX()" yOffset="10*game.hudScale()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("blue_arrow")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.35*game.menuScaleX())
				component("hFlip"):SetInt(1)
				component("layer"):SetString("MidFrontPopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<template type="template_critter_synthesizing_entry" name="CritterBefore">
	<position relativeTo="Arrow" vAnchor="VCENTER" hAnchor="LEFT" />
	<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0*game.hudScale()" priorityOffset="0" />
	<event name="onInit" params="element">
		onInit(element)
		element("Layer"):SetString("MidFrontPopUps")
		element:disable()
	</event>
	</template>

	<template type="template_critter_synthesizing_entry" name="Critter">
	<position relativeTo="Arrow" vAnchor="VCENTER" hAnchor="RIGHT" />
	<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0*game.hudScale()" priorityOffset="0" />
	<event name="onInit" params="element">
		onInit(element)
		element("Layer"):SetString("MidFrontPopUps")
		element:disable()
	</event>
	</template>
	
	<element name="Text">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="Arrow" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="16*game.menuScaleX()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="340*game.hudScale()" />
			<position relativeTo="element" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">			
				component("textPadding"):SetInt(30)
				component("autoScale"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.getLocalizedText("YOU_HAVE_ATTUNED"))
				component("size"):SetFloat(0.3*game.hudScale())
				component("layer"):SetString("MidFrontPopUps")
				component:calculatePosition()
			</event>
		</textComponent>
	</element>
	
	<template type="template_spritesheetbutton" name="Synthesize">
		<hudScale scale="game.hudScale()" />
		<templateVar name="$text" equals="CONTEXTBAR_SYNTHESIZE_LABEL" />
		<templateVar name="$spriteScale" equals="0.5" />
		<templateVar name="$layer" equals="MidFrontPopUps" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end

			if(game.getAvailableSynthesizer()==0)then
				element:setDisable()
			end
		</event>
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("size"):SetFloat(0.25)
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				element:root():popPopUp()
				game.deselectSelectedObject()
				game.selectItem(game.getAvailableSynthesizer())
				manager:setContext("SYNTHESIZING_MENU")
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_synth")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("layer"):SetString("MidFrontPopUps")
				component("size"):SetFloat(0.5)
			</event>
		</spriteSheetComponent>
		<event name="setDisable" params="element">
			<![CDATA[
				element["UpSprite"]:setColor(0.5, 0.5, 0.5)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
				element["Text"]:setColor(0.5, 0.5, 0.5)
				element["Touch"]("enabled"):SetInt(0)
			]]>
		</event>
	</template>	
	
	<template type="template_spritesheetbutton" name="Close">
		<hudScale scale="game.hudScale()" />
		<templateVar name="$text" equals="CONTEXTBAR_CLOSE_LABEL" />
		<templateVar name="$spriteScale" equals="0.5" />
		<templateVar name="$layer" equals="MidFrontPopUps" />
		<position relativeTo="bg" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("size"):SetFloat(0.25)
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				element:root():popPopUp()
				game.deselectSelectedObject()
				manager:setContext(manager:getDefaultContext())

			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_no")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("layer"):SetString("MidFrontPopUps")
				component("size"):SetFloat(0.5)
			</event>
		</spriteSheetComponent>
	</template>	

	<event name="onInit" params="element">
		element("CritterGene"):SetString("")
		lua_sys.playSoundFx("audio/sfx/structure_attunement_collect.wav")
	</event>

	<event name="update" params="element">
		
		local critterGene = element("CritterGene"):GetString()
		element["Critter"]["Sprite"]("spriteName"):SetString(game.critterSprite(critterGene))
		
		local critterGeneBefore = element("StartGene"):GetString()
		element["CritterBefore"]["Sprite"]("spriteName"):SetString(game.critterSprite(critterGeneBefore))

	</event>
	
	<event name="queuePop" params="element">
		element:root():popPopUp()
	</event>

</menu>