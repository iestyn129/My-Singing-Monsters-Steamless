<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<script src="scripts/ComboPack.lua" />	

	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="11" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(screenWidth()*0.25, screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>

	<element name="Frame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0-screenWidth()" yOffset="-7" priorityOffset="10" />
		<ninesliceComponent name="Sprite">
			<size w="450*(screenWidth()/480)" h="200*(screenHeight()/320)" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>


	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="400*(screenWidth()/480)" h="40*(screenHeight()/320)" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(40.0)
				component("bottomHeight"):SetFloat(40.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.4*(screenHeight()/320))
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>

	<element name="TitleText">
		<size dependentOnElement="TitleFrame"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="380*(screenWidth()/480)" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("font"):Set(game.getTitleFont())
					component:setColor(0.44, 0.98, 0.71)
					component("size"):SetFloat(0.45*game.hudScale())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					
					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					component("text"):SetString(LOC(promo:storeItemTitle()))
					component("autoScale"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="DescriptionText">
		<size dependentOnElement="TitleFrame"/>
		<position relativeTo="TitleFrame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-10*game.menuScaleY()" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="380*(screenWidth()/480)" h="100*(screenHeight()/320)" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[ 
					component("multiline"):SetInt(0)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.45*game.hudScale())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					
					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					component("text"):SetString(LOC(promo:storeItemDescription()))
					component("autoScale"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<!-- predefined reward items -->

	<element name="Diamonds">
		<size w="60*game.menuScaleX()" h="60*game.menuScaleX()" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-26*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("diamonds_01_icon")
				component("sheetName"):SetString("xml_resources/store_buttons01.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		
		<element name="Value">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="4*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<textComponent name="Text">
				<size w="160*game.hudScale()" h="35" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						game.StoreContext_setDiamondTextColour(component)
						component("size"):SetFloat(0.3*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						
						local promoId = game.getHUDPromoId()
						local promo = game.getPromo(promoId)

						component("text"):SetString(game.commaizeNumber(game.storeValue(game.storeItem(promo:storeItemName(),"diamond"))))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" component="Text" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("diamond")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>
		</element>
	</element>

	<element name="Coins">
		<size w="60*game.menuScaleX()" h="60*game.menuScaleX()" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-26*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("coins_01_icon")
				component("sheetName"):SetString("xml_resources/store_buttons01.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<element name="Value">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="4*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<textComponent name="Text">
				<size w="160*game.hudScale()" h="35" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						game.StoreContext_setCoinTextColour(component)
						component("size"):SetFloat(0.3*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						
						local promoId = game.getHUDPromoId()
						local promo = game.getPromo(promoId)

						component("text"):SetString(game.commaizeNumber(game.storeValue(game.storeItem(promo:storeItemName(),"coins"))))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" component="Text" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("coin")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>
		</element>
	</element>

	<element name="Food">
		<size w="60*game.menuScaleX()" h="60*game.menuScaleX()" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-26*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("foodpack_01_icon")
				component("sheetName"):SetString("xml_resources/store_buttons01.xml")
				component("size"):SetFloat(0.4*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<element name="Value">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="4*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<textComponent name="Text">
				<size w="160*game.hudScale()" h="35" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						game.StoreContext_setFoodTextColour(component)
						component("size"):SetFloat(0.3*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						
						local promoId = game.getHUDPromoId()
						local promo = game.getPromo(promoId)

						component("text"):SetString(game.commaizeNumber(game.storeValue(game.storeItem(promo:storeItemName(),"food"))))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" component="Text" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("food")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>
		</element>
	</element>

	<element name="Keys">
		<size w="60*game.menuScaleX()" h="60*game.menuScaleX()" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-26*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("keys")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.6*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<element name="Value">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="4*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<textComponent name="Text">
				<size w="160*game.hudScale()" h="35" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						game.StoreContext_setKeyTextColour(component)
						component("size"):SetFloat(0.3*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						
						local promoId = game.getHUDPromoId()
						local promo = game.getPromo(promoId)

						component("text"):SetString(game.commaizeNumber(game.storeValue(game.storeItem(promo:storeItemName(),"key"))))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" component="Text" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("keys")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>
		</element>
	</element>

	<element name="Relics">
		<size w="60*game.menuScaleX()" h="60*game.menuScaleX()" />
		<position relativeTo="Frame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="-26*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("relic")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.6*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
		<element name="Value">
			<size dependentOnElement="element:name()" dependentOnComponent="Text" />
			<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="4*game.menuScaleX()" yOffset="0" priorityOffset="0" />
			<textComponent name="Text">
				<size w="160*game.hudScale()" h="35" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					<![CDATA[
						component("multiline"):SetInt(0)
						component("font"):Set(game.getTextFont())
						game.StoreContext_setRelicTextColour(component)
						component("size"):SetFloat(0.3*game.hudScale())
						component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
						
						local promoId = game.getHUDPromoId()
						local promo = game.getPromo(promoId)

						component("text"):SetString(game.commaizeNumber(game.storeValue(game.storeItem(promo:storeItemName(),"relic"))))
						component("autoScale"):SetInt(1)
						component("layer"):SetString("MidPopUps")
					]]>
				</event>
			</textComponent>
			<spriteSheetComponent name="Sprite">
				<position relativeTo="element:name()" component="Text" vAnchor="VCENTER" hAnchor="LEFT" />
				<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onInit" params="component, element">
					component("spriteName"):SetString("relic")
					component("sheetName"):SetString("xml_resources/hud01.xml")
					component("size"):SetFloat(0.2*game.menuScaleX())
					component("layer"):SetString("MidPopUps")
				</event>
			</spriteSheetComponent>
		</element>
	</element>

	<!-- -->

	<element name="FooterFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="OfferTime" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="400*(screenWidth()/480)" h="50*(screenHeight()/320)" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(40.0)
				component("bottomHeight"):SetFloat(40.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.4*(screenHeight()/320))
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
			</event>
		</ninesliceComponent>
	</element>

	<element name="OfferTime">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="Frame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="10*game.menuScaleY()" priorityOffset="-3" />
		<event name="onTick" params="element, dt">
			<![CDATA[
				
				local promoId = game.getHUDPromoId()
				local promo = game.getPromo(promoId)

				local secsRemaining = promo:timeRemainingSec()
				element["Text"]("text"):SetString(game.getLocalizedText("WARM_UP_PACK_TIME")..game.timeToString(secsRemaining))
			]]>
		</event>
		<textComponent name="Text">
			<size w="380*(screenWidth()/480)" h="100*(screenHeight()/320)" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.4*game.hudScale())
				component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.getLocalizedText("WARM_UP_PACK_TIME"))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>

	<element name="TagSprite">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="FooterFrame" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="-1*game.menuScaleY()" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="RIGHT" />
			<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("sale_tag_updated_taller")
				component("sheetName"):SetString("xml_resources/store_buttons01.xml")
				component("size"):SetFloat(0.95*game.menuScaleX())
				component("layer"):SetString("MidPopUps")
			</event>
		</spriteSheetComponent>
	</element>

	<element name="TagValue">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="TagSprite" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-20*game.menuScaleX()" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="160*game.hudScale()" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.4*game.menuScaleX())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)

					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					local id = game.storeItem(promo:storeItemName(),"combo")
					if id < 0 then return end
					component("text"):SetString(game.priceStr(id))
					component("autoScale"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="OldValue">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="FooterFrame" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="35*game.menuScaleX()" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="160*game.hudScale()" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("multiline"):SetInt(0)
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.4*game.menuScaleX())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("alpha"):SetFloat(0.6)
					
					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					component("text"):SetString(promo:fullPriceText())
					component("autoScale"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<element name="RedStrip">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="OldValue" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="2*game.menuScaleX()" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="10" h="10" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("includeBorder"):SetInt(1)
				component("topHeight"):SetFloat(1.0)
				component("bottomHeight"):SetFloat(1.0)
				component("leftWidth"):SetFloat(1.0)
				component("rightWidth"):SetFloat(1.0)
				component("alpha"):SetFloat(0.6)
				component("spriteName"):SetString("gfx/menu/redstrip")
				component("layer"):SetString("MidPopUps")
				component:setSize(Vector2(element:parent():GetElement("OldValue"):absW() + (10*game.menuScaleX()), component:absH()))
			</event>
		</ninesliceComponent>
	</element>

	<element name="PercentageLabel">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="FooterFrame" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="-7*game.menuScaleX()" yOffset="0" priorityOffset="-2" />
		<ninesliceComponent name="Sprite">
			<size w="75*game.menuScaleX()" h="75*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("includeBorder"):SetInt(1)
				component("topHeight"):SetFloat(49.0)
				component("bottomHeight"):SetFloat(49.0)
				component("leftWidth"):SetFloat(49.0)
				component("rightWidth"):SetFloat(49.0)
				component("size"):SetFloat(0.75*game.menuScaleX())
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(1)
			</event>
		</ninesliceComponent>
		<textComponent name="Text">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3.5*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("font"):Set(game.getTextFont())
					component("size"):SetFloat(0.4*game.menuScaleX())
					component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
					
					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					component("text"):SetString(promo:discountText() .. game.getLocalizedText("WARM_UP_PACK_PERCENTAGE_SUFFIX"))
					component("rotation"):SetFloat(0.15)
					component("visible"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				]]>
			</event>
		</textComponent>
	</element>

	<template type="template_spritesheetbutton" name="BuyButton">
		<templateVar name="$upSpriteName" equals="'button_continue_green'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="MidPopUps" />
		<position relativeTo="Frame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="8*game.hudScale()" priorityOffset="0" />
		<textComponent name="Label">
			<size w="120*game.hudScale()" h="30*game.hudScale()"/>
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.3*game.hudScale())
				component("alignment"):SetInt(MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("BUY_BUTTON")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				<![CDATA[
					onTouchUp(component, element)
					manager:setContext(manager:reserveState())
					game.logEvent("promo_menu_buy_click", "promo", "combo_pack")
					--do this before buyItem, and don't use game.popPopUp(), because otherwise it will prematurely pop popup_thanks_IAP when there's an immediate reply from gsProcessUnclaimedPurchases
					element:root():popPopUp()

					local promoId = game.getHUDPromoId()
					local promo = game.getPromo(promoId)

					game.buyItem(game.storeItem(promo:storeItemName(),"combo"))
					manager:setContext(manager:reserveState())
				]]>
			</event>
		</touchComponent>
	</template>

</menu>