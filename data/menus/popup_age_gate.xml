<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="menu.xsd">

	<element name="FadedBG">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="SCREEN" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="7" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("__BUILTIN__WHITE_TEXTURE")
				component:setScale(Vector2(lua_sys.screenWidth()*0.25, lua_sys.screenHeight()*0.25))
				component:setColor(0.0, 0.0, 0.0)
				component("alpha"):SetFloat(0.0)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		</touchComponent>
	</element>
	
	<element name="Frame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0-lua_sys.screenWidth()" yOffset="-7" priorityOffset="5" />
		<ninesliceComponent name="Sprite">
			<size w="420*game.hudScale()" h="250*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("includeBorder"):SetInt(1)
				component("size"):SetFloat(0.5)
				component("spriteName"):SetString("gfx/menu/Black9SFrame50")
				component("layer"):SetString("FrontPopUps")
			</event>
		</ninesliceComponent>
		<!--
		<spriteSheetComponent name="Flourish1">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="LEFT" />
			<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="7" yOffset="7" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_01")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		<spriteSheetComponent name="Flourish2">
			<position relativeTo="element:name()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="7" yOffset="10" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("menu_swirl_02")
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("rotation"):SetFloat(-0.5*math.pi)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		-->
	</element>
	
	<element name="TitleFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="185*game.hudScale()" h="50" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(50.0)
				component("bottomHeight"):SetFloat(50.0)
				component("leftWidth"):SetFloat(50.0)
				component("rightWidth"):SetFloat(50.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/GreyTitleFrame")
				component("layer"):SetString("FrontPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="TitleText">
		<size dependentOnElement="TitleFrame"/>
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size w="200*game.hudScale()" h="35" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				if(game.getLanguage() == 512) then
					component("size"):SetFloat(0.25*game.hudScale())
				else
					component("size"):SetFloat(0.35*game.hudScale())
				end
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.localizedUpper("AGE_GATE_TITLE"))
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
	</element>

	<element name="Notification">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="Frame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="25*game.hudScale()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="350*game.hudScale()" h="70*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.3*game.hudScale())
				component("text"):SetString("AGE_GATE_NOTIFICATION")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="AgeFrame">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="Notification" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="28*game.hudScale()" priorityOffset="-1" />
		<ninesliceComponent name="Sprite">
			<size w="50*game.hudScale()" h="25*game.hudScale()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(16.0)
				component("bottomHeight"):SetFloat(16.0)
				component("leftWidth"):SetFloat(16.0)
				component("rightWidth"):SetFloat(16.0)
				component("size"):SetFloat(0.5)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/menu_text_field")
				component("layer"):SetString("FrontPopUps")
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="AgeText">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="Notification" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="28*game.hudScale()" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="350*game.hudScale()" h="70*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component:setColor(1.00, 0.82, 0.09)
				component("size"):SetFloat(0.3*game.hudScale())
				component("text"):SetString(game.getAge())
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
		<event name="updateAge" params="element">
			element["Text"]("text"):SetString(game.getAge())
		</event>
	</element>
	
	<template type="template_spritesheetbutton" name="Button1">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button2" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_01")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(1)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button2">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button3" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_02")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(2)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button3">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="TitleFrame" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="80*game.hudScale()" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_03")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(3)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button4">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button3" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_04")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(4)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button5">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button4" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_05")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(5)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button6">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button7" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_06")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(6)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button7">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button8" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_07")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(7)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button8">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button3" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="55*game.hudScale()" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_08")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(8)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button9">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button8" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_09")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(9)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="Button0">
		<templateVar name="$upSpriteName" equals="'button_rnd_base'" />
		<templateVar name="$sheetName" equals="'xml_resources/store_buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.6*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<position relativeTo="Button9" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="65*game.hudScale()" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="NumerOverlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-3*game.composerScale()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("monster_level_numbers_00")
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("useOffsets"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
				component("size"):SetFloat(0.6*game.composerScale())
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.updateAge(0)
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				-- no need to enable button since entering 0 requires a previous entry to be valid
				-- element:parent()["ContinueButton"]:DoStoredScript("enable")
			</event>
		</touchComponent>
	</template>

	<event name="onInit" params="element">
		element("transitionState"):SetInt(1)
		element("transitionTime"):SetFloat(0.0)
		lua_sys.playSoundFx("audio/sfx/menu_slide.wav")
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[
			if(dt < game.maxTickTime()) then
				local transitionState = element("transitionState"):GetInt()
				
				if(transitionState ~= 0) then
					local transitionTime = element("transitionTime"):GetFloat()
					
					element:DoStoredScript("TickTransition")
					
					if(transitionState == 1) then
						transitionTime = (transitionTime + dt*3)
					elseif(transitionState == 2) then
						transitionTime = (transitionTime - dt*3)
					end
					
					element("transitionTime"):SetFloat(clamp(transitionTime, 0.0, 1.0))
					
					if(transitionTime == 1.0) then
						element("transitionState"):SetInt(0)
						element("transitionTime"):SetFloat(1.0)
						element:DoStoredScript("TickTransition")
					elseif(transitionTime <= 0.0) then
						element:root():popPopUp()
					end
				end
			end
		]]>
	</event>
	
	<event name="TickTransition" params="element">
		local transitionTime = element("transitionTime"):GetFloat()
		if element.last == transitionTime then return end
		element["Frame"]("xOffset"):SetFloat(lua_sys.screenWidth()*(0.5) + (-0.5)*lua_sys.screenWidth()*(1/transitionTime))
		element["FadedBG"]["Sprite"]("alpha"):SetFloat(transitionTime*0.5)		
		element.last = transitionTime
	</event>
	
	<event name="queuePop" params="element">
		element("transitionState"):SetInt(2)
	</event>
	
	<template type="template_nineslicebutton" name="ClearButton">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_purple_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="TXT_BTN_CLEAR" />
		<templateVar name="$textPadding" equals="0.55*game.hudScale() * 20" />
		<templateVar name="$textYOffset" equals="1" />
		
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="30.0" />
		<templateVar name="$rightWidth" equals="30.0" />
		
		<templateVar name="$width" equals="160*game.hudScale()" />
		<templateVar name="$height" equals="40*game.hudScale()" />

		<templateVar name="$includeBorder" equals="1" />
		
		<position relativeTo="Frame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="25*game.menuScaleX()" yOffset="15*game.hudScale()" priorityOffset="-1" />

		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(0)
				component("size"):SetFloat(0.35*game.composerScale())
			</event>
		</textComponent>
		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.clearAge()
				element:parent()["AgeText"]:DoStoredScript("updateAge")
				element:parent()["ContinueButton"]:DoStoredScript("disable")
			</event>
		</touchComponent>
		
	</template>
	
	<template type="template_nineslicebutton" name="ContinueButton">
		<templateVar name="$upSpriteName" equals="'gfx/menu/button_green_gem'" />
		<templateVar name="$spriteScale" equals="0.55*game.hudScale()" />
		<templateVar name="$layer" equals="'FrontPopUps'" />
		<templateVar name="$text" equals="MAIN_CONTINUE" />
		<templateVar name="$textPadding" equals="0.55*game.hudScale() * 20" />
		<templateVar name="$textYOffset" equals="1" />
		
		<templateVar name="$topHeight" equals="20.0" />
		<templateVar name="$bottomHeight" equals="30.0" />
		<templateVar name="$leftWidth" equals="30.0" />
		<templateVar name="$rightWidth" equals="30.0" />
		
		<templateVar name="$width" equals="160*game.hudScale()" />
		<templateVar name="$height" equals="40*game.hudScale()" />

		<templateVar name="$includeBorder" equals="1" />
		
		<position relativeTo="Frame" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="25*game.menuScaleX()" yOffset="15*game.hudScale()" priorityOffset="-1" />

		<textComponent name="Text">
			<size w="80*game.menuScaleX()" h="5*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				onInit(component, element)
				component("autoScale"):SetInt(0)
				component("size"):SetFloat(0.35*game.composerScale())
			</event>
		</textComponent>
		
		<event name="onInit" params="element">
			onInit(element)
			element:DoStoredScript("disable")
		</event>
		<event name="disable" params="element">
			disable(element)
		</event>
		<event name="enable" params="element">
			enable(element)
		</event>
		
		<touchComponent name="Touch">
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.acceptAge(true)
			</event>
		</touchComponent>
	</template>
	
	<template type="template_spritesheetbutton" name="CancelButton">
		<templateVar name="$layer" equals="FrontPopUps" />
		<templateVar name="$spriteScale" equals="0.5*game.hudScale()" />
		<position relativeTo="SAFE_AREA" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="10*game.hudScale()" yOffset="10*game.hudScale()" priorityOffset="4" />		
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				game.acceptAge(false)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<spriteSheetComponent name="Overlay">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("button_no")
				component("sheetName"):SetString("xml_resources/context_buttons.xml")
				component("size"):SetFloat(0.5*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
		<textComponent name="Text">
			<position relativeTo="element:name()" vAnchor="BOTTOM" hAnchor="HCENTER" />
			<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="-6*game.hudScale()" priorityOffset="-2" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString("CONTEXTBAR_CANCEL_LABEL")
				component("size"):SetFloat(0.2*game.hudScale())
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
		<event name="onTick" params="element, dt">
			onTick(element, dt)
			if(element["UpSprite"]("size"):GetFloat() ~= element["Overlay"]("size"):GetFloat()) then
				element["Overlay"]("size"):SetFloat(element["UpSprite"]("size"):GetFloat())
			end
		</event>
	</template>	
	
</menu>
