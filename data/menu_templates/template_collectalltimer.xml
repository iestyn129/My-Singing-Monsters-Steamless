<template name="template_collectalltimer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<hudScale scale="game.hudScale()" />
	
	<size dependentOnElement="element:name()" dependentOnComponent="Text" />
	<event name="onInit" params="element">
		element("saleTagVis"):SetInt(1)
		element("disabled"):SetInt(0)
		element("curScale"):SetFloat(1.0)
		element("setNewScale"):SetFloat(element("curScale"):GetFloat())
	</event>
	
	<textComponent name="Text">
		<event name="onInit" params="component, element">
			component("font"):Set(game.getTitleFont())
			component("size"):SetFloat(0.17)
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
			component("layer"):SetString("ContextBar")
			element("timeLeft"):SetString("")
			
			if(game.showCollectAllTimer()) then
				local timeStr = game.collectAllTimerText();
				element("timeLeft"):SetString(timeStr)
				component("text"):SetString(timeStr)
				element:DoStoredScript("SetVisible")
			else
				component("text"):SetString("00:00:00");
				element:DoStoredScript("SetInvisible")
			end
		</event>
	</textComponent>
	
	<event name="onTick" params="element, dt">
		if game.showCollectAllTimer() then
	
			local timeStr = game.collectAllTimerText();
			if(element("timeLeft"):GetString() ~= timeStr) then
				element["Text"]("text"):SetString(timeStr)
				element("timeLeft"):SetString(timeStr)
				if(element["Text"]("visible"):GetInt() == 0) then
					element:DoStoredScript("SetVisible")
				end
			end
		else
			if(element["Text"]("visible"):GetInt() == 1) then
				element:DoStoredScript("SetInvisible")
			end
			

		end
		
		if(element("saleTagVis"):GetInt() == 0 and game.showCollectAllEventTag()) then
			if(element("disabled"):GetInt() == 0) then
				element["SaleTag"]:DoStoredScript("SetVisible")
			end
		elseif(element("saleTagVis"):GetInt() == 1 and not game.showCollectAllEventTag()) then
			element["SaleTag"]:DoStoredScript("SetInvisible")
		end
		
		if(element("saleTagVis"):GetInt() == 1) then
			if element("curScale"):GetFloat() ~= element("setNewScale"):GetFloat() then
				element("curScale"):SetFloat(element("setNewScale"):GetFloat())
				element["SaleTag"]("setNewScale"):SetFloat(element("curScale"):GetFloat())
			end
		end
	</event>
	
	<event name="SetEnabled" params="element">
		element("disabled"):SetInt(0)
		local text = element["Text"]
		text:setColor(text("red"):GetFloat() * 2.0, text("green"):GetFloat() * 2.0, text("blue"):GetFloat() * 2.0)
		element["SaleTag"]:DoStoredScript("SetEnabled")
	</event>
	
	<event name="SetDisabled" params="element">
		element("disabled"):SetInt(1)
		element["SaleTag"]:DoStoredScript("SetDisabled")
		element("saleTagVis"):SetInt(0)
		element["SaleTag"]:DoStoredScript("SetInvisible")
	</event>
	
	<event name="SetVisible" params="element">
		if(game.showCollectAllTimer()) then
			element["Text"]("visible"):SetInt(1)
		end
		
		--[[note: this won't do the correct thing when SetVisible is called in init of this element, due to init of Tag overwriting things]]
		if(game.showCollectAllEventTag() and element("disabled"):GetInt() == 0) then
			element("saleTagVis"):SetInt(1)
			element["SaleTag"]:DoStoredScript("SetVisible")
		else
			element("saleTagVis"):SetInt(0)
			element["SaleTag"]:DoStoredScript("SetInvisible")
		end
	</event>
	
	<event name="SetInvisible" params="element">
		element["Text"]("visible"):SetInt(0)
		element["SaleTag"]:DoStoredScript("SetInvisible")
	</event>
	
	
	<template type="template_promoindicator" name="SaleTag">
		<position relativeTo="PARENT" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="TOP" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
	</template>
	
</template>