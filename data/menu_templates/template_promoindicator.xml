<template name="template_promoindicator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">

	<hudScale scale="game.hudScale()" />
	
	<size dependentOnElement="element:name()" dependentOnComponent="Text" />
	
	<event name="onInit" params="element">
		element("curScale"):SetFloat(1.0)
		element("origTextSize"):SetFloat(0.2)
		element("origImgSize"):SetFloat(0.22)
		
		element("setNewScale"):SetFloat(element("curScale"):GetFloat())
	</event>
	
	<event name="onTick" params="element, dt">
		if element("curScale"):GetFloat() ~= element("setNewScale"):GetFloat() then
			element("curScale"):SetFloat(element("setNewScale"):GetFloat())
			
			element["Text"]("size"):SetFloat(element("origTextSize"):GetFloat() * element("curScale"):GetFloat())
			element["Tag"]("size"):SetFloat(element("origImgSize"):GetFloat()*element("curScale"):GetFloat())
		end
	</event>
	
	<event name="SetVisible" params="element">
		element["Text"]("visible"):SetInt(1)
		element["Tag"]("visible"):SetInt(1)
	</event>
	<event name="SetInvisible" params="element">
		element["Text"]("visible"):SetInt(0)
		element["Tag"]("visible"):SetInt(0)
	</event>
	
	<event name="SetEnabled" params="element">
		element["Tag"]:setColor(1.0, 1.0, 1.0)
		local text = element["Text"]
		text:setColor(text("red"):GetFloat() * 2.0, text("green"):GetFloat() * 2.0, text("blue"):GetFloat() * 2.0)
	</event>
	
	<event name="SetDisabled" params="element">
		element["Tag"]:setColor(0.5, 0.5, 0.5)
		local text = element["Text"]
		text:setColor(text("red"):GetFloat() * 0.5, text("green"):GetFloat() * 0.5, text("blue"):GetFloat() * 0.5)
	</event>
	
	<textComponent name="Text">
		<size w="60*game.hudScale()" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="component, element">
		
			component("autoScaleFactor"):SetFloat(0.01)
			component("multiline"):SetInt(0)
			component("font"):Set(game.getTitleFont())
			component("size"):SetFloat(element("origTextSize"):GetFloat())
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
			component("text"):SetString(game.localizedUpper("PROMO_LABEL"))
			component("autoScale"):SetInt(1)
			component("layer"):SetString("ContextBar")
			component("yOffset"):SetInt(-1)
		</event>
		<event name="onPostInit" params="component, element">
			--stupid hack because autoscale/size doesn't work properly here without another call to ComputeWorldState (text Width() will be 0 otherwise)
			component("autoScale"):SetInt(0)
			component("text"):SetString(game.localizedUpper("PROMO_LABEL"))
			component("autoScale"):SetInt(1)
			element("origTextSize"):SetFloat(component("size"):GetFloat())
		</event>
		
	</textComponent>
	<spriteSheetComponent name="Tag">
		<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="1" />
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("saletag_promo")
			component("sheetName"):SetString("xml_resources/store_buttons01.xml")
			component("layer"):SetString("ContextBar")
			component("size"):SetFloat(element("origImgSize"):GetFloat())
		</event>
	</spriteSheetComponent>
		
		
</template>