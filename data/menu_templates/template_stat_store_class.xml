<template name="template_stat_store_class" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">

	<size w="228*game.menuScaleX()" h="16*game.menuScaleX()" />
	
	<textComponent name="Stat">
		<size w="114*game.menuScaleX()" h="20*game.menuScaleX()" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("multiline"):SetInt(0)
			component("font"):Set(game.getTextFont())
			component("size"):SetFloat(0.22*game.menuScaleX())
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
			component("text"):SetString(game.getLocalizedText("STAT_CLASS_LABEL"))
			component("layer"):SetString("FrontPopUps")
			component("autoScaleFactor"):SetFloat(0.01)
			component("autoScale"):SetInt(1)
		</event>
	</textComponent>
	
	<textComponent name="Value">
		<size w="114*game.menuScaleX()" h="20*game.menuScaleX()" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("multiline"):SetInt(1)
			component("font"):Set(game.getTextFont())
			component("size"):SetFloat(0.22*game.menuScaleX())
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
			if(element:root():GetElement("SelectedMonsterView") == nil) then
				component("text"):SetString(store:MonsterClass(element("ItemIndex"):GetInt()));
			else
				component("text"):SetString(game.monsterTypeClass(element:parent():parent()("selectedMonster"):GetInt()))
			end
			component("layer"):SetString("FrontPopUps")
			component("autoScaleFactor"):SetFloat(0.01)
			component("autoScale"):SetInt(1)
		</event>
	</textComponent>
	
	<event name="setVisible" params="element">
		element["Stat"]("visible"):SetInt(1)
		element["Value"]("visible"):SetInt(1)
	</event>
	
	<event name="setInvisible" params="element">
		element["Stat"]("visible"):SetInt(0)
		element["Value"]("visible"):SetInt(0)
	</event>
	
	<event name="onInit" params="element">
		element("alpha"):SetFloat(0.0)
	</event>
	
	<event name="updateComponents" params="element">
		local alpha = element("alpha"):GetFloat()
		element["Stat"]("alpha"):SetFloat(alpha)
		element["Value"]("alpha"):SetFloat(alpha)
	</event>
	
</template>