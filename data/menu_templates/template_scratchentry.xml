<template name="template_scratchentry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<size w="85*game.menuScaleX()" h="64*game.menuScaleX()" />
	
	<textComponent name="Text">
		<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="6*game.menuScaleY()" priorityOffset="-1" />
		<event name="onInit" params="component, element">
			component("multiline"):SetInt(0)
			component("font"):Set(game.getTextFont())
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
			component("text"):SetString(game.commaizeNumber(game.scratchEntryString(element("index"):GetInt())))
			component("size"):SetFloat(0.25*game.menuScaleX())
			component("layer"):SetString("MidPopUps")
			component("autoScale"):SetInt(1)
		</event>
	</textComponent>
	
	<event name="onInit" params="element">
		element("transitionState"):SetInt(0)
		element("transitionTimer"):SetFloat(0.0)

		if(game.hasHighResArt()) then
			element("spriteScale"):SetFloat(0.35)
		else
			element("spriteScale"):SetFloat(0.7)
		end
		
		local sprite = nil
		
		if(game.scratchEntrySheet(element("index"):GetInt()) == "") then
			sprite = menu:addTemplateElement("template_instancesprite", "iSprite", element)
		else
			sprite = menu:addTemplateElement("template_instancespritesheet", "iSprite", element)
			sprite("SheetName"):SetString(game.scratchEntrySheet(element("index"):GetInt()))
		end
		
		sprite("SpriteName"):SetString(game.scratchEntrySprite(element("index"):GetInt()))
		sprite("Size"):SetFloat(0.35*game.menuScaleX())

		if(game.hasHighResArt()) then
			sprite("Size"):SetFloat(0.35*game.menuScaleX())
		else
			sprite("Size"):SetFloat(0.7*game.menuScaleX())
		end

		sprite("Layer"):SetString("MidPopUps")
		sprite:setParent(element)
		sprite:setOrientation(lua_sys.MenuOrientation(0,-5*game.menuScaleY(),0, lua_sys.HCENTER, lua_sys.VCENTER))
		sprite:setRelativeObjectAnchors(lua_sys.HCENTER, lua_sys.VCENTER)
		sprite:init()
		sprite:setPositionBroadcast(true)
	</event>
	
	<event name="reveal" params="element">
		element("transitionState"):SetInt(1)
		element:GetElement("iSprite"):GetComponent("Sprite")("layer"):SetString("FrontPopUps")
		element["Text"]("layer"):SetString("FrontPopUps")
		lua_sys.playSoundFx(game.scratchRevealSfx(element("index"):GetInt()))
	</event>
	
	<event name="setVisible" params="element">
		element:GetElement("iSprite"):GetComponent("Sprite")("visible"):SetInt(1)
		if(game.showEntryValue(element("index"):GetInt())) then
			element["Text"]("visible"):SetInt(1)
		end
	</event>
	
	<event name="setInvisible" params="element">
		element:GetElement("iSprite"):GetComponent("Sprite")("visible"):SetInt(0)
		element["Text"]("visible"):SetInt(0)
	</event>
	
	<event name="onTick" params="element, dt">
		<![CDATA[		
			if(element("transitionState"):GetInt() == 1) then
				local timer = element("transitionTimer"):GetFloat()
				
				if(timer > 1.0) then
					element("transitionState"):SetInt(0)
					element:GetElement("iSprite"):GetComponent("Sprite")("size"):SetFloat(element("spriteScale"):GetFloat()*game.menuScaleX())
					element["Text"]("size"):SetFloat(0.25*game.menuScaleX())
				else
					element:GetElement("iSprite"):GetComponent("Sprite")("size"):SetFloat(element("spriteScale"):GetFloat()*game.menuScaleX()*((-1*timer*timer) + timer + 1))
					element["Text"]("size"):SetFloat(0.25*game.menuScaleX()*((-1*timer*timer) + timer + 1))
					element("transitionTimer"):SetFloat(timer + dt)
				end
			end
		]]>
	</event>
	
</template>