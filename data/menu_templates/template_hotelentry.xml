<template name="template_hotelentry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">

	<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />

	<event name="highlight" params="element">
		element["Anim"]["Sprite"]:setColor(1.0, 1.0, 1.0)
		element["NameFrame"]["Text"]:setColor(1.0, 1.0, 1.0)
		element["LevelFrame"]["Text"]:setColor(1.0, 1.0, 1.0)
	</event>

	<event name="disable" params="element">
		element["Anim"]["Sprite"]:setColor(0.33, 0.33, 0.33)
		element["NameFrame"]["Text"]:setColor(0.33, 0.33, 0.33)
		element["LevelFrame"]["Text"]:setColor(0.33, 0.33, 0.33)
	</event>

	<spriteSheetComponent name="Sprite">
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("market_frame")
			component("sheetName"):SetString("xml_resources/store_elements.xml")
			component("layer"):SetString("Clipping")
			component("size"):SetFloat(0.45*game.menuScaleX())
			component("visible"):SetInt(0)
		</event>
	</spriteSheetComponent>

	<element name="LevelFrame">
		<size w="130*game.menuScaleX()" h="16*game.menuScaleY()" />
		<position relativeTo="PARENT" vAnchor="BOTTOM" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size dependentOnElement="element:name()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-2*game.menuScaleX()" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(3*game.menuScaleX())
				component("size"):SetFloat(0.25*game.menuScaleY())
				component("autoScale"):SetInt(1)
				component("autoScaleFactor"):SetFloat(0.01)
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.getLocalizedText("LEVEL").." "..game.monsterLevel(element:parent()("ID"):GetInt()))
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>

	<element name="NameFrame">
		<size w="250*game.menuScaleX()" h="24*game.menuScaleY()" />
		<position relativeTo="LevelFrame" vAnchor="TOP" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<textComponent name="Text">
			<size dependentOnElement="element:name()" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="-2*game.menuScaleX()" yOffset="5*game.menuScaleX()" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("textPadding"):SetInt(3*game.menuScaleX())
				component("size"):SetFloat(0.4*game.menuScaleY())
				component("autoScale"):SetInt(1)
				component("autoScaleFactor"):SetFloat(0.01)

				component("font"):Set(game.getTextFont())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("noTranslate"):SetInt(1)
				component("text"):SetString(element:parent()("ItemTitle"):GetString())
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>

	<element name="Anim">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<aeComponent name="Sprite">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-10*game.menuScaleY()-10" priorityOffset="0" />
			<event name="onInit" params="component, element">
				<![CDATA[
					component("animationName"):SetString("xml_bin/"..element:parent()("AnimationFile"):GetString())
	
					local uniqueMonsterId = element:parent()("ID"):GetInt()
					local monsterId = game.monsterTypeId(uniqueMonsterId)

					-- Animation scaling/positioning	
					component("animation"):SetString("Idle")
					component("layer"):SetString("Clipping")
					
					if(game.isWubboxType(monsterId)) then
						component:setScale(Vector2(0.33*game.menuScaleX(),0.33*game.menuScaleX()))
						element:setOrientationPosition(Vector2((component:size().x / 2.0)-(3*game.menuScaleX()), component:size().y / 2.0 + (70*game.menuScaleX())))
					else						
						component("animation"):SetString("Store")
						component:setScale(Vector2(0.85*game.menuScaleY(),0.85*game.menuScaleY()))
						element:setOrientationPosition(Vector2((component:size().x / 2.0)-(3*game.menuScaleY()), component:size().y / 2.0 + (25*game.menuScaleY())))
					end

					-- Costume (if any)
					local equippedCostume = game.getEquippedCostumeForMonster(uniqueMonsterId)
					game.applyCostumeToAnimComponent(component, equippedCostume)
				]]>
			</event>
		</aeComponent>
	</element>

	<touchComponent name="Touch">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-5" />
		<event name="onTouchDown" params="component, element">
			element("deltaX"):SetFloat(0)
		</event>
		<event name="onTouchDrag" params="component, element, x, y, relX, relY, dx, dy">
			element("deltaX"):SetFloat(element("deltaX"):GetFloat()+math.abs(dx))
		</event>
		<event name="onTouchUp" params="component, element">
			<![CDATA[
				--no selection if dragging or if the menu is transitioning away
				if(element("deltaX"):GetFloat() < 10 and element:parent():parent()("transitionState"):GetInt() ~= 2) then
					game.setSelectedHotelMonsterID(element("ID"):GetString())
					element:parent():parent():DoStoredScript("select")
				end
			]]>
		</event>
	</touchComponent>
</template>
