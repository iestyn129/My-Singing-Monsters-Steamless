<template name="template_collectinfo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<hudScale scale="game.hudScale()" />
	
	<size dependentOnElement="element:name()" dependentOnComponent="Text" />
	
	<textComponent name="Text">
		<event name="onInit" params="component, element">
			element("cost"):SetInt(game.monsterEarnings(game.selectedMonsterId()))
		
			component("font"):Set(game.getTitleFont())
			component("size"):SetFloat(0.30)
			component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
			
			if(game.selectedObjType() == game.SpecificEntityType_MONSTER) then
				component("text"):SetString("+"..game.commaizeNumber(element("cost"):GetInt()))
			else
				component("text"):SetString("0")
			end
			
			if(game.isEtherealIsland()) then
				game.StoreContext_setEtherealTextColour(component)
			elseif(game.isAmberIsland()) then
				game.StoreContext_setRelicTextColour(component)
			else
				game.StoreContext_setCoinTextColour(component)
			end
			
			component("layer"):SetString("ContextBar")
		</event>
		<event name="onTick" params="component, element, dt">
			if((manager:isIdle() == true) and (element("cost"):GetInt() ~= game.monsterEarnings(game.selectedMonsterId()))) then
				if(game.selectedObjType() == game.SpecificEntityType_MONSTER) then
					element("cost"):SetInt(game.monsterEarnings(game.selectedMonsterId()))
					component("text"):SetString("+"..game.commaizeNumber(element("cost"):GetInt()))
				else
					component("text"):SetString("0")
				end
			end
		</event>
	</textComponent>
	
	<event name="SetEnabled" params="element">
		local text = element["Text"]
		text:setColor(text("red"):GetFloat() * 2.0, text("green"):GetFloat() * 2.0, text("blue"):GetFloat() * 2.0)
	</event>
	
	<event name="SetDisabled" params="element">
		local text = element["Text"]
		text:setColor(text("red"):GetFloat() * 0.5, text("green"):GetFloat() * 0.5, text("blue"):GetFloat() * 0.5)
	</event>
	
	<event name="SetVisible" params="element">
		element["Text"]("visible"):SetInt(1)
	</event>
	
	<event name="SetInvisible" params="element">
		element["Text"]("visible"):SetInt(0)
	</event>
	
</template>