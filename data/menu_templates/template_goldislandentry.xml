<template name="template_goldislandentry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<size dependentOnElement="bg" dependentOnComponent="GreySprite" />
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="GreySprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="GreySprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("selectable_bar_grey")
				component("sheetName"):SetString("xml_resources/breeding01.xml")
				component("size"):SetFloat(0.525*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="CharacterImage">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/breeding/"..game.getPortraitName(element:parent()("MonsterID"):GetInt()))
				component("size"):SetFloat(0.525*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteComponent>
	</element>
	
	<element name="monsterName">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="CharacterImage" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="3" yOffset="-8" priorityOffset="-1" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				local name = game.getMonsterName(element:parent()("MonsterID"):GetInt())
				
				if(string.len(name) &gt; 9) then
					name = (string.sub(name, 0, 8).."...")
				end
			
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.19*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("noTranslate"):SetInt(1)
				component("text"):SetString(name)
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>
	
	<element name="monsterType">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="CharacterImage" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="3*game.menuScaleX()" yOffset="8*game.menuScaleY()" priorityOffset="0" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.18*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.monsterType(element:parent()("MonsterID"):GetInt()))
				component("layer"):SetString("Clipping")
				component:setColor(0.75, 0.75, 0.75)
			</event>
		</textComponent>
	</element>

	<element name="levelSprite">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="monsterName" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				local spriteString = "monster_level_numbers_"
				component("spriteName"):SetString(spriteString..game.monsterLevel(element:parent()("MonsterID"):GetInt()))
				component("sheetName"):SetString("xml_resources/level_numbers.xml")
				component("size"):SetFloat(0.5*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteSheetComponent>
	</element>
	
	<touchComponent name="Touch">
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("dragging"):SetInt(0)
			component("touchStart"):SetInt(0)
		</event>
		<event name="onTouchDrag" params="component, element, x, y">
			component("dragging"):SetInt(component("dragging"):GetInt() + math.abs(y - component("touchStart"):GetInt()))
			component("touchStart"):SetInt(y)
		</event>
		<event name="onTouchDown" params="component, element, x, y">
			component("touchStart"):SetInt(y)	
		</event>
		<event name="onTouchUp" params="component, element">
			<![CDATA[
				if(component("dragging"):GetInt() < 10) then
					local monsterId = element("MonsterID"):GetInt()
					game.placeGoldMonster(game.monsterTypeId(monsterId), monsterId)
				end
				
				component("dragging"):SetInt(0)
				component("touchStart"):SetInt(0)
			]]>
		</event>
		<event name="onPostInit" params="component, element">
			local bg = element:GetElement("bg")
			component:setSize(Vector2(bg:absW()*1.25, bg:absH()*1.5))
			component("yOffset"):SetInt(bg:absH()*-0.25)
		</event>
	</touchComponent>
	
	<event name="onInit" params="element">
		local monsterId = element("MonsterID"):GetInt()
		local numGenes = game.numGenes(monsterId)
		local previous = nil
		
		for i=0,numGenes-1 do
			local geneType = game.geneType(monsterId, i)
			if(geneType ~= "") then
			
				local geneItem = menu:addTemplateElement("template_elementicon", "geneItem"..i, element)
				geneItem("SpriteName"):SetString(geneType)
				geneItem("SheetName"):SetString("xml_resources/hud02.xml")
				geneItem("Size"):SetFloat(0.25*game.hudScale())
				geneItem("Layer"):SetString("Clipping")
				
				if(previous == nil) then
					geneItem:setParent(element)
					geneItem:setOrientation(lua_sys.MenuOrientation(8, 0, -1, lua_sys.RIGHT, lua_sys.VCENTER))
					geneItem:setRelativeObjectAnchors(lua_sys.RIGHT, lua_sys.VCENTER)
				else
					geneItem:setParent(previous)
					geneItem:setOrientation(lua_sys.MenuOrientation(-2, 0, 0, lua_sys.RIGHT, lua_sys.VCENTER))
					geneItem:setRelativeObjectAnchors(lua_sys.LEFT, lua_sys.VCENTER)
				end
				
				geneItem:init()
				geneItem:setPositionBroadcast(true)
				previous = geneItem
			end
		end		
		
		--temp way to check if allowed on gold island to fix 3.2.0 --> 3.3.0 issue      
		local isAllowedOnGoldIsland = function(id)
			local allowedOnGold = {188, 201, 247, 267, 274} -- list of entities allowed on gold island
			local entityId = game.monsterEntityId(id)
			for i=1, #allowedOnGold do
				if allowedOnGold[i] == entityId then					
					return true
				end
			end
			return false
		end
		
		if(game.allowOnGold(monsterId) == false and not isAllowedOnGoldIsland(monsterId)) then
			element["bg"]["GreySprite"]:setColor(0.5, 0.5, 0.5)
			element["CharacterImage"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element["monsterName"]["Text"]:setColor(0.5, 0.5, 0.5)
			element["monsterType"]["Text"]:setColor(0.25, 0.25, 0.25)
			element["levelSprite"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			
			for i=0,numGenes-1 do
				local geneItem = element:GetElement("geneItem"..i)
				if(geneItem ~= nil) then
					geneItem["Sprite"]:setColor(0.5, 0.5, 0.5)
				end
			end
		end
	</event>
	
</template>