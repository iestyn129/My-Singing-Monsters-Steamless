<template name="template_premiumlock" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<size dependentOnElement="PremiumButton" />
	
	<template type="template_spritesheetbutton" name="PremiumButton">
		<templateVar name="$upSpriteName" equals="button_base_grey" />
		<templateVar name="$sheetName" equals="'xml_resources/context_buttons.xml'" />
		<templateVar name="$spriteScale" equals="0.4*game.menuScaleX()" />
		<templateVar name="$layer" equals="HUD" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="Overlay">
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				if(not game.disableMarketExtras()) then
					component("spriteName"):SetString("button_info")
					component("sheetName"):SetString("xml_resources/context_buttons.xml")
					component("size"):SetFloat(0.4*game.menuScaleX())
				else
					component("visible"):SetInt(0)
					
					element["UpSprite"]("spriteName"):SetString("button_lock")
					element["UpSprite"]("sheetName"):SetString("xml_resources/buttons01.xml")
					element["UpSprite"]("size"):SetFloat(0.5*game.menuScaleX())
					
					element:DoStoredScript("disable")
					element:parent()["LeftChain"]:setColor(0.5, 0.5, 0.5)
					element:parent()["RightChain"]:setColor(0.5, 0.5, 0.5)
				end
				component("layer"):SetString("HUD")
			</event>
		</spriteSheetComponent>
		<touchComponent name="Touch">
			<event name="onTouchDown" params="component, element">
				onTouchDown(component, element)
				element["Overlay"]:setColor(0.5, 0.5, 0.5)
			</event>
			<event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
				
				local text = game.getLocalizedText("NOTIFICATION_PREMIUM_CONTENT")
				text = select(1, text:gsub("%%ITEM_NAME%%", game.getLocalizedText(element:parent():parent()("ItemTitle"):GetString())))
				
				game.displayNotification(text)
			</event>
			<event name="onTouchRelease" params="component, element">
				onTouchRelease(component, element)
				element["Overlay"]:setColor(1.0, 1.0, 1.0)
			</event>
		</touchComponent>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["Overlay"]("visible"):SetInt(0)
			element["LeftChain"]("visible"):SetInt(0)
			element["RightChain"]("visible"):SetInt(0)
			element["Burst"]("visible"):SetInt(0)
			element["BurstOverlay"]("visible"):SetInt(0)
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["Overlay"]("visible"):SetInt(1)
			element["LeftChain"]("visible"):SetInt(1)
			element["RightChain"]("visible"):SetInt(1)
			element["Burst"]("visible"):SetInt(1)
			element["BurstOverlay"]("visible"):SetInt(1)
		</event>
	</template>
	
	<spriteSheetComponent name="Burst">
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="2" />
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("burst01")
			component("sheetName"):SetString("xml_resources/store_buttons01.xml")
			component("size"):SetFloat(1.5*game.menuScaleX())
			component("alpha"):SetFloat(0.15)
			component("layer"):SetString("HUD")
		</event>
	</spriteSheetComponent>
	
	<spriteSheetComponent name="BurstOverlay">
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="2" />
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("burst01")
			component("sheetName"):SetString("xml_resources/store_buttons01.xml")
			component("size"):SetFloat(1.5*game.menuScaleX())
			component("alpha"):SetFloat(0.5)
			component("layer"):SetString("HUD")
		</event>
		<event name="onTick" params="component, element, dt">
		<![CDATA[
			if(component("visible"):GetInt() == 1) then
				local rotation = component("rotation"):GetFloat()
				
				rotation = rotation + 0.15*dt
			
				if(rotation > 2*math.pi) then
					component("rotation"):SetFloat(rotation - 2*math.pi)
				else
					component("rotation"):SetFloat(rotation)
				end
			end
		]]>
		</event>
	</spriteSheetComponent>
	
	<spriteSheetComponent name="LeftChain">
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="RIGHT" xOffset="17*game.menuScaleX()" yOffset="10*game.menuScaleX()" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("chain01")
			component("sheetName"):SetString("xml_resources/buttons01.xml")
			component("size"):SetFloat(0.5*game.menuScaleX())
			if(component("isSourceRotated"):GetInt() == 1) then
				component("vFlip"):SetInt(1)
			else
				component("hFlip"):SetInt(1)
			end
			component("layer"):SetString("HUD")
		</event>
	</spriteSheetComponent>
	
	<spriteSheetComponent name="RightChain">
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="12*game.menuScaleX()" yOffset="10*game.menuScaleX()" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("spriteName"):SetString("chain01")
			component("sheetName"):SetString("xml_resources/buttons01.xml")
			component("size"):SetFloat(0.5*game.menuScaleX())
			component("layer"):SetString("HUD")
		</event>
	</spriteSheetComponent>
	
</template>