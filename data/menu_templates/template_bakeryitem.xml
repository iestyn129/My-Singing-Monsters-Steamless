<template name="template_bakeryitem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<size dependentOnElement="bg" dependentOnComponent="Sprite" />
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<spriteSheetComponent name="Sprite" >
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("selectable_bar_grey")
				component("sheetName"):SetString("xml_resources/breeding01.xml")
				component("size"):SetFloat(0.675*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="FoodSprite">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="-5" yOffset="0" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("food_0"..(element:parent()("itemNum"):GetInt()+1))
				component("sheetName"):SetString("xml_resources/hud01.xml")
				component("size"):SetFloat(0.55*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="FoodName">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="BOTTOM" hAnchor="LEFT" xOffset="45*game.menuScaleX()" yOffset="2" priorityOffset="-3" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.getLocalizedText(game.bakeryItemName(element:parent()("itemNum"):GetInt())))
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>
	
	<element name="AmountTime">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="FoodName" vAnchor="BOTTOM" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="5" yOffset="3" priorityOffset="0" />
		<textComponent name="Text">
			<event name="onInit" params="component, element">
				local itemNum = element:parent()("itemNum"):GetInt()
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.2*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component:setColor(0.7, 0.7, 0.7)
				
				local detailTxt = LOC("BAKE_ITEM_DETAIL")
				detailTxt = detailTxt:gsub("%${AMOUNT}", game.bakeryFoodReceived(itemNum))
				--grey
				local color = "#B3B3B3"
				if(game.hasBakeryModifier()) then
					--green: #4FF042
					color = "#4FF042"
				end
				detailTxt = detailTxt:gsub("%${COLOR}", color)
				detailTxt = detailTxt:gsub("%${TIME}", game.bakeryBakeTime(itemNum))
				component("text"):SetString(detailTxt)
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>
	
	<element name="CoinIcon">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="5" yOffset="0" priorityOffset="-1" />
		<spriteSheetComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString(game.StoreContext_SPRITE_COINS)
				component("sheetName"):SetString(game.StoreContext_CURRENCY_SPRITESHEET)
				component("size"):SetFloat(0.375*game.menuScaleX())
				component("layer"):SetString("Clipping")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="Price">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="CoinIcon" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="2" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<size w="50*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.28*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.commaizeNumber(game.bakeryCoinCost(element:parent()("itemNum"):GetInt())))
				game.StoreContext_setCoinTextColour(component)
				component("autoScaleFactor"):SetFloat(0.01)
				component("autoScale"):SetInt(1)
				component("layer"):SetString("Clipping")
			</event>
		</textComponent>
	</element>
	
	<touchComponent name="Touch">
		<size dependentOnElement="element:name()" dependentOnComponent="bg" />
		<event name="onInit" params="component, element">
			component("dragging"):SetInt(0)
			component("touchStart"):SetInt(0)
			element:SetupGenericListener(game.engineReceiver(), "game::msg::MsgConfirmationSubmission", "gotMsgConfirmationSubmission")
		</event>
		<event name="onTouchDrag" params="component, element, x, y">
			component("dragging"):SetInt(component("dragging"):GetInt() + math.abs(y - component("touchStart"):GetInt()))
			component("touchStart"):SetInt(y)
		</event>
		<event name="onTouchDown" params="component, element, x, y">
			component("touchStart"):SetInt(y)	
		</event>
		<event name="onTouchUp" params="component, element">
			<![CDATA[
				if(component("dragging"):GetInt() < 10) then
					local msg = game.getLocalizedText("BAKING_TEXT")
					msg = select(1, msg:gsub("XXX", game.getLocalizedText(element["FoodName"]["Text"]("text"):GetString())))
					msg = select(1, msg:gsub("YYY", element["Price"]["Text"]("text"):GetString()))
					game.displayConfirmation(("BAKERY_PURCHASE"..element:name()), msg, "food_0"..(element("itemNum"):GetInt()+1), "xml_resources/hud01.xml")	
				end
				component("dragging"):SetInt(0)
				component("touchStart"):SetInt(0)
			]]>
		</event>
	</touchComponent>
	
	<event name="gotMsgConfirmationSubmission" params="element, msg">
		if((msg.messageID == ("BAKERY_PURCHASE"..element:name())) and (msg.choice == true)) then
			if(game.bake(element("itemNum"):GetInt())) then
				game.popPopUp()
				manager:setContext("BAKERY")
			end
		end
	</event>
	
	<element name="Functions" params="element">
		<event name="greyout" params="element">
			element:parent()["Price"]["Text"]:setColor(0.5, 0.5, 0.5)
			element:parent()["CoinIcon"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element:parent()["AmountTime"]["Text"]:setColor(0.5, 0.5, 0.5)
			element:parent()["FoodName"]["Text"]:setColor(0.5, 0.5, 0.5)
			element:parent()["FoodSprite"]["Sprite"]:setColor(0.5, 0.5, 0.5)
			element:parent()["bg"]["Sprite"]:setColor(0.5, 0.5, 0.5)
		</event>
		<event name="hide" params="element">
			element:parent()["Price"]["Text"]("visible"):SetInt(0)
			element:parent()["CoinIcon"]["Sprite"]("visible"):SetInt(0)
			element:parent()["AmountTime"]["Text"]("visible"):SetInt(0)
			element:parent()["FoodName"]["Text"]("visible"):SetInt(0)
			element:parent()["FoodSprite"]["Sprite"]("visible"):SetInt(0)
			element:parent()["bg"]["Sprite"]("visible"):SetInt(0)
		</event>
	</element>
	
</template>