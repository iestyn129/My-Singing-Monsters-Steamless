<template name="template_tribalrequestentry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	<size w="0.75*lua_sys.screenWidth()" h="35*game.menuScaleY()" />
	
	<event name="onInit" params="element">
		element("selected"):SetInt(0)
		element:setPositionBroadcast(true)
	</event>
	
	<event name="toggle" params = "element">
		if(element("selected"):GetInt() == 0) then
			element:parent():DoStoredScript("deselectAll")
			element("selected"):SetInt(1)
			element["BackgroundElement"]["SpriteySprite"]("height"):SetInt(38 * game.menuScaleY() * 2)
			element["MonsterPic"]["Sprite"]("size"):SetFloat(game.menuScaleY() * 0.5)
			element["hack"]["AcceptButton"]:DoStoredScript("setVisible")
			element["DeclineButton"]:DoStoredScript("setVisible")
			element["ExpandElement"]["Sprite"]("visible"):SetInt(1)
			element["JoinDescription"]["Text"]("visible"):SetInt(1)
			element:parent():parent():DoStoredScript("hideFooter")
		else
			element("selected"):SetInt(0)
			element["BackgroundElement"]["SpriteySprite"]("height"):SetInt(38 * game.menuScaleY())
			element["MonsterPic"]["Sprite"]("size"):SetFloat(game.menuScaleY() * 0.3)
			element["hack"]["AcceptButton"]:DoStoredScript("setInvisible")
			element["DeclineButton"]:DoStoredScript("setInvisible")
			element["ExpandElement"]["Sprite"]("visible"):SetInt(0)
			element["JoinDescription"]["Text"]("visible"):SetInt(0)
			element:parent():parent():DoStoredScript("showFooter")
		end
	</event>

	<element name="BackgroundElement">
		<size dependentOnElement="element:name()" dependentOnComponent="SpriteySprite" />
		<event name="onInit" params="element">
			element:setPositionBroadcast(true)
		</event>
		<ninesliceComponent name="SpriteySprite">
			<size w="0.7525*lua_sys.screenWidth()" h="38*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(0.0)
				component("bottomHeight"):SetFloat(0.0)
				component("leftWidth"):SetFloat(0.0)
				component("rightWidth"):SetFloat(0.0)
				component("includeBorder"):SetInt(1)
				component("spriteName"):SetString("gfx/menu/friendGreen"..element:parent()("greyColor"):GetInt())
				component("layer"):SetString("MidPopUps")
				element:setPositionBroadcast(true)
			</event>
		</ninesliceComponent>
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()"/>
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER"/>
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchUp" params="component, element">
				lua_sys.playSoundFx("audio/sfx/menu_click.wav")
				element:parent():DoStoredScript("toggle")
			</event>
		</touchComponent>
	</element>

	<element name="MonsterPic">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="element:parent()" vAnchor="TOP" hAnchor="LEFT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="3*game.menuScaleX()" yOffset="3*game.menuScaleY()" priorityOffset="-1" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("gfx/breeding/"..element:parent()("DisplayPic"):GetString())
				component("layer"):SetString("MidPopUps")
				component("size"):SetFloat(game.menuScaleY()*0.3)
			</event>
		</spriteComponent>
	</element>
	
	<element name="RequestLabel">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="MonsterPic" vAnchor="TOP" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="7*game.menuScaleY()" priorityOffset="0" />
		<textComponent name="Text">
			<size w="110*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString("REQUEST_LABEL")
				component:setColor(0.28, 0.91, 0.28)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="Name">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="RequestLabel" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<size w="110*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("noTranslate"):SetInt(1)
				component("text"):SetString(element:parent()("DisplayName"):GetString())
				include("MenuHelpers").ShrinkTextToWidth(element:parent()("DisplayName"):GetString(),component, 200*game.menuScaleX())
				component:setColor(1.0, 0.9, 0.09)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
	</element>
	
	<element name="hack">
		<template type="template_spritesheetbutton" name="AcceptButton">
			<templateVar name="$upSpriteName" equals="'button_long_purp@2x'" />
			<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
			<templateVar name="$spriteScale" equals="0.38*game.menuScaleX()" />
			<templateVar name="$layer" equals="MidPopUps" />		
			<position relativeTo="element:parent():parent()" vAnchor="TOP" hAnchor="RIGHT" />
			<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="5*game.menuScaleY()" priorityOffset="-2" />
			<event name="onPostInit" params="element">
				element:DoStoredScript("setInvisible")
			</event>
			<event name="setVisible" params="element">
				<![CDATA[
					if(game.myTribeMembers() >= game.maxTribeMembers()) then
						element:DoStoredScript("disable")
						element["UpSprite"]("visible"):SetInt(1)
						element["Text"]("visible"):SetInt(1)
					else
						setVisible(element)
					end
					element["Label"]("visible"):SetInt(1)					
				]]>
			</event>
			<event name="setInvisible" params="element">
				setInvisible(element)
				element["Label"]("visible"):SetInt(0)
			</event>
			<function name="disable" params="element">
				disable(element)
				element["Label"]:setColor(0.5, 0.5, 0.5)
			</function>
			<textComponent name="Label">
				<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-2" priorityOffset="-1" />
				<event name="onInit" params="component, element">
					component("multiline"):SetInt(0)
					component("font"):Set(game.getTitleFont())
					component("size"):SetFloat(0.25*game.menuScaleX())
					component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
					component("text"):SetString("LABEL_ACCEPT")
					component("textPadding"):SetInt(4*game.menuScaleX())
					component("autoScaleFactor"):SetFloat(0.01)
					component("autoScale"):SetInt(1)
					component("layer"):SetString("MidPopUps")
				</event>
			</textComponent>
			<touchComponent name="Touch">
				<size dependentOnElement="element:name()"/>
				<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER"/>
				<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
				<event name="onTouchUp" params="component, element">
					onTouchUp(component, element)
					local monsterId = element:parent():parent()("MonsterID"):GetInt()
					local userId = element:parent():parent()("UserID"):GetInt()
					game.placeTribalRequest(userId, monsterId)
				</event>
			</touchComponent>
		</template>
	</element>
	
	<element name="ExpandElement">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="element:parent()[&quot;hack&quot;][&quot;AcceptButton&quot;]" vAnchor="BOTTOM" hAnchor="RIGHT" />
		<orientation vAnchor="TOP" hAnchor="RIGHT" xOffset="0" yOffset="2" priorityOffset="0" />
		<event name="onInit" params="element">
			element:setPositionBroadcast(true)
		</event>
		<ninesliceComponent name="Sprite">
			<size w="293*game.menuScaleX()" h="38*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("topHeight"):SetFloat(0.0)
				component("bottomHeight"):SetFloat(0.0)
				component("leftWidth"):SetFloat(0.0)
				component("rightWidth"):SetFloat(0.0)
				component("includeBorder"):SetInt(1)
				component("layer"):SetString("MidPopUps")
				component("spriteName"):SetString("gfx/menu/friendGreen2")
				component("layer"):SetString("MidPopUps")
				element:setPositionBroadcast(true)
				component("visible"):SetInt(0)
			</event>
		</ninesliceComponent>
	</element>
	
	<element name="JoinDescription">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="ExpandElement" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="5*game.menuScaleX()" yOffset="0" priorityOffset="-2" />
		<textComponent name="Text">
			<size w="110*game.menuScaleX()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString("LABEL_JOIN_DESC")
				component("layer"):SetString("MidPopUps")
				component("visible"):SetInt(0)
			</event>
		</textComponent>
	</element>
	
	<template type="template_spritesheetbutton" name="DeclineButton">
		<templateVar name="$upSpriteName" equals="'button_long_grey@2x'" />
		<templateVar name="$sheetName" equals="'xml_resources/buttons01.xml'" />
		<templateVar name="$spriteScale" equals="0.38*game.menuScaleX()" />
		<templateVar name="$layer" equals="MidPopUps" />
		<position relativeTo="ExpandElement" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="0" yOffset="0" priorityOffset="-1" />
		<event name="onInit" params="element">
			onInit(element)
			element:setPositionBroadcast(true)
		</event>
		<event name="onPostInit" params="element">
			element:DoStoredScript("setInvisible")
		</event>
		<event name="setVisible" params="element">
			setVisible(element)
			element["Label"]("visible"):SetInt(1)
		</event>
		<event name="setInvisible" params="element">
			setInvisible(element)
			element["Label"]("visible"):SetInt(0)
		</event>
		<textComponent name="Label">
			<size dependentOnElement="element:name()" dependentOnComponent="UpSprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="-2" priorityOffset="-1" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTitleFont())
				component("size"):SetFloat(0.25*game.menuScaleX())
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_HCENTER_ALIGNED)
				component("text"):SetString(game.getLocalizedText("LABEL_DECLINE"))
				component("textPadding"):SetInt(4*game.menuScaleX())
				component("autoScaleFactor"):SetFloat(0.01)
				component("autoScale"):SetInt(1)
				component("layer"):SetString("MidPopUps")
			</event>
		</textComponent>
        <touchComponent name="Touch">
            <size dependentOnElement="element:name()"/>
            <position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER"/>
            <orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
            <event name="onTouchUp" params="component, element">
				onTouchUp(component, element)
				game.declineTribeInvite(-element:parent()("UserID"):GetInt())
			</event>
        </touchComponent>
	</template>
	
</template>