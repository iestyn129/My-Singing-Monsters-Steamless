<template name="template_switch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">
	
	<defaultTemplateVar name="$layer" equals="'HUD'" />
	<defaultTemplateVar name="$scale" equals="1.0" />
	<defaultTemplateVar name="$textScale" equals="1.0" />
	<defaultTemplateVar name="$sfx" equals="[[audio/sfx/menu_click_small.wav]]" />
	<defaultTemplateVar name="$label" equals="''"/>
	<defaultTemplateVar name="$check" equals="1"/>
	<defaultTemplateVar name="$offSprite" equals="'menu_switch_off'"/>
	<defaultTemplateVar name="$onSprite" equals="'menu_switch_on'"/>
	<defaultTemplateVar name="$sheetName" equals="'xml_resources/menu_assets_01.xml'"/>
	<defaultTemplateVar name="$alpha" equals="1.0"/>
	
	<size dependentOnElement="element:name()" dependentOnComponent="Switch" />
	
	<event name="onInit" params="element">
		element("alpha"):SetFloat($alpha)
	</event>
	
	<event name="turnOn" params="element">
		element["Switch"]["Sprite"]("spriteName"):SetString("$onSprite")
	</event>
	<event name="turnOff" params="element">
		element["Switch"]["Sprite"]("spriteName"):SetString("$offSprite")
	</event>
	
	<element name="Switch">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="element:parent()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="Sprite">
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onInit" params="component, element">
				
				if(($check == 1) and (element["Sprite"]("visible"):GetInt() == 1)) then
					component("spriteName"):SetString("$onSprite")
				else
					component("spriteName"):SetString("$offSprite")
				end
				component("sheetName"):SetString("$sheetName")
				component("size"):SetFloat($scale)
				component("layer"):SetString("$layer")
				component("alpha"):SetFloat($alpha)
			</event>
		</spriteSheetComponent>
		
		<touchComponent name="Touch">
			<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
			<event name="onTouchDown" params="component, element">
				--element["Switch"]["Sprite"]:setColor(0.5, 0.5, 0.5)
				element:parent():DoStoredScript("touchDownCallback")
			</event>
			<event name="onTouchUp" params="component, element">
				--element["Sprite"]:setColor(1.0, 1.0, 1.0)
				lua_sys.playSoundFx("$sfx")
				element:parent():DoStoredScript("touchUpCallback")
			</event>
			<event name="onTouchRelease" params="component, element">
				--element["Sprite"]:setColor(1.0, 1.0, 1.0)
				element:parent():DoStoredScript("touchReleaseCallback")
			</event>
		</touchComponent>
	</element>
	
	<element name="Label">
		<hudScale scale="game.hudScale()" />
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="Switch" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="RIGHT" xOffset="6" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<size w="150*game.hudScale()" h="35*game.menuScaleY()" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(1)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat($textScale)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString("$label")
				component("autoScale"):SetInt(1)
				component("layer"):SetString("$layer")
				component("alpha"):SetFloat($alpha)
			</event>
		</textComponent>
	</element>
	
	<event name="touchUpCallback" params="element">
	</event>
	<event name="touchDownCallback" params="element">
	</event>
	<event name="touchReleaseCallback" params="element">
	</event>
	
	<function name="updateComponents" params="element">
		local alpha = element("alpha"):GetFloat()
		element["Switch"]["Sprite"]("alpha"):SetFloat(alpha)
		element["Label"]["Text"]("alpha"):SetFloat(alpha)
	</function>
	
	<event name="hide" params="element">
		element["Switch"]["Sprite"]("visible"):SetInt(0)
		element["Label"]["Text"]("visible"):SetInt(0)
		element["Switch"]["Touch"]("enabled"):SetInt(0)
	</event>
	
</template>