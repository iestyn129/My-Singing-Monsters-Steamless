<template name="template_monikerSelectEntry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../menus/menu.xsd">

	<size dependentOnElement="bg" dependentOnComponent="Sprite" />
	
	<element name="bg">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
			<position relativeTo="PARENT" vAnchor="VCENTER" hAnchor="HCENTER" />
			<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<spriteSheetComponent name="Sprite" >
			<event name="onInit" params="component, element">
				component("spriteName"):SetString("selectable_bar_grey")
				component("sheetName"):SetString("xml_resources/breeding01.xml")
				component("size"):SetFloat(0.525*lua_sys.screenWidth()/480)
				component("layer"):SetString("FrontPopUps")
			</event>
		</spriteSheetComponent>
	</element>
	
	<element name="MusicBacking">
		<size dependentOnElement="element:name()" dependentOnComponent="Sprite" />
		<position relativeTo="bg" vAnchor="VCENTER" hAnchor="LEFT" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="-1" />
		<spriteComponent name="Sprite">
			<event name="onInit" params="component, element">
				<![CDATA[
					component("spriteName"):SetString("gfx/menu/scroll_frame")
					component:setScale(Vector2(0.4*lua_sys.screenWidth()/480, 0.4*lua_sys.screenWidth()/480))
					component("layer"):SetString("FrontPopUps")
				]]>
			</event>
		</spriteComponent>
	</element>

	<element name="MonikerName">
		<size dependentOnElement="element:name()" dependentOnComponent="Text" />
		<position relativeTo="MusicBacking" vAnchor="VCENTER" hAnchor="RIGHT" />
		<orientation vAnchor="VCENTER" hAnchor="LEFT" xOffset="0" yOffset="0" priorityOffset="0" />
		<textComponent name="Text">
			<size w="150*lua_sys.screenWidth()/480" />
			<event name="onInit" params="component, element">
				component("multiline"):SetInt(0)
				component("font"):Set(game.getTextFont())
				component("size"):SetFloat(0.25*lua_sys.screenWidth()/480)
				component("alignment"):SetInt(lua_sys.MenuTextComponent_TEXT_LEFT_ALIGNED)
				component("text"):SetString(game.getMonikerText(element:parent()("entryId"):GetInt()))
				component("autoScaleFactor"):SetFloat(0.01)
				component("autoScale"):SetInt(1)
				component("layer"):SetString("FrontPopUps")
			</event>
		</textComponent>
	</element>
	
	<touchComponent name="Touch">
		<size dependentOnElement="element:name()"/>
		<position relativeTo="element:name()" vAnchor="VCENTER" hAnchor="HCENTER" />
		<orientation vAnchor="VCENTER" hAnchor="HCENTER" xOffset="0" yOffset="0" priorityOffset="0" />
		<event name="onInit" params="component, element">
			component("dragging"):SetInt(0)
			component("touchStart"):SetInt(0)
		</event>
		<event name="onTouchDrag" params="component, element, x, y">
			component("dragging"):SetInt(component("dragging"):GetInt() + math.abs(y - component("touchStart"):GetInt()))
			component("touchStart"):SetInt(y)
		</event>
		<event name="onTouchDown" params="component, element, x, y">
			component("touchStart"):SetInt(y)
		</event>
		<event name="onTouchUp" params="component, element">
			<![CDATA[
				if(component("dragging"):GetInt() < 10) then
					local list = element:parent()
					list("SelectedEntry"):SetInt(element("entryId"):GetInt())
					list:DoStoredScript("onSelectEntry")
				end
				component("dragging"):SetInt(0)
				component("touchStart"):SetInt(0)
			]]>
		</event>
		<event name="onTouchRelease" params="component, element">
			component("dragging"):SetInt(0)
			component("touchStart"):SetInt(0)
		</event>
	</touchComponent>
	
	<event name="updateClipping" params="element">
		<![CDATA[
			local MenuHelpers = include("MenuHelpers")
			MenuHelpers.SetClipFrom(element:GetComponent("Touch"), element)
			MenuHelpers.SetClipFrom(element:GetElement("MonikerName"):GetComponent("Text"), element)
			MenuHelpers.SetClipFrom(element:GetElement("MusicBacking"):GetComponent("Sprite"), element)
			MenuHelpers.SetClipFrom(element:GetElement("bg"):GetComponent("Sprite"), element)
		]]>
	</event>

</template>